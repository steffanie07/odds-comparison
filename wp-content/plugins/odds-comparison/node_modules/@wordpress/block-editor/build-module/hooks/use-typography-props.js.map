{"version":3,"sources":["@wordpress/block-editor/src/hooks/use-typography-props.js"],"names":["classnames","getInlineStyles","getFontSizeClass","getTypographyFontSizeValue","getFluidTypographyOptionsFromSettings","kebabCase","getTypographyClassesAndStyles","attributes","settings","typographyStyles","style","typography","fluidTypographySettings","fontSize","size","fontFamilyClassName","fontFamily","className"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,UAAP,MAAuB,YAAvB;AAEA;AACA;AACA;;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SACCC,0BADD,EAECC,qCAFD,QAGO,8CAHP;AAIA,SAASC,SAAT,QAA0B,iBAA1B;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,6BAAT,CAAwCC,UAAxC,EAAoDC,QAApD,EAA+D;AACrE,MAAIC,gBAAgB,GAAGF,UAAU,EAAEG,KAAZ,EAAmBC,UAAnB,IAAiC,EAAxD;AACA,QAAMC,uBAAuB,GAC5BR,qCAAqC,CAAEI,QAAF,CADtC;AAGAC,EAAAA,gBAAgB,GAAG,EAClB,GAAGA,gBADe;AAElBI,IAAAA,QAAQ,EAAEV,0BAA0B,CACnC;AAAEW,MAAAA,IAAI,EAAEP,UAAU,EAAEG,KAAZ,EAAmBC,UAAnB,EAA+BE;AAAvC,KADmC,EAEnCD,uBAFmC;AAFlB,GAAnB;AAQA,QAAMF,KAAK,GAAGT,eAAe,CAAE;AAAEU,IAAAA,UAAU,EAAEF;AAAd,GAAF,CAA7B;AACA,QAAMM,mBAAmB,GAAG,CAAC,CAAER,UAAU,EAAES,UAAf,GACxB,OAAOX,SAAS,CAAEE,UAAU,CAACS,UAAb,CAA2B,cADnB,GAEzB,EAFH;AAIA,QAAMC,SAAS,GAAGjB,UAAU,CAC3Be,mBAD2B,EAE3Bb,gBAAgB,CAAEK,UAAU,EAAEM,QAAd,CAFW,CAA5B;AAKA,SAAO;AACNI,IAAAA,SADM;AAENP,IAAAA;AAFM,GAAP;AAIA","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * Internal dependencies\n */\nimport { getInlineStyles } from './style';\nimport { getFontSizeClass } from '../components/font-sizes';\nimport {\n\tgetTypographyFontSizeValue,\n\tgetFluidTypographyOptionsFromSettings,\n} from '../components/global-styles/typography-utils';\nimport { kebabCase } from '../utils/object';\n\n/*\n * This utility is intended to assist where the serialization of the typography\n * block support is being skipped for a block but the typography related CSS\n * styles still need to be generated so they can be applied to inner elements.\n */\n/**\n * Provides the CSS class names and inline styles for a block's typography support\n * attributes.\n *\n * @param {Object}         attributes Block attributes.\n * @param {Object|boolean} settings   Merged theme.json settings\n *\n * @return {Object} Typography block support derived CSS classes & styles.\n */\nexport function getTypographyClassesAndStyles( attributes, settings ) {\n\tlet typographyStyles = attributes?.style?.typography || {};\n\tconst fluidTypographySettings =\n\t\tgetFluidTypographyOptionsFromSettings( settings );\n\n\ttypographyStyles = {\n\t\t...typographyStyles,\n\t\tfontSize: getTypographyFontSizeValue(\n\t\t\t{ size: attributes?.style?.typography?.fontSize },\n\t\t\tfluidTypographySettings\n\t\t),\n\t};\n\n\tconst style = getInlineStyles( { typography: typographyStyles } );\n\tconst fontFamilyClassName = !! attributes?.fontFamily\n\t\t? `has-${ kebabCase( attributes.fontFamily ) }-font-family`\n\t\t: '';\n\n\tconst className = classnames(\n\t\tfontFamilyClassName,\n\t\tgetFontSizeClass( attributes?.fontSize )\n\t);\n\n\treturn {\n\t\tclassName,\n\t\tstyle,\n\t};\n}\n"]}