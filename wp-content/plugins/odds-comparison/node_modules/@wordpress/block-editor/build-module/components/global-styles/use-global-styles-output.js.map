{"version":3,"sources":["@wordpress/block-editor/src/components/global-styles/use-global-styles-output.js"],"names":["__EXPERIMENTAL_STYLE_PROPERTY","STYLE_PROPERTY","__EXPERIMENTAL_ELEMENTS","ELEMENTS","getBlockSupport","getBlockTypes","store","blocksStore","useSelect","renderToString","useContext","useMemo","getCSSRules","PRESET_METADATA","ROOT_BLOCK_SELECTOR","scopeSelector","getBlockCSSSelector","getTypographyFontSizeValue","getFluidTypographyOptionsFromSettings","GlobalStylesContext","useGlobalSetting","PresetDuotoneFilter","getGapCSSValue","blockEditorStore","LAYOUT_DEFINITIONS","getValueFromObjectPath","kebabCase","setImmutably","BLOCK_SUPPORT_FEATURE_LEVEL_SELECTORS","__experimentalBorder","color","spacing","typography","compileStyleValue","uncompiledValue","VARIABLE_REFERENCE_PREFIX","VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE","VARIABLE_PATH_SEPARATOR_TOKEN_STYLE","startsWith","variable","slice","length","split","join","getPresetsDeclarations","blockPresets","mergedSettings","reduce","declarations","path","valueKey","valueFunc","cssVarInfix","presetByOrigin","forEach","origin","value","push","slug","getPresetsClasses","blockSelector","classes","classSuffix","propertyName","classSelectorToUse","selectorToUse","map","selector","getPresetsSvgFilters","filter","metadata","at","flatMap","preset","flattenTree","input","prefix","token","result","Object","keys","key","newKey","replace","newLeaf","newPrefix","concatFeatureVariationSelectorString","featureSelector","styleVariationSelector","featureSelectors","combinedSelectors","trim","getFeatureDeclarations","selectors","styles","entries","feature","isShorthand","subfeature","subfeatureSelector","subfeatureStyles","newDeclarations","getStylesDeclarations","root","featureStyles","blockStyles","useRootPaddingAlign","tree","isRoot","output","properties","useEngine","rootOnly","pathToValue","styleValue","entry","name","prop","cssProperty","extraRules","rule","ruleValue","ref","refPath","size","settings","getLayoutStyles","layoutDefinitions","style","hasBlockGapSupport","hasFallbackGapSupport","fallbackGapValue","ruleset","gapValue","blockGap","values","className","spacingStyles","spacingStyle","rules","cssValue","combinedSelector","validDisplayModes","displayMode","baseStyles","includes","baseStyle","STYLE_KEYS","pickStyleKeys","treeToPickFrom","pickedEntries","clonedEntries","JSON","parse","stringify","fromEntries","getNodesWithStyles","blockSelectors","nodes","elements","blocks","blockName","node","variations","variation","duotoneSelector","hasLayoutSupport","styleVariationSelectors","elementName","sel","elementSelectors","elementSelector","getNodesWithSettings","pickPresets","presets","custom","blockCustom","toCustomProperties","customProps","toStyles","disableLayoutStyles","nodesWithStyles","nodesWithSettings","useRootPaddingAwareAlignments","contentSize","wideSize","layout","featureDeclarations","cssSelector","styleVariationName","styleVariations","baseSelector","styleVariationDeclarations","duotoneStyles","duotoneDeclarations","pseudoSelectorStyles","pseudoKey","pseudoStyle","pseudoDeclarations","_selector","pseudoRule","toSvgFilters","getSelectorsConfig","blockType","rootSelector","config","featureKey","featureName","getBlockSelectors","blockTypes","getBlockStyles","duotoneSupport","supports","__experimentalLayout","__experimentalDefault","blockStyleVariations","undefined","updateConfigWithSeparator","needsSeparatorStyleUpdate","background","text","border","processCSSNesting","css","processedCSS","parts","part","useGlobalStylesOutputWithConfig","mergedConfig","select","getSettings","customProperties","globalStyles","svgs","isGlobalStyles","assets","__unstableType","useGlobalStylesOutput","merged"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\t__EXPERIMENTAL_STYLE_PROPERTY as STYLE_PROPERTY,\n\t__EXPERIMENTAL_ELEMENTS as ELEMENTS,\n\tgetBlockSupport,\n\tgetBlockTypes,\n\tstore as blocksStore,\n} from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\nimport { renderToString, useContext, useMemo } from '@wordpress/element';\nimport { getCSSRules } from '@wordpress/style-engine';\n\n/**\n * Internal dependencies\n */\nimport { PRESET_METADATA, ROOT_BLOCK_SELECTOR, scopeSelector } from './utils';\nimport { getBlockCSSSelector } from './get-block-css-selector';\nimport {\n\tgetTypographyFontSizeValue,\n\tgetFluidTypographyOptionsFromSettings,\n} from './typography-utils';\nimport { GlobalStylesContext } from './context';\nimport { useGlobalSetting } from './hooks';\nimport { PresetDuotoneFilter } from '../duotone/components';\nimport { getGapCSSValue } from '../../hooks/gap';\nimport { store as blockEditorStore } from '../../store';\nimport { LAYOUT_DEFINITIONS } from '../../layouts/definitions';\nimport {\n\tgetValueFromObjectPath,\n\tkebabCase,\n\tsetImmutably,\n} from '../../utils/object';\n\n// List of block support features that can have their related styles\n// generated under their own feature level selector rather than the block's.\nconst BLOCK_SUPPORT_FEATURE_LEVEL_SELECTORS = {\n\t__experimentalBorder: 'border',\n\tcolor: 'color',\n\tspacing: 'spacing',\n\ttypography: 'typography',\n};\n\nfunction compileStyleValue( uncompiledValue ) {\n\tconst VARIABLE_REFERENCE_PREFIX = 'var:';\n\tconst VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE = '|';\n\tconst VARIABLE_PATH_SEPARATOR_TOKEN_STYLE = '--';\n\n\tif ( uncompiledValue?.startsWith?.( VARIABLE_REFERENCE_PREFIX ) ) {\n\t\tconst variable = uncompiledValue\n\t\t\t.slice( VARIABLE_REFERENCE_PREFIX.length )\n\t\t\t.split( VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE )\n\t\t\t.join( VARIABLE_PATH_SEPARATOR_TOKEN_STYLE );\n\t\treturn `var(--wp--${ variable })`;\n\t}\n\treturn uncompiledValue;\n}\n\n/**\n * Transform given preset tree into a set of style declarations.\n *\n * @param {Object} blockPresets\n * @param {Object} mergedSettings Merged theme.json settings.\n *\n * @return {Array<Object>} An array of style declarations.\n */\nfunction getPresetsDeclarations( blockPresets = {}, mergedSettings ) {\n\treturn PRESET_METADATA.reduce(\n\t\t( declarations, { path, valueKey, valueFunc, cssVarInfix } ) => {\n\t\t\tconst presetByOrigin = getValueFromObjectPath(\n\t\t\t\tblockPresets,\n\t\t\t\tpath,\n\t\t\t\t[]\n\t\t\t);\n\t\t\t[ 'default', 'theme', 'custom' ].forEach( ( origin ) => {\n\t\t\t\tif ( presetByOrigin[ origin ] ) {\n\t\t\t\t\tpresetByOrigin[ origin ].forEach( ( value ) => {\n\t\t\t\t\t\tif ( valueKey && ! valueFunc ) {\n\t\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\t\t`--wp--preset--${ cssVarInfix }--${ kebabCase(\n\t\t\t\t\t\t\t\t\tvalue.slug\n\t\t\t\t\t\t\t\t) }: ${ value[ valueKey ] }`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tvalueFunc &&\n\t\t\t\t\t\t\ttypeof valueFunc === 'function'\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\t\t`--wp--preset--${ cssVarInfix }--${ kebabCase(\n\t\t\t\t\t\t\t\t\tvalue.slug\n\t\t\t\t\t\t\t\t) }: ${ valueFunc( value, mergedSettings ) }`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn declarations;\n\t\t},\n\t\t[]\n\t);\n}\n\n/**\n * Transform given preset tree into a set of preset class declarations.\n *\n * @param {?string} blockSelector\n * @param {Object}  blockPresets\n * @return {string} CSS declarations for the preset classes.\n */\nfunction getPresetsClasses( blockSelector = '*', blockPresets = {} ) {\n\treturn PRESET_METADATA.reduce(\n\t\t( declarations, { path, cssVarInfix, classes } ) => {\n\t\t\tif ( ! classes ) {\n\t\t\t\treturn declarations;\n\t\t\t}\n\n\t\t\tconst presetByOrigin = getValueFromObjectPath(\n\t\t\t\tblockPresets,\n\t\t\t\tpath,\n\t\t\t\t[]\n\t\t\t);\n\t\t\t[ 'default', 'theme', 'custom' ].forEach( ( origin ) => {\n\t\t\t\tif ( presetByOrigin[ origin ] ) {\n\t\t\t\t\tpresetByOrigin[ origin ].forEach( ( { slug } ) => {\n\t\t\t\t\t\tclasses.forEach( ( { classSuffix, propertyName } ) => {\n\t\t\t\t\t\t\tconst classSelectorToUse = `.has-${ kebabCase(\n\t\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t\t) }-${ classSuffix }`;\n\t\t\t\t\t\t\tconst selectorToUse = blockSelector\n\t\t\t\t\t\t\t\t.split( ',' ) // Selector can be \"h1, h2, h3\"\n\t\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t\t( selector ) =>\n\t\t\t\t\t\t\t\t\t\t`${ selector }${ classSelectorToUse }`\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.join( ',' );\n\t\t\t\t\t\t\tconst value = `var(--wp--preset--${ cssVarInfix }--${ kebabCase(\n\t\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t\t) })`;\n\t\t\t\t\t\t\tdeclarations += `${ selectorToUse }{${ propertyName }: ${ value } !important;}`;\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t\treturn declarations;\n\t\t},\n\t\t''\n\t);\n}\n\nfunction getPresetsSvgFilters( blockPresets = {} ) {\n\treturn PRESET_METADATA.filter(\n\t\t// Duotone are the only type of filters for now.\n\t\t( metadata ) => metadata.path.at( -1 ) === 'duotone'\n\t).flatMap( ( metadata ) => {\n\t\tconst presetByOrigin = getValueFromObjectPath(\n\t\t\tblockPresets,\n\t\t\tmetadata.path,\n\t\t\t{}\n\t\t);\n\t\treturn [ 'default', 'theme' ]\n\t\t\t.filter( ( origin ) => presetByOrigin[ origin ] )\n\t\t\t.flatMap( ( origin ) =>\n\t\t\t\tpresetByOrigin[ origin ].map( ( preset ) =>\n\t\t\t\t\trenderToString(\n\t\t\t\t\t\t<PresetDuotoneFilter\n\t\t\t\t\t\t\tpreset={ preset }\n\t\t\t\t\t\t\tkey={ preset.slug }\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t\t.join( '' );\n\t} );\n}\n\nfunction flattenTree( input = {}, prefix, token ) {\n\tlet result = [];\n\tObject.keys( input ).forEach( ( key ) => {\n\t\tconst newKey = prefix + kebabCase( key.replace( '/', '-' ) );\n\t\tconst newLeaf = input[ key ];\n\n\t\tif ( newLeaf instanceof Object ) {\n\t\t\tconst newPrefix = newKey + token;\n\t\t\tresult = [ ...result, ...flattenTree( newLeaf, newPrefix, token ) ];\n\t\t} else {\n\t\t\tresult.push( `${ newKey }: ${ newLeaf }` );\n\t\t}\n\t} );\n\treturn result;\n}\n\n/**\n * Gets variation selector string from feature selector.\n *\n * @param {string} featureSelector        The feature selector.\n *\n * @param {string} styleVariationSelector The style variation selector.\n * @return {string} Combined selector string.\n *\n */\nfunction concatFeatureVariationSelectorString(\n\tfeatureSelector,\n\tstyleVariationSelector\n) {\n\tconst featureSelectors = featureSelector.split( ',' );\n\tconst combinedSelectors = [];\n\tfeatureSelectors.forEach( ( selector ) => {\n\t\tcombinedSelectors.push(\n\t\t\t`${ styleVariationSelector.trim() }${ selector.trim() }`\n\t\t);\n\t} );\n\treturn combinedSelectors.join( ', ' );\n}\n\n/**\n * Generate style declarations for a block's custom feature and subfeature\n * selectors.\n *\n * NOTE: The passed `styles` object will be mutated by this function.\n *\n * @param {Object} selectors Custom selectors object for a block.\n * @param {Object} styles    A block's styles object.\n *\n * @return {Object} Style declarations.\n */\nconst getFeatureDeclarations = ( selectors, styles ) => {\n\tconst declarations = {};\n\n\tObject.entries( selectors ).forEach( ( [ feature, selector ] ) => {\n\t\t// We're only processing features/subfeatures that have styles.\n\t\tif ( feature === 'root' || ! styles?.[ feature ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isShorthand = typeof selector === 'string';\n\n\t\t// If we have a selector object instead of shorthand process it.\n\t\tif ( ! isShorthand ) {\n\t\t\tObject.entries( selector ).forEach(\n\t\t\t\t( [ subfeature, subfeatureSelector ] ) => {\n\t\t\t\t\t// Don't process root feature selector yet or any\n\t\t\t\t\t// subfeature that doesn't have a style.\n\t\t\t\t\tif (\n\t\t\t\t\t\tsubfeature === 'root' ||\n\t\t\t\t\t\t! styles?.[ feature ][ subfeature ]\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create a temporary styles object and build\n\t\t\t\t\t// declarations for subfeature.\n\t\t\t\t\tconst subfeatureStyles = {\n\t\t\t\t\t\t[ feature ]: {\n\t\t\t\t\t\t\t[ subfeature ]: styles[ feature ][ subfeature ],\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t\tconst newDeclarations =\n\t\t\t\t\t\tgetStylesDeclarations( subfeatureStyles );\n\n\t\t\t\t\t// Merge new declarations in with any others that\n\t\t\t\t\t// share the same selector.\n\t\t\t\t\tdeclarations[ subfeatureSelector ] = [\n\t\t\t\t\t\t...( declarations[ subfeatureSelector ] || [] ),\n\t\t\t\t\t\t...newDeclarations,\n\t\t\t\t\t];\n\n\t\t\t\t\t// Remove the subfeature's style now it will be\n\t\t\t\t\t// included under its own selector not the block's.\n\t\t\t\t\tdelete styles[ feature ][ subfeature ];\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\t// Now subfeatures have been processed and removed, we can\n\t\t// process root, or shorthand, feature selectors.\n\t\tif ( isShorthand || selector.root ) {\n\t\t\tconst featureSelector = isShorthand ? selector : selector.root;\n\n\t\t\t// Create temporary style object and build declarations for feature.\n\t\t\tconst featureStyles = { [ feature ]: styles[ feature ] };\n\t\t\tconst newDeclarations = getStylesDeclarations( featureStyles );\n\n\t\t\t// Merge new declarations with any others that share the selector.\n\t\t\tdeclarations[ featureSelector ] = [\n\t\t\t\t...( declarations[ featureSelector ] || [] ),\n\t\t\t\t...newDeclarations,\n\t\t\t];\n\n\t\t\t// Remove the feature from the block's styles now as it will be\n\t\t\t// included under its own selector not the block's.\n\t\t\tdelete styles[ feature ];\n\t\t}\n\t} );\n\n\treturn declarations;\n};\n\n/**\n * Transform given style tree into a set of style declarations.\n *\n * @param {Object}  blockStyles         Block styles.\n *\n * @param {string}  selector            The selector these declarations should attach to.\n *\n * @param {boolean} useRootPaddingAlign Whether to use CSS custom properties in root selector.\n *\n * @param {Object}  tree                A theme.json tree containing layout definitions.\n *\n * @return {Array} An array of style declarations.\n */\nexport function getStylesDeclarations(\n\tblockStyles = {},\n\tselector = '',\n\tuseRootPaddingAlign,\n\ttree = {}\n) {\n\tconst isRoot = ROOT_BLOCK_SELECTOR === selector;\n\tconst output = Object.entries( STYLE_PROPERTY ).reduce(\n\t\t(\n\t\t\tdeclarations,\n\t\t\t[ key, { value, properties, useEngine, rootOnly } ]\n\t\t) => {\n\t\t\tif ( rootOnly && ! isRoot ) {\n\t\t\t\treturn declarations;\n\t\t\t}\n\t\t\tconst pathToValue = value;\n\t\t\tif ( pathToValue[ 0 ] === 'elements' || useEngine ) {\n\t\t\t\treturn declarations;\n\t\t\t}\n\n\t\t\tconst styleValue = getValueFromObjectPath(\n\t\t\t\tblockStyles,\n\t\t\t\tpathToValue\n\t\t\t);\n\n\t\t\t// Root-level padding styles don't currently support strings with CSS shorthand values.\n\t\t\t// This may change: https://github.com/WordPress/gutenberg/issues/40132.\n\t\t\tif (\n\t\t\t\tkey === '--wp--style--root--padding' &&\n\t\t\t\t( typeof styleValue === 'string' || ! useRootPaddingAlign )\n\t\t\t) {\n\t\t\t\treturn declarations;\n\t\t\t}\n\n\t\t\tif ( properties && typeof styleValue !== 'string' ) {\n\t\t\t\tObject.entries( properties ).forEach( ( entry ) => {\n\t\t\t\t\tconst [ name, prop ] = entry;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t! getValueFromObjectPath( styleValue, [ prop ], false )\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Do not create a declaration\n\t\t\t\t\t\t// for sub-properties that don't have any value.\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst cssProperty = name.startsWith( '--' )\n\t\t\t\t\t\t? name\n\t\t\t\t\t\t: kebabCase( name );\n\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t`${ cssProperty }: ${ compileStyleValue(\n\t\t\t\t\t\t\tgetValueFromObjectPath( styleValue, [ prop ] )\n\t\t\t\t\t\t) }`\n\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t} else if (\n\t\t\t\tgetValueFromObjectPath( blockStyles, pathToValue, false )\n\t\t\t) {\n\t\t\t\tconst cssProperty = key.startsWith( '--' )\n\t\t\t\t\t? key\n\t\t\t\t\t: kebabCase( key );\n\t\t\t\tdeclarations.push(\n\t\t\t\t\t`${ cssProperty }: ${ compileStyleValue(\n\t\t\t\t\t\tgetValueFromObjectPath( blockStyles, pathToValue )\n\t\t\t\t\t) }`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn declarations;\n\t\t},\n\t\t[]\n\t);\n\n\t// The goal is to move everything to server side generated engine styles\n\t// This is temporary as we absorb more and more styles into the engine.\n\tconst extraRules = getCSSRules( blockStyles );\n\textraRules.forEach( ( rule ) => {\n\t\t// Don't output padding properties if padding variables are set.\n\t\tif (\n\t\t\tisRoot &&\n\t\t\tuseRootPaddingAlign &&\n\t\t\trule.key.startsWith( 'padding' )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tconst cssProperty = rule.key.startsWith( '--' )\n\t\t\t? rule.key\n\t\t\t: kebabCase( rule.key );\n\n\t\tlet ruleValue = rule.value;\n\t\tif ( typeof ruleValue !== 'string' && ruleValue?.ref ) {\n\t\t\tconst refPath = ruleValue.ref.split( '.' );\n\t\t\truleValue = getValueFromObjectPath( tree, refPath );\n\t\t\t// Presence of another ref indicates a reference to another dynamic value.\n\t\t\t// Pointing to another dynamic value is not supported.\n\t\t\tif ( ! ruleValue || ruleValue?.ref ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Calculate fluid typography rules where available.\n\t\tif ( cssProperty === 'font-size' ) {\n\t\t\t/*\n\t\t\t * getTypographyFontSizeValue() will check\n\t\t\t * if fluid typography has been activated and also\n\t\t\t * whether the incoming value can be converted to a fluid value.\n\t\t\t * Values that already have a \"clamp()\" function will not pass the test,\n\t\t\t * and therefore the original $value will be returned.\n\t\t\t */\n\t\t\truleValue = getTypographyFontSizeValue(\n\t\t\t\t{ size: ruleValue },\n\t\t\t\tgetFluidTypographyOptionsFromSettings( tree?.settings )\n\t\t\t);\n\t\t}\n\n\t\toutput.push( `${ cssProperty }: ${ ruleValue }` );\n\t} );\n\n\treturn output;\n}\n\n/**\n * Get generated CSS for layout styles by looking up layout definitions provided\n * in theme.json, and outputting common layout styles, and specific blockGap values.\n *\n * @param {Object}  props\n * @param {Object}  props.layoutDefinitions     Layout definitions, keyed by layout type.\n * @param {Object}  props.style                 A style object containing spacing values.\n * @param {string}  props.selector              Selector used to group together layout styling rules.\n * @param {boolean} props.hasBlockGapSupport    Whether or not the theme opts-in to blockGap support.\n * @param {boolean} props.hasFallbackGapSupport Whether or not the theme allows fallback gap styles.\n * @param {?string} props.fallbackGapValue      An optional fallback gap value if no real gap value is available.\n * @return {string} Generated CSS rules for the layout styles.\n */\nexport function getLayoutStyles( {\n\tlayoutDefinitions = LAYOUT_DEFINITIONS,\n\tstyle,\n\tselector,\n\thasBlockGapSupport,\n\thasFallbackGapSupport,\n\tfallbackGapValue,\n} ) {\n\tlet ruleset = '';\n\tlet gapValue = hasBlockGapSupport\n\t\t? getGapCSSValue( style?.spacing?.blockGap )\n\t\t: '';\n\n\t// Ensure a fallback gap value for the root layout definitions,\n\t// and use a fallback value if one is provided for the current block.\n\tif ( hasFallbackGapSupport ) {\n\t\tif ( selector === ROOT_BLOCK_SELECTOR ) {\n\t\t\tgapValue = ! gapValue ? '0.5em' : gapValue;\n\t\t} else if ( ! hasBlockGapSupport && fallbackGapValue ) {\n\t\t\tgapValue = fallbackGapValue;\n\t\t}\n\t}\n\n\tif ( gapValue && layoutDefinitions ) {\n\t\tObject.values( layoutDefinitions ).forEach(\n\t\t\t( { className, name, spacingStyles } ) => {\n\t\t\t\t// Allow outputting fallback gap styles for flex layout type when block gap support isn't available.\n\t\t\t\tif (\n\t\t\t\t\t! hasBlockGapSupport &&\n\t\t\t\t\t'flex' !== name &&\n\t\t\t\t\t'grid' !== name\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( spacingStyles?.length ) {\n\t\t\t\t\tspacingStyles.forEach( ( spacingStyle ) => {\n\t\t\t\t\t\tconst declarations = [];\n\n\t\t\t\t\t\tif ( spacingStyle.rules ) {\n\t\t\t\t\t\t\tObject.entries( spacingStyle.rules ).forEach(\n\t\t\t\t\t\t\t\t( [ cssProperty, cssValue ] ) => {\n\t\t\t\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\t\t\t\t`${ cssProperty }: ${\n\t\t\t\t\t\t\t\t\t\t\tcssValue ? cssValue : gapValue\n\t\t\t\t\t\t\t\t\t\t}`\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( declarations.length ) {\n\t\t\t\t\t\t\tlet combinedSelector = '';\n\n\t\t\t\t\t\t\tif ( ! hasBlockGapSupport ) {\n\t\t\t\t\t\t\t\t// For fallback gap styles, use lower specificity, to ensure styles do not unintentionally override theme styles.\n\t\t\t\t\t\t\t\tcombinedSelector =\n\t\t\t\t\t\t\t\t\tselector === ROOT_BLOCK_SELECTOR\n\t\t\t\t\t\t\t\t\t\t? `:where(.${ className }${\n\t\t\t\t\t\t\t\t\t\t\t\tspacingStyle?.selector || ''\n\t\t\t\t\t\t\t\t\t\t  })`\n\t\t\t\t\t\t\t\t\t\t: `:where(${ selector }.${ className }${\n\t\t\t\t\t\t\t\t\t\t\t\tspacingStyle?.selector || ''\n\t\t\t\t\t\t\t\t\t\t  })`;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcombinedSelector =\n\t\t\t\t\t\t\t\t\tselector === ROOT_BLOCK_SELECTOR\n\t\t\t\t\t\t\t\t\t\t? `:where(${ selector } .${ className })${\n\t\t\t\t\t\t\t\t\t\t\t\tspacingStyle?.selector || ''\n\t\t\t\t\t\t\t\t\t\t  }`\n\t\t\t\t\t\t\t\t\t\t: `${ selector }-${ className }${\n\t\t\t\t\t\t\t\t\t\t\t\tspacingStyle?.selector || ''\n\t\t\t\t\t\t\t\t\t\t  }`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\truleset += `${ combinedSelector } { ${ declarations.join(\n\t\t\t\t\t\t\t\t'; '\n\t\t\t\t\t\t\t) }; }`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t// For backwards compatibility, ensure the legacy block gap CSS variable is still available.\n\t\tif ( selector === ROOT_BLOCK_SELECTOR && hasBlockGapSupport ) {\n\t\t\truleset += `${ selector } { --wp--style--block-gap: ${ gapValue }; }`;\n\t\t}\n\t}\n\n\t// Output base styles\n\tif ( selector === ROOT_BLOCK_SELECTOR && layoutDefinitions ) {\n\t\tconst validDisplayModes = [ 'block', 'flex', 'grid' ];\n\t\tObject.values( layoutDefinitions ).forEach(\n\t\t\t( { className, displayMode, baseStyles } ) => {\n\t\t\t\tif (\n\t\t\t\t\tdisplayMode &&\n\t\t\t\t\tvalidDisplayModes.includes( displayMode )\n\t\t\t\t) {\n\t\t\t\t\truleset += `${ selector } .${ className } { display:${ displayMode }; }`;\n\t\t\t\t}\n\n\t\t\t\tif ( baseStyles?.length ) {\n\t\t\t\t\tbaseStyles.forEach( ( baseStyle ) => {\n\t\t\t\t\t\tconst declarations = [];\n\n\t\t\t\t\t\tif ( baseStyle.rules ) {\n\t\t\t\t\t\t\tObject.entries( baseStyle.rules ).forEach(\n\t\t\t\t\t\t\t\t( [ cssProperty, cssValue ] ) => {\n\t\t\t\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\t\t\t\t`${ cssProperty }: ${ cssValue }`\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( declarations.length ) {\n\t\t\t\t\t\t\tconst combinedSelector = `${ selector } .${ className }${\n\t\t\t\t\t\t\t\tbaseStyle?.selector || ''\n\t\t\t\t\t\t\t}`;\n\t\t\t\t\t\t\truleset += `${ combinedSelector } { ${ declarations.join(\n\t\t\t\t\t\t\t\t'; '\n\t\t\t\t\t\t\t) }; }`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\treturn ruleset;\n}\n\nconst STYLE_KEYS = [\n\t'border',\n\t'color',\n\t'dimensions',\n\t'spacing',\n\t'typography',\n\t'filter',\n\t'outline',\n\t'shadow',\n];\n\nfunction pickStyleKeys( treeToPickFrom ) {\n\tif ( ! treeToPickFrom ) {\n\t\treturn {};\n\t}\n\tconst entries = Object.entries( treeToPickFrom );\n\tconst pickedEntries = entries.filter( ( [ key ] ) =>\n\t\tSTYLE_KEYS.includes( key )\n\t);\n\t// clone the style objects so that `getFeatureDeclarations` can remove consumed keys from it\n\tconst clonedEntries = pickedEntries.map( ( [ key, style ] ) => [\n\t\tkey,\n\t\tJSON.parse( JSON.stringify( style ) ),\n\t] );\n\treturn Object.fromEntries( clonedEntries );\n}\n\nexport const getNodesWithStyles = ( tree, blockSelectors ) => {\n\tconst nodes = [];\n\n\tif ( ! tree?.styles ) {\n\t\treturn nodes;\n\t}\n\n\t// Top-level.\n\tconst styles = pickStyleKeys( tree.styles );\n\tif ( styles ) {\n\t\tnodes.push( {\n\t\t\tstyles,\n\t\t\tselector: ROOT_BLOCK_SELECTOR,\n\t\t} );\n\t}\n\n\tObject.entries( ELEMENTS ).forEach( ( [ name, selector ] ) => {\n\t\tif ( tree.styles?.elements?.[ name ] ) {\n\t\t\tnodes.push( {\n\t\t\t\tstyles: tree.styles?.elements?.[ name ],\n\t\t\t\tselector,\n\t\t\t} );\n\t\t}\n\t} );\n\n\t// Iterate over blocks: they can have styles & elements.\n\tObject.entries( tree.styles?.blocks ?? {} ).forEach(\n\t\t( [ blockName, node ] ) => {\n\t\t\tconst blockStyles = pickStyleKeys( node );\n\n\t\t\tif ( node?.variations ) {\n\t\t\t\tconst variations = {};\n\t\t\t\tObject.keys( node.variations ).forEach( ( variation ) => {\n\t\t\t\t\tvariations[ variation ] = pickStyleKeys(\n\t\t\t\t\t\tnode.variations[ variation ]\n\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t\tblockStyles.variations = variations;\n\t\t\t}\n\t\t\tif ( blockStyles && blockSelectors?.[ blockName ]?.selector ) {\n\t\t\t\tnodes.push( {\n\t\t\t\t\tduotoneSelector:\n\t\t\t\t\t\tblockSelectors[ blockName ].duotoneSelector,\n\t\t\t\t\tfallbackGapValue:\n\t\t\t\t\t\tblockSelectors[ blockName ].fallbackGapValue,\n\t\t\t\t\thasLayoutSupport:\n\t\t\t\t\t\tblockSelectors[ blockName ].hasLayoutSupport,\n\t\t\t\t\tselector: blockSelectors[ blockName ].selector,\n\t\t\t\t\tstyles: blockStyles,\n\t\t\t\t\tfeatureSelectors:\n\t\t\t\t\t\tblockSelectors[ blockName ].featureSelectors,\n\t\t\t\t\tstyleVariationSelectors:\n\t\t\t\t\t\tblockSelectors[ blockName ].styleVariationSelectors,\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tObject.entries( node?.elements ?? {} ).forEach(\n\t\t\t\t( [ elementName, value ] ) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tvalue &&\n\t\t\t\t\t\tblockSelectors?.[ blockName ] &&\n\t\t\t\t\t\tELEMENTS[ elementName ]\n\t\t\t\t\t) {\n\t\t\t\t\t\tnodes.push( {\n\t\t\t\t\t\t\tstyles: value,\n\t\t\t\t\t\t\tselector: blockSelectors[ blockName ]?.selector\n\t\t\t\t\t\t\t\t.split( ',' )\n\t\t\t\t\t\t\t\t.map( ( sel ) => {\n\t\t\t\t\t\t\t\t\tconst elementSelectors =\n\t\t\t\t\t\t\t\t\t\tELEMENTS[ elementName ].split( ',' );\n\t\t\t\t\t\t\t\t\treturn elementSelectors.map(\n\t\t\t\t\t\t\t\t\t\t( elementSelector ) =>\n\t\t\t\t\t\t\t\t\t\t\tsel + ' ' + elementSelector\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.join( ',' ),\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t);\n\n\treturn nodes;\n};\n\nexport const getNodesWithSettings = ( tree, blockSelectors ) => {\n\tconst nodes = [];\n\n\tif ( ! tree?.settings ) {\n\t\treturn nodes;\n\t}\n\n\tconst pickPresets = ( treeToPickFrom ) => {\n\t\tlet presets = {};\n\t\tPRESET_METADATA.forEach( ( { path } ) => {\n\t\t\tconst value = getValueFromObjectPath( treeToPickFrom, path, false );\n\t\t\tif ( value !== false ) {\n\t\t\t\tpresets = setImmutably( presets, path, value );\n\t\t\t}\n\t\t} );\n\t\treturn presets;\n\t};\n\n\t// Top-level.\n\tconst presets = pickPresets( tree.settings );\n\tconst custom = tree.settings?.custom;\n\tif ( Object.keys( presets ).length > 0 || custom ) {\n\t\tnodes.push( {\n\t\t\tpresets,\n\t\t\tcustom,\n\t\t\tselector: ROOT_BLOCK_SELECTOR,\n\t\t} );\n\t}\n\n\t// Blocks.\n\tObject.entries( tree.settings?.blocks ?? {} ).forEach(\n\t\t( [ blockName, node ] ) => {\n\t\t\tconst blockPresets = pickPresets( node );\n\t\t\tconst blockCustom = node.custom;\n\t\t\tif ( Object.keys( blockPresets ).length > 0 || blockCustom ) {\n\t\t\t\tnodes.push( {\n\t\t\t\t\tpresets: blockPresets,\n\t\t\t\t\tcustom: blockCustom,\n\t\t\t\t\tselector: blockSelectors[ blockName ]?.selector,\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t);\n\n\treturn nodes;\n};\n\nexport const toCustomProperties = ( tree, blockSelectors ) => {\n\tconst settings = getNodesWithSettings( tree, blockSelectors );\n\tlet ruleset = '';\n\tsettings.forEach( ( { presets, custom, selector } ) => {\n\t\tconst declarations = getPresetsDeclarations( presets, tree?.settings );\n\t\tconst customProps = flattenTree( custom, '--wp--custom--', '--' );\n\t\tif ( customProps.length > 0 ) {\n\t\t\tdeclarations.push( ...customProps );\n\t\t}\n\n\t\tif ( declarations.length > 0 ) {\n\t\t\truleset += `${ selector }{${ declarations.join( ';' ) };}`;\n\t\t}\n\t} );\n\n\treturn ruleset;\n};\n\nexport const toStyles = (\n\ttree,\n\tblockSelectors,\n\thasBlockGapSupport,\n\thasFallbackGapSupport,\n\tdisableLayoutStyles = false\n) => {\n\tconst nodesWithStyles = getNodesWithStyles( tree, blockSelectors );\n\tconst nodesWithSettings = getNodesWithSettings( tree, blockSelectors );\n\tconst useRootPaddingAlign = tree?.settings?.useRootPaddingAwareAlignments;\n\tconst { contentSize, wideSize } = tree?.settings?.layout || {};\n\n\t/*\n\t * Reset default browser margin on the root body element.\n\t * This is set on the root selector **before** generating the ruleset\n\t * from the `theme.json`. This is to ensure that if the `theme.json` declares\n\t * `margin` in its `spacing` declaration for the `body` element then these\n\t * user-generated values take precedence in the CSS cascade.\n\t * @link https://github.com/WordPress/gutenberg/issues/36147.\n\t */\n\tlet ruleset = 'body {margin: 0;';\n\n\tif ( contentSize ) {\n\t\truleset += ` --wp--style--global--content-size: ${ contentSize };`;\n\t}\n\n\tif ( wideSize ) {\n\t\truleset += ` --wp--style--global--wide-size: ${ wideSize };`;\n\t}\n\n\tif ( useRootPaddingAlign ) {\n\t\t/*\n\t\t * These rules reproduce the ones from https://github.com/WordPress/gutenberg/blob/79103f124925d1f457f627e154f52a56228ed5ad/lib/class-wp-theme-json-gutenberg.php#L2508\n\t\t * almost exactly, but for the selectors that target block wrappers in the front end. This code only runs in the editor, so it doesn't need those selectors.\n\t\t */\n\t\truleset += `padding-right: 0; padding-left: 0; padding-top: var(--wp--style--root--padding-top); padding-bottom: var(--wp--style--root--padding-bottom) }\n\t\t\t.has-global-padding { padding-right: var(--wp--style--root--padding-right); padding-left: var(--wp--style--root--padding-left); }\n\t\t\t.has-global-padding :where(.has-global-padding) { padding-right: 0; padding-left: 0; }\n\t\t\t.has-global-padding > .alignfull { margin-right: calc(var(--wp--style--root--padding-right) * -1); margin-left: calc(var(--wp--style--root--padding-left) * -1); }\n\t\t\t.has-global-padding :where(.has-global-padding) > .alignfull { margin-right: 0; margin-left: 0; }\n\t\t\t.has-global-padding > .alignfull:where(:not(.has-global-padding)) > :where(.wp-block:not(.alignfull),p,h1,h2,h3,h4,h5,h6,ul,ol) { padding-right: var(--wp--style--root--padding-right); padding-left: var(--wp--style--root--padding-left); }\n\t\t\t.has-global-padding :where(.has-global-padding) > .alignfull:where(:not(.has-global-padding)) > :where(.wp-block:not(.alignfull),p,h1,h2,h3,h4,h5,h6,ul,ol) { padding-right: 0; padding-left: 0;`;\n\t}\n\n\truleset += '}';\n\n\tnodesWithStyles.forEach(\n\t\t( {\n\t\t\tselector,\n\t\t\tduotoneSelector,\n\t\t\tstyles,\n\t\t\tfallbackGapValue,\n\t\t\thasLayoutSupport,\n\t\t\tfeatureSelectors,\n\t\t\tstyleVariationSelectors,\n\t\t} ) => {\n\t\t\t// Process styles for block support features with custom feature level\n\t\t\t// CSS selectors set.\n\t\t\tif ( featureSelectors ) {\n\t\t\t\tconst featureDeclarations = getFeatureDeclarations(\n\t\t\t\t\tfeatureSelectors,\n\t\t\t\t\tstyles\n\t\t\t\t);\n\n\t\t\t\tObject.entries( featureDeclarations ).forEach(\n\t\t\t\t\t( [ cssSelector, declarations ] ) => {\n\t\t\t\t\t\tif ( declarations.length ) {\n\t\t\t\t\t\t\tconst rules = declarations.join( ';' );\n\t\t\t\t\t\t\truleset += `${ cssSelector }{${ rules };}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( styleVariationSelectors ) {\n\t\t\t\tObject.entries( styleVariationSelectors ).forEach(\n\t\t\t\t\t( [ styleVariationName, styleVariationSelector ] ) => {\n\t\t\t\t\t\tconst styleVariations =\n\t\t\t\t\t\t\tstyles?.variations?.[ styleVariationName ];\n\t\t\t\t\t\tif ( styleVariations ) {\n\t\t\t\t\t\t\t// If the block uses any custom selectors for block support, add those first.\n\t\t\t\t\t\t\tif ( featureSelectors ) {\n\t\t\t\t\t\t\t\tconst featureDeclarations =\n\t\t\t\t\t\t\t\t\tgetFeatureDeclarations(\n\t\t\t\t\t\t\t\t\t\tfeatureSelectors,\n\t\t\t\t\t\t\t\t\t\tstyleVariations\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tObject.entries( featureDeclarations ).forEach(\n\t\t\t\t\t\t\t\t\t( [ baseSelector, declarations ] ) => {\n\t\t\t\t\t\t\t\t\t\tif ( declarations.length ) {\n\t\t\t\t\t\t\t\t\t\t\tconst cssSelector =\n\t\t\t\t\t\t\t\t\t\t\t\tconcatFeatureVariationSelectorString(\n\t\t\t\t\t\t\t\t\t\t\t\t\tbaseSelector,\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyleVariationSelector\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tconst rules =\n\t\t\t\t\t\t\t\t\t\t\t\tdeclarations.join( ';' );\n\t\t\t\t\t\t\t\t\t\t\truleset += `${ cssSelector }{${ rules };}`;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Otherwise add regular selectors.\n\t\t\t\t\t\t\tconst styleVariationDeclarations =\n\t\t\t\t\t\t\t\tgetStylesDeclarations(\n\t\t\t\t\t\t\t\t\tstyleVariations,\n\t\t\t\t\t\t\t\t\tstyleVariationSelector,\n\t\t\t\t\t\t\t\t\tuseRootPaddingAlign,\n\t\t\t\t\t\t\t\t\ttree\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif ( styleVariationDeclarations.length ) {\n\t\t\t\t\t\t\t\truleset += `${ styleVariationSelector }{${ styleVariationDeclarations.join(\n\t\t\t\t\t\t\t\t\t';'\n\t\t\t\t\t\t\t\t) };}`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Process duotone styles.\n\t\t\tif ( duotoneSelector ) {\n\t\t\t\tconst duotoneStyles = {};\n\t\t\t\tif ( styles?.filter ) {\n\t\t\t\t\tduotoneStyles.filter = styles.filter;\n\t\t\t\t\tdelete styles.filter;\n\t\t\t\t}\n\t\t\t\tconst duotoneDeclarations =\n\t\t\t\t\tgetStylesDeclarations( duotoneStyles );\n\t\t\t\tif ( duotoneDeclarations.length ) {\n\t\t\t\t\truleset += `${ duotoneSelector }{${ duotoneDeclarations.join(\n\t\t\t\t\t\t';'\n\t\t\t\t\t) };}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Process blockGap and layout styles.\n\t\t\tif (\n\t\t\t\t! disableLayoutStyles &&\n\t\t\t\t( ROOT_BLOCK_SELECTOR === selector || hasLayoutSupport )\n\t\t\t) {\n\t\t\t\truleset += getLayoutStyles( {\n\t\t\t\t\tstyle: styles,\n\t\t\t\t\tselector,\n\t\t\t\t\thasBlockGapSupport,\n\t\t\t\t\thasFallbackGapSupport,\n\t\t\t\t\tfallbackGapValue,\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Process the remaining block styles (they use either normal block class or __experimentalSelector).\n\t\t\tconst declarations = getStylesDeclarations(\n\t\t\t\tstyles,\n\t\t\t\tselector,\n\t\t\t\tuseRootPaddingAlign,\n\t\t\t\ttree\n\t\t\t);\n\t\t\tif ( declarations?.length ) {\n\t\t\t\truleset += `${ selector }{${ declarations.join( ';' ) };}`;\n\t\t\t}\n\n\t\t\t// Check for pseudo selector in `styles` and handle separately.\n\t\t\tconst pseudoSelectorStyles = Object.entries( styles ).filter(\n\t\t\t\t( [ key ] ) => key.startsWith( ':' )\n\t\t\t);\n\n\t\t\tif ( pseudoSelectorStyles?.length ) {\n\t\t\t\tpseudoSelectorStyles.forEach(\n\t\t\t\t\t( [ pseudoKey, pseudoStyle ] ) => {\n\t\t\t\t\t\tconst pseudoDeclarations =\n\t\t\t\t\t\t\tgetStylesDeclarations( pseudoStyle );\n\n\t\t\t\t\t\tif ( ! pseudoDeclarations?.length ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// `selector` maybe provided in a form\n\t\t\t\t\t\t// where block level selectors have sub element\n\t\t\t\t\t\t// selectors appended to them as a comma separated\n\t\t\t\t\t\t// string.\n\t\t\t\t\t\t// e.g. `h1 a,h2 a,h3 a,h4 a,h5 a,h6 a`;\n\t\t\t\t\t\t// Split and append pseudo selector to create\n\t\t\t\t\t\t// the proper rules to target the elements.\n\t\t\t\t\t\tconst _selector = selector\n\t\t\t\t\t\t\t.split( ',' )\n\t\t\t\t\t\t\t.map( ( sel ) => sel + pseudoKey )\n\t\t\t\t\t\t\t.join( ',' );\n\n\t\t\t\t\t\tconst pseudoRule = `${ _selector }{${ pseudoDeclarations.join(\n\t\t\t\t\t\t\t';'\n\t\t\t\t\t\t) };}`;\n\n\t\t\t\t\t\truleset += pseudoRule;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t);\n\n\t/* Add alignment / layout styles */\n\truleset =\n\t\truleset +\n\t\t'.wp-site-blocks > .alignleft { float: left; margin-right: 2em; }';\n\truleset =\n\t\truleset +\n\t\t'.wp-site-blocks > .alignright { float: right; margin-left: 2em; }';\n\truleset =\n\t\truleset +\n\t\t'.wp-site-blocks > .aligncenter { justify-content: center; margin-left: auto; margin-right: auto; }';\n\n\tif ( hasBlockGapSupport ) {\n\t\t// Use fallback of `0.5em` just in case, however if there is blockGap support, there should nearly always be a real value.\n\t\tconst gapValue =\n\t\t\tgetGapCSSValue( tree?.styles?.spacing?.blockGap ) || '0.5em';\n\t\truleset =\n\t\t\truleset +\n\t\t\t`:where(.wp-site-blocks) > * { margin-block-start: ${ gapValue }; margin-block-end: 0; }`;\n\t\truleset =\n\t\t\truleset +\n\t\t\t':where(.wp-site-blocks) > :first-child:first-child { margin-block-start: 0; }';\n\t\truleset =\n\t\t\truleset +\n\t\t\t':where(.wp-site-blocks) > :last-child:last-child { margin-block-end: 0; }';\n\t}\n\n\tnodesWithSettings.forEach( ( { selector, presets } ) => {\n\t\tif ( ROOT_BLOCK_SELECTOR === selector ) {\n\t\t\t// Do not add extra specificity for top-level classes.\n\t\t\tselector = '';\n\t\t}\n\n\t\tconst classes = getPresetsClasses( selector, presets );\n\t\tif ( classes.length > 0 ) {\n\t\t\truleset += classes;\n\t\t}\n\t} );\n\n\treturn ruleset;\n};\n\nexport function toSvgFilters( tree, blockSelectors ) {\n\tconst nodesWithSettings = getNodesWithSettings( tree, blockSelectors );\n\treturn nodesWithSettings.flatMap( ( { presets } ) => {\n\t\treturn getPresetsSvgFilters( presets );\n\t} );\n}\n\nconst getSelectorsConfig = ( blockType, rootSelector ) => {\n\tif (\n\t\tblockType?.selectors &&\n\t\tObject.keys( blockType.selectors ).length > 0\n\t) {\n\t\treturn blockType.selectors;\n\t}\n\n\tconst config = { root: rootSelector };\n\tObject.entries( BLOCK_SUPPORT_FEATURE_LEVEL_SELECTORS ).forEach(\n\t\t( [ featureKey, featureName ] ) => {\n\t\t\tconst featureSelector = getBlockCSSSelector(\n\t\t\t\tblockType,\n\t\t\t\tfeatureKey\n\t\t\t);\n\n\t\t\tif ( featureSelector ) {\n\t\t\t\tconfig[ featureName ] = featureSelector;\n\t\t\t}\n\t\t}\n\t);\n\n\treturn config;\n};\n\nexport const getBlockSelectors = ( blockTypes, getBlockStyles ) => {\n\tconst result = {};\n\tblockTypes.forEach( ( blockType ) => {\n\t\tconst name = blockType.name;\n\t\tconst selector = getBlockCSSSelector( blockType );\n\t\tlet duotoneSelector = getBlockCSSSelector(\n\t\t\tblockType,\n\t\t\t'filter.duotone'\n\t\t);\n\n\t\t// Keep backwards compatibility for support.color.__experimentalDuotone.\n\t\tif ( ! duotoneSelector ) {\n\t\t\tconst rootSelector = getBlockCSSSelector( blockType );\n\t\t\tconst duotoneSupport = getBlockSupport(\n\t\t\t\tblockType,\n\t\t\t\t'color.__experimentalDuotone',\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tduotoneSelector =\n\t\t\t\tduotoneSupport && scopeSelector( rootSelector, duotoneSupport );\n\t\t}\n\n\t\tconst hasLayoutSupport =\n\t\t\t!! blockType?.supports?.layout ||\n\t\t\t!! blockType?.supports?.__experimentalLayout;\n\t\tconst fallbackGapValue =\n\t\t\tblockType?.supports?.spacing?.blockGap?.__experimentalDefault;\n\n\t\tconst blockStyleVariations = getBlockStyles( name );\n\t\tconst styleVariationSelectors = {};\n\t\tif ( blockStyleVariations?.length ) {\n\t\t\tblockStyleVariations.forEach( ( variation ) => {\n\t\t\t\tconst styleVariationSelector = `.is-style-${ variation.name }${ selector }`;\n\t\t\t\tstyleVariationSelectors[ variation.name ] =\n\t\t\t\t\tstyleVariationSelector;\n\t\t\t} );\n\t\t}\n\t\t// For each block support feature add any custom selectors.\n\t\tconst featureSelectors = getSelectorsConfig( blockType, selector );\n\n\t\tresult[ name ] = {\n\t\t\tduotoneSelector,\n\t\t\tfallbackGapValue,\n\t\t\tfeatureSelectors: Object.keys( featureSelectors ).length\n\t\t\t\t? featureSelectors\n\t\t\t\t: undefined,\n\t\t\thasLayoutSupport,\n\t\t\tname,\n\t\t\tselector,\n\t\t\tstyleVariationSelectors: Object.keys( styleVariationSelectors )\n\t\t\t\t.length\n\t\t\t\t? styleVariationSelectors\n\t\t\t\t: undefined,\n\t\t};\n\t} );\n\n\treturn result;\n};\n\n/**\n * If there is a separator block whose color is defined in theme.json via background,\n * update the separator color to the same value by using border color.\n *\n * @param {Object} config Theme.json configuration file object.\n * @return {Object} configTheme.json configuration file object updated.\n */\nfunction updateConfigWithSeparator( config ) {\n\tconst needsSeparatorStyleUpdate =\n\t\tconfig.styles?.blocks?.[ 'core/separator' ] &&\n\t\tconfig.styles?.blocks?.[ 'core/separator' ].color?.background &&\n\t\t! config.styles?.blocks?.[ 'core/separator' ].color?.text &&\n\t\t! config.styles?.blocks?.[ 'core/separator' ].border?.color;\n\tif ( needsSeparatorStyleUpdate ) {\n\t\treturn {\n\t\t\t...config,\n\t\t\tstyles: {\n\t\t\t\t...config.styles,\n\t\t\t\tblocks: {\n\t\t\t\t\t...config.styles.blocks,\n\t\t\t\t\t'core/separator': {\n\t\t\t\t\t\t...config.styles.blocks[ 'core/separator' ],\n\t\t\t\t\t\tcolor: {\n\t\t\t\t\t\t\t...config.styles.blocks[ 'core/separator' ].color,\n\t\t\t\t\t\t\ttext: config.styles?.blocks[ 'core/separator' ]\n\t\t\t\t\t\t\t\t.color.background,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n\treturn config;\n}\n\nconst processCSSNesting = ( css, blockSelector ) => {\n\tlet processedCSS = '';\n\n\t// Split CSS nested rules.\n\tconst parts = css.split( '&' );\n\tparts.forEach( ( part ) => {\n\t\tprocessedCSS += ! part.includes( '{' )\n\t\t\t? blockSelector + '{' + part + '}' // If the part doesn't contain braces, it applies to the root level.\n\t\t\t: blockSelector + part; // Prepend the selector, which effectively replaces the \"&\" character.\n\t} );\n\treturn processedCSS;\n};\n\n/**\n * Returns the global styles output using a global styles configuration.\n * If wishing to generate global styles and settings based on the\n * global styles config loaded in the editor context, use `useGlobalStylesOutput()`.\n * The use case for a custom config is to generate bespoke styles\n * and settings for previews, or other out-of-editor experiences.\n *\n * @param {Object} mergedConfig Global styles configuration.\n * @return {Array} Array of stylesheets and settings.\n */\nexport function useGlobalStylesOutputWithConfig( mergedConfig = {} ) {\n\tconst [ blockGap ] = useGlobalSetting( 'spacing.blockGap' );\n\tconst hasBlockGapSupport = blockGap !== null;\n\tconst hasFallbackGapSupport = ! hasBlockGapSupport; // This setting isn't useful yet: it exists as a placeholder for a future explicit fallback styles support.\n\tconst disableLayoutStyles = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\treturn !! getSettings().disableLayoutStyles;\n\t} );\n\n\tconst getBlockStyles = useSelect( ( select ) => {\n\t\treturn select( blocksStore ).getBlockStyles;\n\t}, [] );\n\n\treturn useMemo( () => {\n\t\tif ( ! mergedConfig?.styles || ! mergedConfig?.settings ) {\n\t\t\treturn [];\n\t\t}\n\t\tmergedConfig = updateConfigWithSeparator( mergedConfig );\n\n\t\tconst blockSelectors = getBlockSelectors(\n\t\t\tgetBlockTypes(),\n\t\t\tgetBlockStyles\n\t\t);\n\n\t\tconst customProperties = toCustomProperties(\n\t\t\tmergedConfig,\n\t\t\tblockSelectors\n\t\t);\n\t\tconst globalStyles = toStyles(\n\t\t\tmergedConfig,\n\t\t\tblockSelectors,\n\t\t\thasBlockGapSupport,\n\t\t\thasFallbackGapSupport,\n\t\t\tdisableLayoutStyles\n\t\t);\n\t\tconst svgs = toSvgFilters( mergedConfig, blockSelectors );\n\n\t\tconst styles = [\n\t\t\t{\n\t\t\t\tcss: customProperties,\n\t\t\t\tisGlobalStyles: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tcss: globalStyles,\n\t\t\t\tisGlobalStyles: true,\n\t\t\t},\n\t\t\t// Load custom CSS in own stylesheet so that any invalid CSS entered in the input won't break all the global styles in the editor.\n\t\t\t{\n\t\t\t\tcss: mergedConfig.styles.css ?? '',\n\t\t\t\tisGlobalStyles: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tassets: svgs,\n\t\t\t\t__unstableType: 'svg',\n\t\t\t\tisGlobalStyles: true,\n\t\t\t},\n\t\t];\n\n\t\t// Loop through the blocks to check if there are custom CSS values.\n\t\t// If there are, get the block selector and push the selector together with\n\t\t// the CSS value to the 'stylesheets' array.\n\t\tgetBlockTypes().forEach( ( blockType ) => {\n\t\t\tif ( mergedConfig.styles.blocks[ blockType.name ]?.css ) {\n\t\t\t\tconst selector = blockSelectors[ blockType.name ].selector;\n\t\t\t\tstyles.push( {\n\t\t\t\t\tcss: processCSSNesting(\n\t\t\t\t\t\tmergedConfig.styles.blocks[ blockType.name ]?.css,\n\t\t\t\t\t\tselector\n\t\t\t\t\t),\n\t\t\t\t\tisGlobalStyles: true,\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\treturn [ styles, mergedConfig.settings ];\n\t}, [\n\t\thasBlockGapSupport,\n\t\thasFallbackGapSupport,\n\t\tmergedConfig,\n\t\tdisableLayoutStyles,\n\t] );\n}\n\n/**\n * Returns the global styles output based on the current state of global styles config loaded in the editor context.\n *\n * @return {Array} Array of stylesheets and settings.\n */\nexport function useGlobalStylesOutput() {\n\tconst { merged: mergedConfig } = useContext( GlobalStylesContext );\n\treturn useGlobalStylesOutputWithConfig( mergedConfig );\n}\n"]}