{"version":3,"sources":["@wordpress/block-editor/src/hooks/layout.js"],"names":["layoutBlockSupportKey","hasLayoutBlockSupport","blockName","useLayoutClasses","blockAttributes","rootPaddingAlignment","select","getSettings","blockEditorStore","__experimentalFeatures","useRootPaddingAwareAlignments","layout","default","defaultBlockLayout","usedLayout","inherit","contentSize","wideSize","type","layoutClassnames","LAYOUT_DEFINITIONS","className","baseClassName","compoundClassName","split","pop","push","orientation","justifyContent","flexWrap","useLayoutStyles","selector","style","fullLayoutType","blockGapSupport","hasBlockGapSupport","css","getLayoutStyle","LayoutPanel","setAttributes","attributes","name","defaultThemeLayout","themeSupportsLayout","supportsLayout","blockEditingMode","layoutBlockSupport","allowSwitching","allowEditing","allowInheriting","showInheritToggle","layoutType","constrainedType","displayControlsForLegacyLayouts","hasContentSizeOrLegacySettings","onChangeType","newType","onChangeLayout","newLayout","LayoutTypeSwitcher","onChange","map","label","addAttribute","settings","withInspectorControls","BlockEdit","props","supportLayout","withLayoutStyles","BlockListBlock","blockSupportsLayout","disableLayoutStyles","shouldRenderLayoutStyles","id","element","BlockList","__unstableElementContext","layoutClasses","layoutClassNames","withChildLayoutStyles","selfStretch","flexSize","hasChildLayout","shouldRenderChildLayoutStyles"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { createHigherOrderComponent, useInstanceId } from '@wordpress/compose';\nimport { addFilter } from '@wordpress/hooks';\nimport { getBlockSupport, hasBlockSupport } from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\nimport {\n\tButton,\n\tButtonGroup,\n\tToggleControl,\n\tPanelBody,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useContext, createPortal } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../store';\nimport { InspectorControls } from '../components';\nimport useSetting from '../components/use-setting';\nimport { LayoutStyle } from '../components/block-list/layout';\nimport BlockList from '../components/block-list';\nimport { getLayoutType, getLayoutTypes } from '../layouts';\nimport { useBlockEditingMode } from '../components/block-editing-mode';\nimport { LAYOUT_DEFINITIONS } from '../layouts/definitions';\nimport { kebabCase } from '../utils/object';\n\nconst layoutBlockSupportKey = 'layout';\n\nfunction hasLayoutBlockSupport( blockName ) {\n\treturn (\n\t\thasBlockSupport( blockName, 'layout' ) ||\n\t\thasBlockSupport( blockName, '__experimentalLayout' )\n\t);\n}\n\n/**\n * Generates the utility classnames for the given block's layout attributes.\n *\n * @param { Object } blockAttributes Block attributes.\n * @param { string } blockName       Block name.\n *\n * @return { Array } Array of CSS classname strings.\n */\nexport function useLayoutClasses( blockAttributes = {}, blockName = '' ) {\n\tconst rootPaddingAlignment = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\treturn getSettings().__experimentalFeatures\n\t\t\t?.useRootPaddingAwareAlignments;\n\t}, [] );\n\tconst { layout } = blockAttributes;\n\n\tconst { default: defaultBlockLayout } =\n\t\tgetBlockSupport( blockName, layoutBlockSupportKey ) || {};\n\tconst usedLayout =\n\t\tlayout?.inherit || layout?.contentSize || layout?.wideSize\n\t\t\t? { ...layout, type: 'constrained' }\n\t\t\t: layout || defaultBlockLayout || {};\n\n\tconst layoutClassnames = [];\n\n\tif ( LAYOUT_DEFINITIONS[ usedLayout?.type || 'default' ]?.className ) {\n\t\tconst baseClassName =\n\t\t\tLAYOUT_DEFINITIONS[ usedLayout?.type || 'default' ]?.className;\n\t\tconst compoundClassName = `wp-block-${ blockName\n\t\t\t.split( '/' )\n\t\t\t.pop() }-${ baseClassName }`;\n\t\tlayoutClassnames.push( baseClassName, compoundClassName );\n\t}\n\n\tif (\n\t\t( usedLayout?.inherit ||\n\t\t\tusedLayout?.contentSize ||\n\t\t\tusedLayout?.type === 'constrained' ) &&\n\t\trootPaddingAlignment\n\t) {\n\t\tlayoutClassnames.push( 'has-global-padding' );\n\t}\n\n\tif ( usedLayout?.orientation ) {\n\t\tlayoutClassnames.push( `is-${ kebabCase( usedLayout.orientation ) }` );\n\t}\n\n\tif ( usedLayout?.justifyContent ) {\n\t\tlayoutClassnames.push(\n\t\t\t`is-content-justification-${ kebabCase(\n\t\t\t\tusedLayout.justifyContent\n\t\t\t) }`\n\t\t);\n\t}\n\n\tif ( usedLayout?.flexWrap && usedLayout.flexWrap === 'nowrap' ) {\n\t\tlayoutClassnames.push( 'is-nowrap' );\n\t}\n\n\treturn layoutClassnames;\n}\n\n/**\n * Generates a CSS rule with the given block's layout styles.\n *\n * @param { Object } blockAttributes Block attributes.\n * @param { string } blockName       Block name.\n * @param { string } selector        A selector to use in generating the CSS rule.\n *\n * @return { string } CSS rule.\n */\nexport function useLayoutStyles( blockAttributes = {}, blockName, selector ) {\n\tconst { layout = {}, style = {} } = blockAttributes;\n\t// Update type for blocks using legacy layouts.\n\tconst usedLayout =\n\t\tlayout?.inherit || layout?.contentSize || layout?.wideSize\n\t\t\t? { ...layout, type: 'constrained' }\n\t\t\t: layout || {};\n\tconst fullLayoutType = getLayoutType( usedLayout?.type || 'default' );\n\tconst blockGapSupport = useSetting( 'spacing.blockGap' );\n\tconst hasBlockGapSupport = blockGapSupport !== null;\n\tconst css = fullLayoutType?.getLayoutStyle?.( {\n\t\tblockName,\n\t\tselector,\n\t\tlayout,\n\t\tstyle,\n\t\thasBlockGapSupport,\n\t} );\n\treturn css;\n}\n\nfunction LayoutPanel( { setAttributes, attributes, name: blockName } ) {\n\tconst { layout } = attributes;\n\tconst defaultThemeLayout = useSetting( 'layout' );\n\tconst { themeSupportsLayout } = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\treturn {\n\t\t\tthemeSupportsLayout: getSettings().supportsLayout,\n\t\t};\n\t}, [] );\n\tconst blockEditingMode = useBlockEditingMode();\n\n\tconst layoutBlockSupport = getBlockSupport(\n\t\tblockName,\n\t\tlayoutBlockSupportKey,\n\t\t{}\n\t);\n\tconst {\n\t\tallowSwitching,\n\t\tallowEditing = true,\n\t\tallowInheriting = true,\n\t\tdefault: defaultBlockLayout,\n\t} = layoutBlockSupport;\n\n\tif ( ! allowEditing ) {\n\t\treturn null;\n\t}\n\n\t// Only show the inherit toggle if it's supported,\n\t// a default theme layout is set (e.g. one that provides `contentSize` and/or `wideSize` values),\n\t// and either the default / flow or the constrained layout type is in use, as the toggle switches from one to the other.\n\tconst showInheritToggle = !! (\n\t\tallowInheriting &&\n\t\t!! defaultThemeLayout &&\n\t\t( ! layout?.type ||\n\t\t\tlayout?.type === 'default' ||\n\t\t\tlayout?.type === 'constrained' ||\n\t\t\tlayout?.inherit )\n\t);\n\n\tconst usedLayout = layout || defaultBlockLayout || {};\n\tconst {\n\t\tinherit = false,\n\t\ttype = 'default',\n\t\tcontentSize = null,\n\t} = usedLayout;\n\t/**\n\t * `themeSupportsLayout` is only relevant to the `default/flow` or\n\t * `constrained` layouts and it should not be taken into account when other\n\t * `layout` types are used.\n\t */\n\tif (\n\t\t( type === 'default' || type === 'constrained' ) &&\n\t\t! themeSupportsLayout\n\t) {\n\t\treturn null;\n\t}\n\tconst layoutType = getLayoutType( type );\n\tconst constrainedType = getLayoutType( 'constrained' );\n\tconst displayControlsForLegacyLayouts =\n\t\t! usedLayout.type && ( contentSize || inherit );\n\tconst hasContentSizeOrLegacySettings = !! inherit || !! contentSize;\n\n\tconst onChangeType = ( newType ) =>\n\t\tsetAttributes( { layout: { type: newType } } );\n\tconst onChangeLayout = ( newLayout ) =>\n\t\tsetAttributes( { layout: newLayout } );\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Layout' ) }>\n\t\t\t\t\t{ showInheritToggle && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\tclassName=\"block-editor-hooks__toggle-control\"\n\t\t\t\t\t\t\t\tlabel={ __( 'Inner blocks use content width' ) }\n\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\tlayoutType?.name === 'constrained' ||\n\t\t\t\t\t\t\t\t\thasContentSizeOrLegacySettings\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonChange={ () =>\n\t\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\t\tlayout: {\n\t\t\t\t\t\t\t\t\t\t\ttype:\n\t\t\t\t\t\t\t\t\t\t\t\tlayoutType?.name ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t'constrained' ||\n\t\t\t\t\t\t\t\t\t\t\t\thasContentSizeOrLegacySettings\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 'default'\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 'constrained',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\thelp={\n\t\t\t\t\t\t\t\t\tlayoutType?.name === 'constrained' ||\n\t\t\t\t\t\t\t\t\thasContentSizeOrLegacySettings\n\t\t\t\t\t\t\t\t\t\t? __(\n\t\t\t\t\t\t\t\t\t\t\t\t'Nested blocks use content width with options for full and wide widths.'\n\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t: __(\n\t\t\t\t\t\t\t\t\t\t\t\t'Nested blocks will fill the width of this container. Toggle to constrain.'\n\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ ! inherit && allowSwitching && (\n\t\t\t\t\t\t<LayoutTypeSwitcher\n\t\t\t\t\t\t\ttype={ type }\n\t\t\t\t\t\t\tonChange={ onChangeType }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ layoutType && layoutType.name !== 'default' && (\n\t\t\t\t\t\t<layoutType.inspectorControls\n\t\t\t\t\t\t\tlayout={ usedLayout }\n\t\t\t\t\t\t\tonChange={ onChangeLayout }\n\t\t\t\t\t\t\tlayoutBlockSupport={ layoutBlockSupport }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ constrainedType && displayControlsForLegacyLayouts && (\n\t\t\t\t\t\t<constrainedType.inspectorControls\n\t\t\t\t\t\t\tlayout={ usedLayout }\n\t\t\t\t\t\t\tonChange={ onChangeLayout }\n\t\t\t\t\t\t\tlayoutBlockSupport={ layoutBlockSupport }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t{ ! inherit && blockEditingMode === 'default' && layoutType && (\n\t\t\t\t<layoutType.toolBarControls\n\t\t\t\t\tlayout={ usedLayout }\n\t\t\t\t\tonChange={ onChangeLayout }\n\t\t\t\t\tlayoutBlockSupport={ layoutBlockSupport }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nfunction LayoutTypeSwitcher( { type, onChange } ) {\n\treturn (\n\t\t<ButtonGroup>\n\t\t\t{ getLayoutTypes().map( ( { name, label } ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tkey={ name }\n\t\t\t\t\t\tisPressed={ type === name }\n\t\t\t\t\t\tonClick={ () => onChange( name ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ label }\n\t\t\t\t\t</Button>\n\t\t\t\t);\n\t\t\t} ) }\n\t\t</ButtonGroup>\n\t);\n}\n\n/**\n * Filters registered block settings, extending attributes to include `layout`.\n *\n * @param {Object} settings Original block settings.\n *\n * @return {Object} Filtered block settings.\n */\nexport function addAttribute( settings ) {\n\tif ( 'type' in ( settings.attributes?.layout ?? {} ) ) {\n\t\treturn settings;\n\t}\n\tif ( hasLayoutBlockSupport( settings ) ) {\n\t\tsettings.attributes = {\n\t\t\t...settings.attributes,\n\t\t\tlayout: {\n\t\t\t\ttype: 'object',\n\t\t\t},\n\t\t};\n\t}\n\n\treturn settings;\n}\n\n/**\n * Override the default edit UI to include layout controls\n *\n * @param {Function} BlockEdit Original component.\n *\n * @return {Function} Wrapped component.\n */\nexport const withInspectorControls = createHigherOrderComponent(\n\t( BlockEdit ) => ( props ) => {\n\t\tconst { name: blockName } = props;\n\t\tconst supportLayout = hasLayoutBlockSupport( blockName );\n\n\t\tconst blockEditingMode = useBlockEditingMode();\n\t\treturn [\n\t\t\tsupportLayout && blockEditingMode === 'default' && (\n\t\t\t\t<LayoutPanel key=\"layout\" { ...props } />\n\t\t\t),\n\t\t\t<BlockEdit key=\"edit\" { ...props } />,\n\t\t];\n\t},\n\t'withInspectorControls'\n);\n\n/**\n * Override the default block element to add the layout styles.\n *\n * @param {Function} BlockListBlock Original component.\n *\n * @return {Function} Wrapped component.\n */\nexport const withLayoutStyles = createHigherOrderComponent(\n\t( BlockListBlock ) => ( props ) => {\n\t\tconst { name, attributes } = props;\n\t\tconst blockSupportsLayout = hasLayoutBlockSupport( name );\n\t\tconst disableLayoutStyles = useSelect( ( select ) => {\n\t\t\tconst { getSettings } = select( blockEditorStore );\n\t\t\treturn !! getSettings().disableLayoutStyles;\n\t\t} );\n\t\tconst shouldRenderLayoutStyles =\n\t\t\tblockSupportsLayout && ! disableLayoutStyles;\n\t\tconst id = useInstanceId( BlockListBlock );\n\t\tconst element = useContext( BlockList.__unstableElementContext );\n\t\tconst { layout } = attributes;\n\t\tconst { default: defaultBlockLayout } =\n\t\t\tgetBlockSupport( name, layoutBlockSupportKey ) || {};\n\t\tconst usedLayout =\n\t\t\tlayout?.inherit || layout?.contentSize || layout?.wideSize\n\t\t\t\t? { ...layout, type: 'constrained' }\n\t\t\t\t: layout || defaultBlockLayout || {};\n\t\tconst layoutClasses = blockSupportsLayout\n\t\t\t? useLayoutClasses( attributes, name )\n\t\t\t: null;\n\t\t// Higher specificity to override defaults from theme.json.\n\t\tconst selector = `.wp-container-${ id }.wp-container-${ id }`;\n\t\tconst blockGapSupport = useSetting( 'spacing.blockGap' );\n\t\tconst hasBlockGapSupport = blockGapSupport !== null;\n\n\t\t// Get CSS string for the current layout type.\n\t\t// The CSS and `style` element is only output if it is not empty.\n\t\tlet css;\n\t\tif ( shouldRenderLayoutStyles ) {\n\t\t\tconst fullLayoutType = getLayoutType(\n\t\t\t\tusedLayout?.type || 'default'\n\t\t\t);\n\t\t\tcss = fullLayoutType?.getLayoutStyle?.( {\n\t\t\t\tblockName: name,\n\t\t\t\tselector,\n\t\t\t\tlayout: usedLayout,\n\t\t\t\tstyle: attributes?.style,\n\t\t\t\thasBlockGapSupport,\n\t\t\t} );\n\t\t}\n\n\t\t// Attach a `wp-container-` id-based class name as well as a layout class name such as `is-layout-flex`.\n\t\tconst layoutClassNames = classnames(\n\t\t\t{\n\t\t\t\t[ `wp-container-${ id }` ]: shouldRenderLayoutStyles && !! css, // Only attach a container class if there is generated CSS to be attached.\n\t\t\t},\n\t\t\tlayoutClasses\n\t\t);\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{ shouldRenderLayoutStyles &&\n\t\t\t\t\telement &&\n\t\t\t\t\t!! css &&\n\t\t\t\t\tcreatePortal(\n\t\t\t\t\t\t<LayoutStyle\n\t\t\t\t\t\t\tblockName={ name }\n\t\t\t\t\t\t\tselector={ selector }\n\t\t\t\t\t\t\tcss={ css }\n\t\t\t\t\t\t\tlayout={ usedLayout }\n\t\t\t\t\t\t\tstyle={ attributes?.style }\n\t\t\t\t\t\t/>,\n\t\t\t\t\t\telement\n\t\t\t\t\t) }\n\t\t\t\t<BlockListBlock\n\t\t\t\t\t{ ...props }\n\t\t\t\t\t__unstableLayoutClassNames={ layoutClassNames }\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t},\n\t'withLayoutStyles'\n);\n\n/**\n * Override the default block element to add the child layout styles.\n *\n * @param {Function} BlockListBlock Original component.\n *\n * @return {Function} Wrapped component.\n */\nexport const withChildLayoutStyles = createHigherOrderComponent(\n\t( BlockListBlock ) => ( props ) => {\n\t\tconst { attributes } = props;\n\t\tconst { style: { layout = {} } = {} } = attributes;\n\t\tconst { selfStretch, flexSize } = layout;\n\t\tconst hasChildLayout = selfStretch || flexSize;\n\t\tconst disableLayoutStyles = useSelect( ( select ) => {\n\t\t\tconst { getSettings } = select( blockEditorStore );\n\t\t\treturn !! getSettings().disableLayoutStyles;\n\t\t} );\n\t\tconst shouldRenderChildLayoutStyles =\n\t\t\thasChildLayout && ! disableLayoutStyles;\n\n\t\tconst element = useContext( BlockList.__unstableElementContext );\n\t\tconst id = useInstanceId( BlockListBlock );\n\t\tconst selector = `.wp-container-content-${ id }`;\n\n\t\tlet css = '';\n\n\t\tif ( selfStretch === 'fixed' && flexSize ) {\n\t\t\tcss += `${ selector } {\n\t\t\t\tflex-basis: ${ flexSize };\n\t\t\t\tbox-sizing: border-box;\n\t\t\t}`;\n\t\t} else if ( selfStretch === 'fill' ) {\n\t\t\tcss += `${ selector } {\n\t\t\t\tflex-grow: 1;\n\t\t\t}`;\n\t\t}\n\n\t\t// Attach a `wp-container-content` id-based classname.\n\t\tconst className = classnames( props?.className, {\n\t\t\t[ `wp-container-content-${ id }` ]:\n\t\t\t\tshouldRenderChildLayoutStyles && !! css, // Only attach a container class if there is generated CSS to be attached.\n\t\t} );\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{ shouldRenderChildLayoutStyles &&\n\t\t\t\t\telement &&\n\t\t\t\t\t!! css &&\n\t\t\t\t\tcreatePortal( <style>{ css }</style>, element ) }\n\t\t\t\t<BlockListBlock { ...props } className={ className } />\n\t\t\t</>\n\t\t);\n\t},\n\t'withChildLayoutStyles'\n);\n\naddFilter(\n\t'blocks.registerBlockType',\n\t'core/layout/addAttribute',\n\taddAttribute\n);\naddFilter(\n\t'editor.BlockListBlock',\n\t'core/editor/layout/with-layout-styles',\n\twithLayoutStyles\n);\naddFilter(\n\t'editor.BlockListBlock',\n\t'core/editor/layout/with-child-layout-styles',\n\twithChildLayoutStyles\n);\naddFilter(\n\t'editor.BlockEdit',\n\t'core/editor/layout/with-inspector-controls',\n\twithInspectorControls\n);\n"]}