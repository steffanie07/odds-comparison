{"version":3,"sources":["@wordpress/block-editor/src/components/block-toolbar/index.native.js"],"names":["REMOVE_EMPY_PARENT_BLOCKS","BlockToolbar","anchorNodeRef","rootClientId","blockClientId","isSelected","isValidAndVisual","isStackedHorizontally","parentBlockName","parentNumberOfInnerBlocks","select","getBlockListSettings","getBlockMode","getBlockName","getBlockCount","getBlockRootClientId","getSelectedBlockClientIds","isBlockValid","blockEditorStore","selectedBlockClientIds","selectedBlockClientId","blockRootClientId","blockListSettings","orientation","isBlockStackedHorizontally","parentName","numberOfInnerBlocks","length","removeBlock","onRemove","includes","fills"],"mappings":";;;;;;;;;AAIA;;AADA;;AAMA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAdA;AACA;AACA;;AAIA;AACA;AACA;AAQA,MAAMA,yBAAyB,GAAG,CACjC,cADiC,EAEjC,cAFiC,EAGjC,mBAHiC,CAAlC;;AAMe,SAASC,YAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAA2C;AACzD,QAAM;AACLC,IAAAA,YADK;AAELC,IAAAA,aAFK;AAGLC,IAAAA,UAHK;AAILC,IAAAA,gBAJK;AAKLC,IAAAA,qBALK;AAMLC,IAAAA,eANK;AAOLC,IAAAA;AAPK,MAQF,qBAAaC,MAAF,IAAc;AAC5B,UAAM;AACLC,MAAAA,oBADK;AAELC,MAAAA,YAFK;AAGLC,MAAAA,YAHK;AAILC,MAAAA,aAJK;AAKLC,MAAAA,oBALK;AAMLC,MAAAA,yBANK;AAOLC,MAAAA;AAPK,QAQFP,MAAM,CAAEQ,YAAF,CARV;AASA,UAAMC,sBAAsB,GAAGH,yBAAyB,EAAxD;AACA,UAAMI,qBAAqB,GAAGD,sBAAsB,CAAE,CAAF,CAApD;AACA,UAAME,iBAAiB,GAAGN,oBAAoB,CAAEK,qBAAF,CAA9C;AACA,UAAME,iBAAiB,GAAGX,oBAAoB,CAAEU,iBAAF,CAA9C;AACA,UAAME,WAAW,GAAGD,iBAAiB,EAAEC,WAAvC;AACA,UAAMC,0BAA0B,GAAGD,WAAW,KAAK,YAAnD;AACA,UAAME,UAAU,GAAGZ,YAAY,CAAEQ,iBAAF,CAA/B;AACA,UAAMK,mBAAmB,GAAGZ,aAAa,CAAEO,iBAAF,CAAzC;AAEA,WAAO;AACNlB,MAAAA,YAAY,EAAEkB,iBADR;AAENjB,MAAAA,aAAa,EAAEgB,qBAFT;AAGNf,MAAAA,UAAU,EAAEc,sBAAsB,CAACQ,MAAvB,GAAgC,CAHtC;AAINpB,MAAAA,qBAAqB,EAAEiB,0BAJjB;AAKNhB,MAAAA,eAAe,EAAEiB,UALX;AAMNhB,MAAAA,yBAAyB,EAAEiB,mBANrB;AAONpB,MAAAA,gBAAgB,EACfa,sBAAsB,CAACQ,MAAvB,KAAkC,CAAlC,GACGV,YAAY,CAAEE,sBAAsB,CAAE,CAAF,CAAxB,CAAZ,IACAP,YAAY,CAAEO,sBAAsB,CAAE,CAAF,CAAxB,CAAZ,KAAgD,QAFnD,GAGG;AAXE,KAAP;AAaA,GAhCG,EAgCD,EAhCC,CARJ;AA0CA,QAAM;AAAES,IAAAA;AAAF,MAAkB,uBAAaV,YAAb,CAAxB;AACA,QAAMW,QAAQ,GAAG,0BAAa,MAAM;AACnC;AACA;AACA;AACA,QACC7B,yBAAyB,CAAC8B,QAA1B,CAAoCtB,eAApC,KACAC,yBAAyB,KAAK,CAF/B,EAGE;AACDmB,MAAAA,WAAW,CAAEzB,YAAF,CAAX;AACA;AACA;;AAEDyB,IAAAA,WAAW,CAAExB,aAAF,CAAX;AACA,GAbgB,EAad,CACFA,aADE,EAEFI,eAFE,EAGFC,yBAHE,EAIFmB,WAJE,EAKFzB,YALE,CAbc,CAAjB;;AAqBA,MAAK,CAAEE,UAAP,EAAoB;AACnB,WAAO,IAAP;AACA;;AAED,SACC,qDACGC,gBAAgB,IACjB,qDACC,4BAAC,kCAAD,CAAqB,IAArB,QAEG,CAAEyB,KAAK,GAAG,CAAE,IAAF,CAAV,KAAwB;AACzB,QAAK,CAAEA,KAAK,EAAEJ,MAAT,GAAkB,CAAvB,EAA2B;AAC1B,aAAO,IAAP;AACA;;AACD,WAAOI,KAAK,CAAE,CAAF,CAAZ;AACA,GAPF,CADD,EAUC,4BAAC,sBAAD,CAAe,IAAf;AAAoB,IAAA,KAAK,EAAC;AAA1B,IAVD,EAWC,4BAAC,sBAAD,CAAe,IAAf,OAXD,EAYC,4BAAC,sBAAD,CAAe,IAAf;AAAoB,IAAA,KAAK,EAAC;AAA1B,IAZD,EAaC,4BAAC,sBAAD,CAAe,IAAf;AAAoB,IAAA,KAAK,EAAC;AAA1B,IAbD,EAcC,4BAAC,sBAAD,OAdD,EAgBC,4BAAC,mBAAD;AACC,IAAA,SAAS,EAAG,CAAE3B,aAAF,CADb;AAEC,IAAA,qBAAqB,EAAGG;AAFzB,IAhBD,EAqBC,4BAAC,yBAAD;AACC,IAAA,QAAQ,EAAGH,aADZ;AAEC,IAAA,qBAAqB,EAAGG,qBAFzB;AAGC,IAAA,QAAQ,EAAGsB,QAHZ;AAIC,IAAA,aAAa,EAAG3B;AAJjB,IArBD,CAFF,CADD;AAkCA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useCallback } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport BlockActionsMenu from './block-toolbar-menu';\nimport BlockControls from '../block-controls';\nimport BlockMover from '../block-mover';\nimport UngroupButton from '../ungroup-button';\nimport { BlockSettingsButton } from '../block-settings';\nimport { store as blockEditorStore } from '../../store';\n\nconst REMOVE_EMPY_PARENT_BLOCKS = [\n\t'core/buttons',\n\t'core/columns',\n\t'core/social-links',\n];\n\nexport default function BlockToolbar( { anchorNodeRef } ) {\n\tconst {\n\t\trootClientId,\n\t\tblockClientId,\n\t\tisSelected,\n\t\tisValidAndVisual,\n\t\tisStackedHorizontally,\n\t\tparentBlockName,\n\t\tparentNumberOfInnerBlocks,\n\t} = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tgetBlockListSettings,\n\t\t\tgetBlockMode,\n\t\t\tgetBlockName,\n\t\t\tgetBlockCount,\n\t\t\tgetBlockRootClientId,\n\t\t\tgetSelectedBlockClientIds,\n\t\t\tisBlockValid,\n\t\t} = select( blockEditorStore );\n\t\tconst selectedBlockClientIds = getSelectedBlockClientIds();\n\t\tconst selectedBlockClientId = selectedBlockClientIds[ 0 ];\n\t\tconst blockRootClientId = getBlockRootClientId( selectedBlockClientId );\n\t\tconst blockListSettings = getBlockListSettings( blockRootClientId );\n\t\tconst orientation = blockListSettings?.orientation;\n\t\tconst isBlockStackedHorizontally = orientation === 'horizontal';\n\t\tconst parentName = getBlockName( blockRootClientId );\n\t\tconst numberOfInnerBlocks = getBlockCount( blockRootClientId );\n\n\t\treturn {\n\t\t\trootClientId: blockRootClientId,\n\t\t\tblockClientId: selectedBlockClientId,\n\t\t\tisSelected: selectedBlockClientIds.length > 0,\n\t\t\tisStackedHorizontally: isBlockStackedHorizontally,\n\t\t\tparentBlockName: parentName,\n\t\t\tparentNumberOfInnerBlocks: numberOfInnerBlocks,\n\t\t\tisValidAndVisual:\n\t\t\t\tselectedBlockClientIds.length === 1\n\t\t\t\t\t? isBlockValid( selectedBlockClientIds[ 0 ] ) &&\n\t\t\t\t\t  getBlockMode( selectedBlockClientIds[ 0 ] ) === 'visual'\n\t\t\t\t\t: false,\n\t\t};\n\t}, [] );\n\n\tconst { removeBlock } = useDispatch( blockEditorStore );\n\tconst onRemove = useCallback( () => {\n\t\t// Temp: remove parent block for specific cases where they don't\n\t\t// have inner blocks, ideally we should match the behavior as in\n\t\t// the Web editor and show a placeholder instead of removing the parent.\n\t\tif (\n\t\t\tREMOVE_EMPY_PARENT_BLOCKS.includes( parentBlockName ) &&\n\t\t\tparentNumberOfInnerBlocks === 1\n\t\t) {\n\t\t\tremoveBlock( rootClientId );\n\t\t\treturn;\n\t\t}\n\n\t\tremoveBlock( blockClientId );\n\t}, [\n\t\tblockClientId,\n\t\tparentBlockName,\n\t\tparentNumberOfInnerBlocks,\n\t\tremoveBlock,\n\t\trootClientId,\n\t] );\n\n\tif ( ! isSelected ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{ isValidAndVisual && (\n\t\t\t\t<>\n\t\t\t\t\t<BlockSettingsButton.Slot>\n\t\t\t\t\t\t{ /* Render only one settings icon even if we have more than one fill - need for hooks with controls. */ }\n\t\t\t\t\t\t{ ( fills = [ null ] ) => {\n\t\t\t\t\t\t\tif ( ! fills?.length > 0 ) {\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn fills[ 0 ];\n\t\t\t\t\t\t} }\n\t\t\t\t\t</BlockSettingsButton.Slot>\n\t\t\t\t\t<BlockControls.Slot group=\"block\" />\n\t\t\t\t\t<BlockControls.Slot />\n\t\t\t\t\t<BlockControls.Slot group=\"inline\" />\n\t\t\t\t\t<BlockControls.Slot group=\"other\" />\n\t\t\t\t\t<UngroupButton />\n\n\t\t\t\t\t<BlockMover\n\t\t\t\t\t\tclientIds={ [ blockClientId ] }\n\t\t\t\t\t\tisStackedHorizontally={ isStackedHorizontally }\n\t\t\t\t\t/>\n\n\t\t\t\t\t<BlockActionsMenu\n\t\t\t\t\t\tclientId={ blockClientId }\n\t\t\t\t\t\tisStackedHorizontally={ isStackedHorizontally }\n\t\t\t\t\t\tonDelete={ onRemove }\n\t\t\t\t\t\tanchorNodeRef={ anchorNodeRef }\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t) }\n\t\t</>\n\t);\n}\n"]}