{"version":3,"sources":["@wordpress/blocks/src/store/utils.js"],"names":["getValueFromObjectPath","object","path","defaultValue","normalizedPath","Array","isArray","split","value","forEach","fieldName"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,sBAAsB,GAAG,CAAEC,MAAF,EAAUC,IAAV,EAAgBC,YAAhB,KAAkC;AAAA;;AACvE,QAAMC,cAAc,GAAGC,KAAK,CAACC,OAAN,CAAeJ,IAAf,IAAwBA,IAAxB,GAA+BA,IAAI,CAACK,KAAL,CAAY,GAAZ,CAAtD;AACA,MAAIC,KAAK,GAAGP,MAAZ;AACAG,EAAAA,cAAc,CAACK,OAAf,CAA0BC,SAAF,IAAiB;AACxCF,IAAAA,KAAK,GAAGA,KAAK,GAAIE,SAAJ,CAAb;AACA,GAFD;AAGA,mBAAOF,KAAP,2CAAgBL,YAAhB;AACA,CAPM","sourcesContent":["/**\n * Helper util to return a value from a certain path of the object.\n * Path is specified as either:\n * - a string of properties, separated by dots, for example: \"x.y\".\n * - an array of properties, for example `[ 'x', 'y' ]`.\n * You can also specify a default value in case the result is nullish.\n *\n * @param {Object}       object       Input object.\n * @param {string|Array} path         Path to the object property.\n * @param {*}            defaultValue Default value if the value at the specified path is nullish.\n * @return {*} Value of the object property at the specified path.\n */\nexport const getValueFromObjectPath = ( object, path, defaultValue ) => {\n\tconst normalizedPath = Array.isArray( path ) ? path : path.split( '.' );\n\tlet value = object;\n\tnormalizedPath.forEach( ( fieldName ) => {\n\t\tvalue = value?.[ fieldName ];\n\t} );\n\treturn value ?? defaultValue;\n};\n"]}