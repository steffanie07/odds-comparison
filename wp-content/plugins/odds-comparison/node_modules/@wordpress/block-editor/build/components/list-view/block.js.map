{"version":3,"sources":["@wordpress/block-editor/src/components/list-view/block.js"],"names":["ListViewBlock","block","clientId","isDragged","isSelected","isBranchSelected","selectBlock","position","level","rowCount","siblingBlockCount","showBlockMovers","path","isExpanded","selectedClientIds","isSyncedBranch","cellRef","rowRef","isHovered","setIsHovered","isLocked","canEdit","isFirstSelectedBlock","isLastSelectedBlock","length","toggleBlockHighlight","blockEditorStore","blockInformation","blockTitle","title","select","getBlock","blockName","getBlockName","blockEditingMode","getBlockEditingMode","showBlockActions","instanceId","descriptionId","blockPositionDescription","blockAriaLabel","settingsAriaLabel","isTreeGridMounted","expand","collapse","BlockSettingsMenu","listViewInstanceId","expandedState","setInsertedBlock","treeGridElementRef","hasSiblings","hasRenderedMovers","moverCellClassName","listViewBlockSettingsClassName","current","focus","onMouseEnter","onMouseLeave","selectEditorBlock","event","preventDefault","updateFocusAndSelection","focusClientId","shouldSelectBlock","undefined","getFocusElement","row","querySelector","focusable","find","focusElement","window","requestAnimationFrame","toggleExpanded","stopPropagation","colSpan","classes","isSynced","dropdownClientIds","includes","rowItemRef","currentlyEditingBlockInCanvas","ref","tabIndex","onFocus","moreVertical","className"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { hasBlockSupport } from '@wordpress/blocks';\nimport {\n\t__experimentalTreeGridCell as TreeGridCell,\n\t__experimentalTreeGridItem as TreeGridItem,\n} from '@wordpress/components';\nimport { useInstanceId } from '@wordpress/compose';\nimport { moreVertical } from '@wordpress/icons';\nimport {\n\tuseState,\n\tuseRef,\n\tuseEffect,\n\tuseCallback,\n\tmemo,\n} from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { sprintf, __ } from '@wordpress/i18n';\nimport { focus } from '@wordpress/dom';\n\n/**\n * Internal dependencies\n */\nimport ListViewLeaf from './leaf';\nimport useListViewScrollIntoView from './use-list-view-scroll-into-view';\nimport {\n\tBlockMoverUpButton,\n\tBlockMoverDownButton,\n} from '../block-mover/button';\nimport ListViewBlockContents from './block-contents';\nimport { useListViewContext } from './context';\nimport { getBlockPositionDescription } from './utils';\nimport { store as blockEditorStore } from '../../store';\nimport useBlockDisplayInformation from '../use-block-display-information';\nimport { useBlockLock } from '../block-lock';\nimport { unlock } from '../../lock-unlock';\nimport AriaReferencedText from './aria-referenced-text';\n\nfunction ListViewBlock( {\n\tblock: { clientId },\n\tisDragged,\n\tisSelected,\n\tisBranchSelected,\n\tselectBlock,\n\tposition,\n\tlevel,\n\trowCount,\n\tsiblingBlockCount,\n\tshowBlockMovers,\n\tpath,\n\tisExpanded,\n\tselectedClientIds,\n\tisSyncedBranch,\n} ) {\n\tconst cellRef = useRef( null );\n\tconst rowRef = useRef( null );\n\tconst [ isHovered, setIsHovered ] = useState( false );\n\n\tconst { isLocked, canEdit } = useBlockLock( clientId );\n\n\tconst isFirstSelectedBlock =\n\t\tisSelected && selectedClientIds[ 0 ] === clientId;\n\tconst isLastSelectedBlock =\n\t\tisSelected &&\n\t\tselectedClientIds[ selectedClientIds.length - 1 ] === clientId;\n\n\tconst { toggleBlockHighlight } = useDispatch( blockEditorStore );\n\n\tconst blockInformation = useBlockDisplayInformation( clientId );\n\tconst blockTitle = blockInformation?.title || __( 'Untitled' );\n\tconst block = useSelect(\n\t\t( select ) => select( blockEditorStore ).getBlock( clientId ),\n\t\t[ clientId ]\n\t);\n\tconst blockName = useSelect(\n\t\t( select ) => select( blockEditorStore ).getBlockName( clientId ),\n\t\t[ clientId ]\n\t);\n\tconst blockEditingMode = useSelect(\n\t\t( select ) =>\n\t\t\tunlock( select( blockEditorStore ) ).getBlockEditingMode(\n\t\t\t\tclientId\n\t\t\t),\n\t\t[ clientId ]\n\t);\n\n\tconst showBlockActions =\n\t\t// When a block hides its toolbar it also hides the block settings menu,\n\t\t// since that menu is part of the toolbar in the editor canvas.\n\t\t// List View respects this by also hiding the block settings menu.\n\t\thasBlockSupport( blockName, '__experimentalToolbar', true ) &&\n\t\t// Don't show the settings menu if block is disabled or content only.\n\t\tblockEditingMode === 'default';\n\tconst instanceId = useInstanceId( ListViewBlock );\n\tconst descriptionId = `list-view-block-select-button__${ instanceId }`;\n\tconst blockPositionDescription = getBlockPositionDescription(\n\t\tposition,\n\t\tsiblingBlockCount,\n\t\tlevel\n\t);\n\n\tconst blockAriaLabel = isLocked\n\t\t? sprintf(\n\t\t\t\t// translators: %s: The title of the block. This string indicates a link to select the locked block.\n\t\t\t\t__( '%s (locked)' ),\n\t\t\t\tblockTitle\n\t\t  )\n\t\t: blockTitle;\n\n\tconst settingsAriaLabel = sprintf(\n\t\t// translators: %s: The title of the block.\n\t\t__( 'Options for %s' ),\n\t\tblockTitle\n\t);\n\n\tconst {\n\t\tisTreeGridMounted,\n\t\texpand,\n\t\tcollapse,\n\t\tBlockSettingsMenu,\n\t\tlistViewInstanceId,\n\t\texpandedState,\n\t\tsetInsertedBlock,\n\t\ttreeGridElementRef,\n\t} = useListViewContext();\n\n\tconst hasSiblings = siblingBlockCount > 0;\n\tconst hasRenderedMovers = showBlockMovers && hasSiblings;\n\tconst moverCellClassName = classnames(\n\t\t'block-editor-list-view-block__mover-cell',\n\t\t{ 'is-visible': isHovered || isSelected }\n\t);\n\n\tconst listViewBlockSettingsClassName = classnames(\n\t\t'block-editor-list-view-block__menu-cell',\n\t\t{ 'is-visible': isHovered || isFirstSelectedBlock }\n\t);\n\n\t// If ListView has experimental features related to the Persistent List View,\n\t// only focus the selected list item on mount; otherwise the list would always\n\t// try to steal the focus from the editor canvas.\n\tuseEffect( () => {\n\t\tif ( ! isTreeGridMounted && isSelected ) {\n\t\t\tcellRef.current.focus();\n\t\t}\n\t}, [] );\n\n\tconst onMouseEnter = useCallback( () => {\n\t\tsetIsHovered( true );\n\t\ttoggleBlockHighlight( clientId, true );\n\t}, [ clientId, setIsHovered, toggleBlockHighlight ] );\n\tconst onMouseLeave = useCallback( () => {\n\t\tsetIsHovered( false );\n\t\ttoggleBlockHighlight( clientId, false );\n\t}, [ clientId, setIsHovered, toggleBlockHighlight ] );\n\n\tconst selectEditorBlock = useCallback(\n\t\t( event ) => {\n\t\t\tselectBlock( event, clientId );\n\t\t\tevent.preventDefault();\n\t\t},\n\t\t[ clientId, selectBlock ]\n\t);\n\n\tconst updateFocusAndSelection = useCallback(\n\t\t( focusClientId, shouldSelectBlock ) => {\n\t\t\tif ( shouldSelectBlock ) {\n\t\t\t\tselectBlock( undefined, focusClientId, null, null );\n\t\t\t}\n\n\t\t\tconst getFocusElement = () => {\n\t\t\t\tconst row = treeGridElementRef.current?.querySelector(\n\t\t\t\t\t`[role=row][data-block=\"${ focusClientId }\"]`\n\t\t\t\t);\n\t\t\t\tif ( ! row ) return null;\n\t\t\t\t// Focus the first focusable in the row, which is the ListViewBlockSelectButton.\n\t\t\t\treturn focus.focusable.find( row )[ 0 ];\n\t\t\t};\n\n\t\t\tlet focusElement = getFocusElement();\n\t\t\tif ( focusElement ) {\n\t\t\t\tfocusElement.focus();\n\t\t\t} else {\n\t\t\t\t// The element hasn't been painted yet. Defer focusing on the next frame.\n\t\t\t\t// This could happen when all blocks have been deleted and the default block\n\t\t\t\t// hasn't been added to the editor yet.\n\t\t\t\twindow.requestAnimationFrame( () => {\n\t\t\t\t\tfocusElement = getFocusElement();\n\t\t\t\t\t// Ignore if the element still doesn't exist.\n\t\t\t\t\tif ( focusElement ) {\n\t\t\t\t\t\tfocusElement.focus();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\t\t[ selectBlock, treeGridElementRef ]\n\t);\n\n\tconst toggleExpanded = useCallback(\n\t\t( event ) => {\n\t\t\t// Prevent shift+click from opening link in a new window when toggling.\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tif ( isExpanded === true ) {\n\t\t\t\tcollapse( clientId );\n\t\t\t} else if ( isExpanded === false ) {\n\t\t\t\texpand( clientId );\n\t\t\t}\n\t\t},\n\t\t[ clientId, expand, collapse, isExpanded ]\n\t);\n\n\tlet colSpan;\n\tif ( hasRenderedMovers ) {\n\t\tcolSpan = 2;\n\t} else if ( ! showBlockActions ) {\n\t\tcolSpan = 3;\n\t}\n\n\tconst classes = classnames( {\n\t\t'is-selected': isSelected,\n\t\t'is-first-selected': isFirstSelectedBlock,\n\t\t'is-last-selected': isLastSelectedBlock,\n\t\t'is-branch-selected': isBranchSelected,\n\t\t'is-synced-branch': isSyncedBranch,\n\t\t'is-dragging': isDragged,\n\t\t'has-single-cell': ! showBlockActions,\n\t\t'is-synced': blockInformation?.isSynced,\n\t} );\n\n\t// Only include all selected blocks if the currently clicked on block\n\t// is one of the selected blocks. This ensures that if a user attempts\n\t// to alter a block that isn't part of the selection, they're still able\n\t// to do so.\n\tconst dropdownClientIds = selectedClientIds.includes( clientId )\n\t\t? selectedClientIds\n\t\t: [ clientId ];\n\n\t// Pass in a ref to the row, so that it can be scrolled\n\t// into view when selected. For long lists, the placeholder for the\n\t// selected block is also observed, within ListViewLeafPlaceholder.\n\tuseListViewScrollIntoView( {\n\t\tisSelected,\n\t\trowItemRef: rowRef,\n\t\tselectedClientIds,\n\t} );\n\n\t// Detect if there is a block in the canvas currently being edited and multi-selection is not happening.\n\tconst currentlyEditingBlockInCanvas =\n\t\tisSelected && selectedClientIds.length === 1;\n\n\treturn (\n\t\t<ListViewLeaf\n\t\t\tclassName={ classes }\n\t\t\tonMouseEnter={ onMouseEnter }\n\t\t\tonMouseLeave={ onMouseLeave }\n\t\t\tonFocus={ onMouseEnter }\n\t\t\tonBlur={ onMouseLeave }\n\t\t\tlevel={ level }\n\t\t\tposition={ position }\n\t\t\trowCount={ rowCount }\n\t\t\tpath={ path }\n\t\t\tid={ `list-view-${ listViewInstanceId }-block-${ clientId }` }\n\t\t\tdata-block={ clientId }\n\t\t\tdata-expanded={ canEdit ? isExpanded : undefined }\n\t\t\tref={ rowRef }\n\t\t>\n\t\t\t<TreeGridCell\n\t\t\t\tclassName=\"block-editor-list-view-block__contents-cell\"\n\t\t\t\tcolSpan={ colSpan }\n\t\t\t\tref={ cellRef }\n\t\t\t\taria-selected={ !! isSelected }\n\t\t\t>\n\t\t\t\t{ ( { ref, tabIndex, onFocus } ) => (\n\t\t\t\t\t<div className=\"block-editor-list-view-block__contents-container\">\n\t\t\t\t\t\t<ListViewBlockContents\n\t\t\t\t\t\t\tblock={ block }\n\t\t\t\t\t\t\tonClick={ selectEditorBlock }\n\t\t\t\t\t\t\tonToggleExpanded={ toggleExpanded }\n\t\t\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\t\t\tposition={ position }\n\t\t\t\t\t\t\tsiblingBlockCount={ siblingBlockCount }\n\t\t\t\t\t\t\tlevel={ level }\n\t\t\t\t\t\t\tref={ ref }\n\t\t\t\t\t\t\ttabIndex={\n\t\t\t\t\t\t\t\tcurrentlyEditingBlockInCanvas ? 0 : tabIndex\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\t\t\tisExpanded={ canEdit ? isExpanded : undefined }\n\t\t\t\t\t\t\tselectedClientIds={ selectedClientIds }\n\t\t\t\t\t\t\tariaLabel={ blockAriaLabel }\n\t\t\t\t\t\t\tariaDescribedBy={ descriptionId }\n\t\t\t\t\t\t\tupdateFocusAndSelection={ updateFocusAndSelection }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<AriaReferencedText id={ descriptionId }>\n\t\t\t\t\t\t\t{ blockPositionDescription }\n\t\t\t\t\t\t</AriaReferencedText>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t</TreeGridCell>\n\t\t\t{ hasRenderedMovers && (\n\t\t\t\t<>\n\t\t\t\t\t<TreeGridCell\n\t\t\t\t\t\tclassName={ moverCellClassName }\n\t\t\t\t\t\twithoutGridItem\n\t\t\t\t\t>\n\t\t\t\t\t\t<TreeGridItem>\n\t\t\t\t\t\t\t{ ( { ref, tabIndex, onFocus } ) => (\n\t\t\t\t\t\t\t\t<BlockMoverUpButton\n\t\t\t\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\t\t\t\tclientIds={ [ clientId ] }\n\t\t\t\t\t\t\t\t\tref={ ref }\n\t\t\t\t\t\t\t\t\ttabIndex={ tabIndex }\n\t\t\t\t\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</TreeGridItem>\n\t\t\t\t\t\t<TreeGridItem>\n\t\t\t\t\t\t\t{ ( { ref, tabIndex, onFocus } ) => (\n\t\t\t\t\t\t\t\t<BlockMoverDownButton\n\t\t\t\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\t\t\t\tclientIds={ [ clientId ] }\n\t\t\t\t\t\t\t\t\tref={ ref }\n\t\t\t\t\t\t\t\t\ttabIndex={ tabIndex }\n\t\t\t\t\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</TreeGridItem>\n\t\t\t\t\t</TreeGridCell>\n\t\t\t\t</>\n\t\t\t) }\n\n\t\t\t{ showBlockActions && BlockSettingsMenu && (\n\t\t\t\t<TreeGridCell\n\t\t\t\t\tclassName={ listViewBlockSettingsClassName }\n\t\t\t\t\taria-selected={ !! isSelected }\n\t\t\t\t>\n\t\t\t\t\t{ ( { ref, tabIndex, onFocus } ) => (\n\t\t\t\t\t\t<BlockSettingsMenu\n\t\t\t\t\t\t\tclientIds={ dropdownClientIds }\n\t\t\t\t\t\t\tblock={ block }\n\t\t\t\t\t\t\ticon={ moreVertical }\n\t\t\t\t\t\t\tlabel={ settingsAriaLabel }\n\t\t\t\t\t\t\ttoggleProps={ {\n\t\t\t\t\t\t\t\tref,\n\t\t\t\t\t\t\t\tclassName: 'block-editor-list-view-block__menu',\n\t\t\t\t\t\t\t\ttabIndex,\n\t\t\t\t\t\t\t\tonFocus,\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tdisableOpenOnArrowDown\n\t\t\t\t\t\t\texpand={ expand }\n\t\t\t\t\t\t\texpandedState={ expandedState }\n\t\t\t\t\t\t\tsetInsertedBlock={ setInsertedBlock }\n\t\t\t\t\t\t\t__experimentalSelectBlock={\n\t\t\t\t\t\t\t\tupdateFocusAndSelection\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</TreeGridCell>\n\t\t\t) }\n\t\t</ListViewLeaf>\n\t);\n}\n\nexport default memo( ListViewBlock );\n"]}