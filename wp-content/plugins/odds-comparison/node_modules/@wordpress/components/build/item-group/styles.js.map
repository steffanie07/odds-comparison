{"version":3,"sources":["@wordpress/components/src/item-group/styles.ts"],"names":["unstyledButton","as","css","undefined","COLORS","ui","theme","itemWrapper","item","bordered","CONFIG","surfaceBorderColor","separated","borderRadius","controlBorderRadius","spacedAround","rounded","baseFontHeight","fontSize","fontLineHeightBase","paddingY","controlHeight","paddingYSmall","controlHeightSmall","paddingYLarge","controlHeightLarge","itemSizes","small","controlPaddingXSmall","medium","controlPaddingX","large","controlPaddingXLarge"],"mappings":";;;;;;;AAGA;;AAKA;;;;AAEO,MAAMA,cAAc,GAAKC,EAAF,IAA0B;AACvD,0BAAOC,UAAP,gBACe,iBAAM,kBAAN,CADf,wIAQqBD,EAAE,KAAK,GAAP,GAAa,MAAb,GAAsBE,SAR3C,iDAgBYC,cAAOC,EAAP,CAAUC,KAhBtB,0MA4BoCF,cAAOC,EAAP,CAAUC,KA5B9C;AAmCA,CApCM;;;AAsCA,MAAMC,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;;AAKA,MAAMC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAV;;AAQA,MAAMC,QAAQ,oBAAGP,UAAH,uBACCQ,cAAOC,kBADR,8tIAAd;;AAIA,MAAMC,SAAS,oBAAGV,UAAH,kDAEQQ,cAAOC,kBAFf,iyIAAf;;AAUP,MAAME,YAAY,GAAGH,cAAOI,mBAA5B;AAEO,MAAMC,YAAY,oBAAGb,UAAH,oBACNW,YADM,kuIAAlB;;AAIA,MAAMG,OAAO,oBAAGd,UAAH,oBACDW,YADC,iDAISA,YAJT,+BAKUA,YALV,oDASYA,YATZ,kCAUaA,YAVb,8tIAAb;;AAcP,MAAMI,cAAc,GAAI,QAAQP,cAAOQ,QAAU,MAAMR,cAAOS,kBAAoB,GAAlF;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAI,SAASV,cAAOW,aAAe,MAAMJ,cAAgB,cAAvE;AACA,MAAMK,aAAa,GAAI,SAASZ,cAAOa,kBAAoB,MAAMN,cAAgB,cAAjF;AACA,MAAMO,aAAa,GAAI,SAASd,cAAOe,kBAAoB,MAAMR,cAAgB,cAAjF;AAEO,MAAMS,SAAS,GAAG;AACxBC,EAAAA,KAAK,mBAAEzB,UAAF,cACQoB,aADR,OAC2BZ,cAAOkB,oBADlC,2tIADmB;AAIxBC,EAAAA,MAAM,mBAAE3B,UAAF,cACOkB,QADP,OACqBV,cAAOoB,eAD5B,4tIAJkB;AAOxBC,EAAAA,KAAK,mBAAE7B,UAAF,cACQsB,aADR,OAC2Bd,cAAOsB,oBADlC;AAPmB,CAAlB","sourcesContent":["/**\n * External dependencies\n */\nimport { css } from '@emotion/react';\n\n/**\n * Internal dependencies\n */\nimport { CONFIG, COLORS, font } from '../utils';\n\nexport const unstyledButton = ( as: 'a' | 'button' ) => {\n\treturn css`\n\t\tfont-size: ${ font( 'default.fontSize' ) };\n\t\tfont-family: inherit;\n\t\tappearance: none;\n\t\tborder: 1px solid transparent;\n\t\tcursor: pointer;\n\t\tbackground: none;\n\t\ttext-align: start;\n\t\ttext-decoration: ${ as === 'a' ? 'none' : undefined };\n\n\t\tsvg,\n\t\tpath {\n\t\t\tfill: currentColor;\n\t\t}\n\n\t\t&:hover {\n\t\t\tcolor: ${ COLORS.ui.theme };\n\t\t}\n\n\t\t&:focus {\n\t\t\tbox-shadow: none;\n\t\t\toutline: none;\n\t\t}\n\n\t\t&:focus-visible {\n\t\t\tbox-shadow: 0 0 0 var( --wp-admin-border-width-focus )\n\t\t\t\tvar(\n\t\t\t\t\t--wp-components-color-accent,\n\t\t\t\t\tvar( --wp-admin-theme-color, ${ COLORS.ui.theme } )\n\t\t\t\t);\n\t\t\t// Windows high contrast mode.\n\t\t\toutline: 2px solid transparent;\n\t\t\toutline-offset: 0;\n\t\t}\n\t`;\n};\n\nexport const itemWrapper = css`\n\twidth: 100%;\n\tdisplay: block;\n`;\n\nexport const item = css`\n\tbox-sizing: border-box;\n\twidth: 100%;\n\tdisplay: block;\n\tmargin: 0;\n\tcolor: inherit;\n`;\n\nexport const bordered = css`\n\tborder: 1px solid ${ CONFIG.surfaceBorderColor };\n`;\n\nexport const separated = css`\n\t> *:not( marquee ) > * {\n\t\tborder-bottom: 1px solid ${ CONFIG.surfaceBorderColor };\n\t}\n\n\t> *:last-of-type > *:not( :focus ) {\n\t\tborder-bottom-color: transparent;\n\t}\n`;\n\nconst borderRadius = CONFIG.controlBorderRadius;\n\nexport const spacedAround = css`\n\tborder-radius: ${ borderRadius };\n`;\n\nexport const rounded = css`\n\tborder-radius: ${ borderRadius };\n\n\t> *:first-of-type > * {\n\t\tborder-top-left-radius: ${ borderRadius };\n\t\tborder-top-right-radius: ${ borderRadius };\n\t}\n\n\t> *:last-of-type > * {\n\t\tborder-bottom-left-radius: ${ borderRadius };\n\t\tborder-bottom-right-radius: ${ borderRadius };\n\t}\n`;\n\nconst baseFontHeight = `calc(${ CONFIG.fontSize } * ${ CONFIG.fontLineHeightBase })`;\n\n/*\n * Math:\n * - Use the desired height as the base value\n * - Subtract the computed height of (default) text\n * - Subtract the effects of border\n * - Divide the calculated number by 2, in order to get an individual top/bottom padding\n */\nconst paddingY = `calc((${ CONFIG.controlHeight } - ${ baseFontHeight } - 2px) / 2)`;\nconst paddingYSmall = `calc((${ CONFIG.controlHeightSmall } - ${ baseFontHeight } - 2px) / 2)`;\nconst paddingYLarge = `calc((${ CONFIG.controlHeightLarge } - ${ baseFontHeight } - 2px) / 2)`;\n\nexport const itemSizes = {\n\tsmall: css`\n\t\tpadding: ${ paddingYSmall } ${ CONFIG.controlPaddingXSmall };\n\t`,\n\tmedium: css`\n\t\tpadding: ${ paddingY } ${ CONFIG.controlPaddingX };\n\t`,\n\tlarge: css`\n\t\tpadding: ${ paddingYLarge } ${ CONFIG.controlPaddingXLarge };\n\t`,\n};\n"]}