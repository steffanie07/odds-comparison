{"version":3,"sources":["@wordpress/block-editor/src/components/global-styles/use-global-styles-output.js"],"names":["BLOCK_SUPPORT_FEATURE_LEVEL_SELECTORS","__experimentalBorder","color","spacing","typography","compileStyleValue","uncompiledValue","VARIABLE_REFERENCE_PREFIX","VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE","VARIABLE_PATH_SEPARATOR_TOKEN_STYLE","startsWith","variable","slice","length","split","join","getPresetsDeclarations","blockPresets","mergedSettings","PRESET_METADATA","reduce","declarations","path","valueKey","valueFunc","cssVarInfix","presetByOrigin","forEach","origin","value","push","slug","getPresetsClasses","blockSelector","classes","classSuffix","propertyName","classSelectorToUse","selectorToUse","map","selector","getPresetsSvgFilters","filter","metadata","at","flatMap","preset","flattenTree","input","prefix","token","result","Object","keys","key","newKey","replace","newLeaf","newPrefix","concatFeatureVariationSelectorString","featureSelector","styleVariationSelector","featureSelectors","combinedSelectors","trim","getFeatureDeclarations","selectors","styles","entries","feature","isShorthand","subfeature","subfeatureSelector","subfeatureStyles","newDeclarations","getStylesDeclarations","root","featureStyles","blockStyles","useRootPaddingAlign","tree","isRoot","ROOT_BLOCK_SELECTOR","output","STYLE_PROPERTY","properties","useEngine","rootOnly","pathToValue","styleValue","entry","name","prop","cssProperty","extraRules","rule","ruleValue","ref","refPath","size","settings","getLayoutStyles","layoutDefinitions","LAYOUT_DEFINITIONS","style","hasBlockGapSupport","hasFallbackGapSupport","fallbackGapValue","ruleset","gapValue","blockGap","values","className","spacingStyles","spacingStyle","rules","cssValue","combinedSelector","validDisplayModes","displayMode","baseStyles","includes","baseStyle","STYLE_KEYS","pickStyleKeys","treeToPickFrom","pickedEntries","clonedEntries","JSON","parse","stringify","fromEntries","getNodesWithStyles","blockSelectors","nodes","ELEMENTS","elements","blocks","blockName","node","variations","variation","duotoneSelector","hasLayoutSupport","styleVariationSelectors","elementName","sel","elementSelectors","elementSelector","getNodesWithSettings","pickPresets","presets","custom","blockCustom","toCustomProperties","customProps","toStyles","disableLayoutStyles","nodesWithStyles","nodesWithSettings","useRootPaddingAwareAlignments","contentSize","wideSize","layout","featureDeclarations","cssSelector","styleVariationName","styleVariations","baseSelector","styleVariationDeclarations","duotoneStyles","duotoneDeclarations","pseudoSelectorStyles","pseudoKey","pseudoStyle","pseudoDeclarations","_selector","pseudoRule","toSvgFilters","getSelectorsConfig","blockType","rootSelector","config","featureKey","featureName","getBlockSelectors","blockTypes","getBlockStyles","duotoneSupport","supports","__experimentalLayout","__experimentalDefault","blockStyleVariations","undefined","updateConfigWithSeparator","needsSeparatorStyleUpdate","background","text","border","processCSSNesting","css","processedCSS","parts","part","useGlobalStylesOutputWithConfig","mergedConfig","select","getSettings","blockEditorStore","blocksStore","customProperties","globalStyles","svgs","isGlobalStyles","assets","__unstableType","useGlobalStylesOutput","merged","GlobalStylesContext"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\t__EXPERIMENTAL_STYLE_PROPERTY as STYLE_PROPERTY,\n\t__EXPERIMENTAL_ELEMENTS as ELEMENTS,\n\tgetBlockSupport,\n\tgetBlockTypes,\n\tstore as blocksStore,\n} from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\nimport { renderToString, useContext, useMemo } from '@wordpress/element';\nimport { getCSSRules } from '@wordpress/style-engine';\n\n/**\n * Internal dependencies\n */\nimport { PRESET_METADATA, ROOT_BLOCK_SELECTOR, scopeSelector } from './utils';\nimport { getBlockCSSSelector } from './get-block-css-selector';\nimport {\n\tgetTypographyFontSizeValue,\n\tgetFluidTypographyOptionsFromSettings,\n} from './typography-utils';\nimport { GlobalStylesContext } from './context';\nimport { useGlobalSetting } from './hooks';\nimport { PresetDuotoneFilter } from '../duotone/components';\nimport { getGapCSSValue } from '../../hooks/gap';\nimport { store as blockEditorStore } from '../../store';\nimport { LAYOUT_DEFINITIONS } from '../../layouts/definitions';\nimport {\n\tgetValueFromObjectPath,\n\tkebabCase,\n\tsetImmutably,\n} from '../../utils/object';\n\n// List of block support features that can have their related styles\n// generated under their own feature level selector rather than the block's.\nconst BLOCK_SUPPORT_FEATURE_LEVEL_SELECTORS = {\n\t__experimentalBorder: 'border',\n\tcolor: 'color',\n\tspacing: 'spacing',\n\ttypography: 'typography',\n};\n\nfunction compileStyleValue( uncompiledValue ) {\n\tconst VARIABLE_REFERENCE_PREFIX = 'var:';\n\tconst VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE = '|';\n\tconst VARIABLE_PATH_SEPARATOR_TOKEN_STYLE = '--';\n\n\tif ( uncompiledValue?.startsWith?.( VARIABLE_REFERENCE_PREFIX ) ) {\n\t\tconst variable = uncompiledValue\n\t\t\t.slice( VARIABLE_REFERENCE_PREFIX.length )\n\t\t\t.split( VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE )\n\t\t\t.join( VARIABLE_PATH_SEPARATOR_TOKEN_STYLE );\n\t\treturn `var(--wp--${ variable })`;\n\t}\n\treturn uncompiledValue;\n}\n\n/**\n * Transform given preset tree into a set of style declarations.\n *\n * @param {Object} blockPresets\n * @param {Object} mergedSettings Merged theme.json settings.\n *\n * @return {Array<Object>} An array of style declarations.\n */\nfunction getPresetsDeclarations( blockPresets = {}, mergedSettings ) {\n\treturn PRESET_METADATA.reduce(\n\t\t( declarations, { path, valueKey, valueFunc, cssVarInfix } ) => {\n\t\t\tconst presetByOrigin = getValueFromObjectPath(\n\t\t\t\tblockPresets,\n\t\t\t\tpath,\n\t\t\t\t[]\n\t\t\t);\n\t\t\t[ 'default', 'theme', 'custom' ].forEach( ( origin ) => {\n\t\t\t\tif ( presetByOrigin[ origin ] ) {\n\t\t\t\t\tpresetByOrigin[ origin ].forEach( ( value ) => {\n\t\t\t\t\t\tif ( valueKey && ! valueFunc ) {\n\t\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\t\t`--wp--preset--${ cssVarInfix }--${ kebabCase(\n\t\t\t\t\t\t\t\t\tvalue.slug\n\t\t\t\t\t\t\t\t) }: ${ value[ valueKey ] }`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tvalueFunc &&\n\t\t\t\t\t\t\ttypeof valueFunc === 'function'\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\t\t`--wp--preset--${ cssVarInfix }--${ kebabCase(\n\t\t\t\t\t\t\t\t\tvalue.slug\n\t\t\t\t\t\t\t\t) }: ${ valueFunc( value, mergedSettings ) }`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn declarations;\n\t\t},\n\t\t[]\n\t);\n}\n\n/**\n * Transform given preset tree into a set of preset class declarations.\n *\n * @param {?string} blockSelector\n * @param {Object}  blockPresets\n * @return {string} CSS declarations for the preset classes.\n */\nfunction getPresetsClasses( blockSelector = '*', blockPresets = {} ) {\n\treturn PRESET_METADATA.reduce(\n\t\t( declarations, { path, cssVarInfix, classes } ) => {\n\t\t\tif ( ! classes ) {\n\t\t\t\treturn declarations;\n\t\t\t}\n\n\t\t\tconst presetByOrigin = getValueFromObjectPath(\n\t\t\t\tblockPresets,\n\t\t\t\tpath,\n\t\t\t\t[]\n\t\t\t);\n\t\t\t[ 'default', 'theme', 'custom' ].forEach( ( origin ) => {\n\t\t\t\tif ( presetByOrigin[ origin ] ) {\n\t\t\t\t\tpresetByOrigin[ origin ].forEach( ( { slug } ) => {\n\t\t\t\t\t\tclasses.forEach( ( { classSuffix, propertyName } ) => {\n\t\t\t\t\t\t\tconst classSelectorToUse = `.has-${ kebabCase(\n\t\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t\t) }-${ classSuffix }`;\n\t\t\t\t\t\t\tconst selectorToUse = blockSelector\n\t\t\t\t\t\t\t\t.split( ',' ) // Selector can be \"h1, h2, h3\"\n\t\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t\t( selector ) =>\n\t\t\t\t\t\t\t\t\t\t`${ selector }${ classSelectorToUse }`\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.join( ',' );\n\t\t\t\t\t\t\tconst value = `var(--wp--preset--${ cssVarInfix }--${ kebabCase(\n\t\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t\t) })`;\n\t\t\t\t\t\t\tdeclarations += `${ selectorToUse }{${ propertyName }: ${ value } !important;}`;\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t\treturn declarations;\n\t\t},\n\t\t''\n\t);\n}\n\nfunction getPresetsSvgFilters( blockPresets = {} ) {\n\treturn PRESET_METADATA.filter(\n\t\t// Duotone are the only type of filters for now.\n\t\t( metadata ) => metadata.path.at( -1 ) === 'duotone'\n\t).flatMap( ( metadata ) => {\n\t\tconst presetByOrigin = getValueFromObjectPath(\n\t\t\tblockPresets,\n\t\t\tmetadata.path,\n\t\t\t{}\n\t\t);\n\t\treturn [ 'default', 'theme' ]\n\t\t\t.filter( ( origin ) => presetByOrigin[ origin ] )\n\t\t\t.flatMap( ( origin ) =>\n\t\t\t\tpresetByOrigin[ origin ].map( ( preset ) =>\n\t\t\t\t\trenderToString(\n\t\t\t\t\t\t<PresetDuotoneFilter\n\t\t\t\t\t\t\tpreset={ preset }\n\t\t\t\t\t\t\tkey={ preset.slug }\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t\t.join( '' );\n\t} );\n}\n\nfunction flattenTree( input = {}, prefix, token ) {\n\tlet result = [];\n\tObject.keys( input ).forEach( ( key ) => {\n\t\tconst newKey = prefix + kebabCase( key.replace( '/', '-' ) );\n\t\tconst newLeaf = input[ key ];\n\n\t\tif ( newLeaf instanceof Object ) {\n\t\t\tconst newPrefix = newKey + token;\n\t\t\tresult = [ ...result, ...flattenTree( newLeaf, newPrefix, token ) ];\n\t\t} else {\n\t\t\tresult.push( `${ newKey }: ${ newLeaf }` );\n\t\t}\n\t} );\n\treturn result;\n}\n\n/**\n * Gets variation selector string from feature selector.\n *\n * @param {string} featureSelector        The feature selector.\n *\n * @param {string} styleVariationSelector The style variation selector.\n * @return {string} Combined selector string.\n *\n */\nfunction concatFeatureVariationSelectorString(\n\tfeatureSelector,\n\tstyleVariationSelector\n) {\n\tconst featureSelectors = featureSelector.split( ',' );\n\tconst combinedSelectors = [];\n\tfeatureSelectors.forEach( ( selector ) => {\n\t\tcombinedSelectors.push(\n\t\t\t`${ styleVariationSelector.trim() }${ selector.trim() }`\n\t\t);\n\t} );\n\treturn combinedSelectors.join( ', ' );\n}\n\n/**\n * Generate style declarations for a block's custom feature and subfeature\n * selectors.\n *\n * NOTE: The passed `styles` object will be mutated by this function.\n *\n * @param {Object} selectors Custom selectors object for a block.\n * @param {Object} styles    A block's styles object.\n *\n * @return {Object} Style declarations.\n */\nconst getFeatureDeclarations = ( selectors, styles ) => {\n\tconst declarations = {};\n\n\tObject.entries( selectors ).forEach( ( [ feature, selector ] ) => {\n\t\t// We're only processing features/subfeatures that have styles.\n\t\tif ( feature === 'root' || ! styles?.[ feature ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isShorthand = typeof selector === 'string';\n\n\t\t// If we have a selector object instead of shorthand process it.\n\t\tif ( ! isShorthand ) {\n\t\t\tObject.entries( selector ).forEach(\n\t\t\t\t( [ subfeature, subfeatureSelector ] ) => {\n\t\t\t\t\t// Don't process root feature selector yet or any\n\t\t\t\t\t// subfeature that doesn't have a style.\n\t\t\t\t\tif (\n\t\t\t\t\t\tsubfeature === 'root' ||\n\t\t\t\t\t\t! styles?.[ feature ][ subfeature ]\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create a temporary styles object and build\n\t\t\t\t\t// declarations for subfeature.\n\t\t\t\t\tconst subfeatureStyles = {\n\t\t\t\t\t\t[ feature ]: {\n\t\t\t\t\t\t\t[ subfeature ]: styles[ feature ][ subfeature ],\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t\tconst newDeclarations =\n\t\t\t\t\t\tgetStylesDeclarations( subfeatureStyles );\n\n\t\t\t\t\t// Merge new declarations in with any others that\n\t\t\t\t\t// share the same selector.\n\t\t\t\t\tdeclarations[ subfeatureSelector ] = [\n\t\t\t\t\t\t...( declarations[ subfeatureSelector ] || [] ),\n\t\t\t\t\t\t...newDeclarations,\n\t\t\t\t\t];\n\n\t\t\t\t\t// Remove the subfeature's style now it will be\n\t\t\t\t\t// included under its own selector not the block's.\n\t\t\t\t\tdelete styles[ feature ][ subfeature ];\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\t// Now subfeatures have been processed and removed, we can\n\t\t// process root, or shorthand, feature selectors.\n\t\tif ( isShorthand || selector.root ) {\n\t\t\tconst featureSelector = isShorthand ? selector : selector.root;\n\n\t\t\t// Create temporary style object and build declarations for feature.\n\t\t\tconst featureStyles = { [ feature ]: styles[ feature ] };\n\t\t\tconst newDeclarations = getStylesDeclarations( featureStyles );\n\n\t\t\t// Merge new declarations with any others that share the selector.\n\t\t\tdeclarations[ featureSelector ] = [\n\t\t\t\t...( declarations[ featureSelector ] || [] ),\n\t\t\t\t...newDeclarations,\n\t\t\t];\n\n\t\t\t// Remove the feature from the block's styles now as it will be\n\t\t\t// included under its own selector not the block's.\n\t\t\tdelete styles[ feature ];\n\t\t}\n\t} );\n\n\treturn declarations;\n};\n\n/**\n * Transform given style tree into a set of style declarations.\n *\n * @param {Object}  blockStyles         Block styles.\n *\n * @param {string}  selector            The selector these declarations should attach to.\n *\n * @param {boolean} useRootPaddingAlign Whether to use CSS custom properties in root selector.\n *\n * @param {Object}  tree                A theme.json tree containing layout definitions.\n *\n * @return {Array} An array of style declarations.\n */\nexport function getStylesDeclarations(\n\tblockStyles = {},\n\tselector = '',\n\tuseRootPaddingAlign,\n\ttree = {}\n) {\n\tconst isRoot = ROOT_BLOCK_SELECTOR === selector;\n\tconst output = Object.entries( STYLE_PROPERTY ).reduce(\n\t\t(\n\t\t\tdeclarations,\n\t\t\t[ key, { value, properties, useEngine, rootOnly } ]\n\t\t) => {\n\t\t\tif ( rootOnly && ! isRoot ) {\n\t\t\t\treturn declarations;\n\t\t\t}\n\t\t\tconst pathToValue = value;\n\t\t\tif ( pathToValue[ 0 ] === 'elements' || useEngine ) {\n\t\t\t\treturn declarations;\n\t\t\t}\n\n\t\t\tconst styleValue = getValueFromObjectPath(\n\t\t\t\tblockStyles,\n\t\t\t\tpathToValue\n\t\t\t);\n\n\t\t\t// Root-level padding styles don't currently support strings with CSS shorthand values.\n\t\t\t// This may change: https://github.com/WordPress/gutenberg/issues/40132.\n\t\t\tif (\n\t\t\t\tkey === '--wp--style--root--padding' &&\n\t\t\t\t( typeof styleValue === 'string' || ! useRootPaddingAlign )\n\t\t\t) {\n\t\t\t\treturn declarations;\n\t\t\t}\n\n\t\t\tif ( properties && typeof styleValue !== 'string' ) {\n\t\t\t\tObject.entries( properties ).forEach( ( entry ) => {\n\t\t\t\t\tconst [ name, prop ] = entry;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t! getValueFromObjectPath( styleValue, [ prop ], false )\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Do not create a declaration\n\t\t\t\t\t\t// for sub-properties that don't have any value.\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst cssProperty = name.startsWith( '--' )\n\t\t\t\t\t\t? name\n\t\t\t\t\t\t: kebabCase( name );\n\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t`${ cssProperty }: ${ compileStyleValue(\n\t\t\t\t\t\t\tgetValueFromObjectPath( styleValue, [ prop ] )\n\t\t\t\t\t\t) }`\n\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t} else if (\n\t\t\t\tgetValueFromObjectPath( blockStyles, pathToValue, false )\n\t\t\t) {\n\t\t\t\tconst cssProperty = key.startsWith( '--' )\n\t\t\t\t\t? key\n\t\t\t\t\t: kebabCase( key );\n\t\t\t\tdeclarations.push(\n\t\t\t\t\t`${ cssProperty }: ${ compileStyleValue(\n\t\t\t\t\t\tgetValueFromObjectPath( blockStyles, pathToValue )\n\t\t\t\t\t) }`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn declarations;\n\t\t},\n\t\t[]\n\t);\n\n\t// The goal is to move everything to server side generated engine styles\n\t// This is temporary as we absorb more and more styles into the engine.\n\tconst extraRules = getCSSRules( blockStyles );\n\textraRules.forEach( ( rule ) => {\n\t\t// Don't output padding properties if padding variables are set.\n\t\tif (\n\t\t\tisRoot &&\n\t\t\tuseRootPaddingAlign &&\n\t\t\trule.key.startsWith( 'padding' )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tconst cssProperty = rule.key.startsWith( '--' )\n\t\t\t? rule.key\n\t\t\t: kebabCase( rule.key );\n\n\t\tlet ruleValue = rule.value;\n\t\tif ( typeof ruleValue !== 'string' && ruleValue?.ref ) {\n\t\t\tconst refPath = ruleValue.ref.split( '.' );\n\t\t\truleValue = getValueFromObjectPath( tree, refPath );\n\t\t\t// Presence of another ref indicates a reference to another dynamic value.\n\t\t\t// Pointing to another dynamic value is not supported.\n\t\t\tif ( ! ruleValue || ruleValue?.ref ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Calculate fluid typography rules where available.\n\t\tif ( cssProperty === 'font-size' ) {\n\t\t\t/*\n\t\t\t * getTypographyFontSizeValue() will check\n\t\t\t * if fluid typography has been activated and also\n\t\t\t * whether the incoming value can be converted to a fluid value.\n\t\t\t * Values that already have a \"clamp()\" function will not pass the test,\n\t\t\t * and therefore the original $value will be returned.\n\t\t\t */\n\t\t\truleValue = getTypographyFontSizeValue(\n\t\t\t\t{ size: ruleValue },\n\t\t\t\tgetFluidTypographyOptionsFromSettings( tree?.settings )\n\t\t\t);\n\t\t}\n\n\t\toutput.push( `${ cssProperty }: ${ ruleValue }` );\n\t} );\n\n\treturn output;\n}\n\n/**\n * Get generated CSS for layout styles by looking up layout definitions provided\n * in theme.json, and outputting common layout styles, and specific blockGap values.\n *\n * @param {Object}  props\n * @param {Object}  props.layoutDefinitions     Layout definitions, keyed by layout type.\n * @param {Object}  props.style                 A style object containing spacing values.\n * @param {string}  props.selector              Selector used to group together layout styling rules.\n * @param {boolean} props.hasBlockGapSupport    Whether or not the theme opts-in to blockGap support.\n * @param {boolean} props.hasFallbackGapSupport Whether or not the theme allows fallback gap styles.\n * @param {?string} props.fallbackGapValue      An optional fallback gap value if no real gap value is available.\n * @return {string} Generated CSS rules for the layout styles.\n */\nexport function getLayoutStyles( {\n\tlayoutDefinitions = LAYOUT_DEFINITIONS,\n\tstyle,\n\tselector,\n\thasBlockGapSupport,\n\thasFallbackGapSupport,\n\tfallbackGapValue,\n} ) {\n\tlet ruleset = '';\n\tlet gapValue = hasBlockGapSupport\n\t\t? getGapCSSValue( style?.spacing?.blockGap )\n\t\t: '';\n\n\t// Ensure a fallback gap value for the root layout definitions,\n\t// and use a fallback value if one is provided for the current block.\n\tif ( hasFallbackGapSupport ) {\n\t\tif ( selector === ROOT_BLOCK_SELECTOR ) {\n\t\t\tgapValue = ! gapValue ? '0.5em' : gapValue;\n\t\t} else if ( ! hasBlockGapSupport && fallbackGapValue ) {\n\t\t\tgapValue = fallbackGapValue;\n\t\t}\n\t}\n\n\tif ( gapValue && layoutDefinitions ) {\n\t\tObject.values( layoutDefinitions ).forEach(\n\t\t\t( { className, name, spacingStyles } ) => {\n\t\t\t\t// Allow outputting fallback gap styles for flex layout type when block gap support isn't available.\n\t\t\t\tif (\n\t\t\t\t\t! hasBlockGapSupport &&\n\t\t\t\t\t'flex' !== name &&\n\t\t\t\t\t'grid' !== name\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( spacingStyles?.length ) {\n\t\t\t\t\tspacingStyles.forEach( ( spacingStyle ) => {\n\t\t\t\t\t\tconst declarations = [];\n\n\t\t\t\t\t\tif ( spacingStyle.rules ) {\n\t\t\t\t\t\t\tObject.entries( spacingStyle.rules ).forEach(\n\t\t\t\t\t\t\t\t( [ cssProperty, cssValue ] ) => {\n\t\t\t\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\t\t\t\t`${ cssProperty }: ${\n\t\t\t\t\t\t\t\t\t\t\tcssValue ? cssValue : gapValue\n\t\t\t\t\t\t\t\t\t\t}`\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( declarations.length ) {\n\t\t\t\t\t\t\tlet combinedSelector = '';\n\n\t\t\t\t\t\t\tif ( ! hasBlockGapSupport ) {\n\t\t\t\t\t\t\t\t// For fallback gap styles, use lower specificity, to ensure styles do not unintentionally override theme styles.\n\t\t\t\t\t\t\t\tcombinedSelector =\n\t\t\t\t\t\t\t\t\tselector === ROOT_BLOCK_SELECTOR\n\t\t\t\t\t\t\t\t\t\t? `:where(.${ className }${\n\t\t\t\t\t\t\t\t\t\t\t\tspacingStyle?.selector || ''\n\t\t\t\t\t\t\t\t\t\t  })`\n\t\t\t\t\t\t\t\t\t\t: `:where(${ selector }.${ className }${\n\t\t\t\t\t\t\t\t\t\t\t\tspacingStyle?.selector || ''\n\t\t\t\t\t\t\t\t\t\t  })`;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcombinedSelector =\n\t\t\t\t\t\t\t\t\tselector === ROOT_BLOCK_SELECTOR\n\t\t\t\t\t\t\t\t\t\t? `:where(${ selector } .${ className })${\n\t\t\t\t\t\t\t\t\t\t\t\tspacingStyle?.selector || ''\n\t\t\t\t\t\t\t\t\t\t  }`\n\t\t\t\t\t\t\t\t\t\t: `${ selector }-${ className }${\n\t\t\t\t\t\t\t\t\t\t\t\tspacingStyle?.selector || ''\n\t\t\t\t\t\t\t\t\t\t  }`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\truleset += `${ combinedSelector } { ${ declarations.join(\n\t\t\t\t\t\t\t\t'; '\n\t\t\t\t\t\t\t) }; }`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t// For backwards compatibility, ensure the legacy block gap CSS variable is still available.\n\t\tif ( selector === ROOT_BLOCK_SELECTOR && hasBlockGapSupport ) {\n\t\t\truleset += `${ selector } { --wp--style--block-gap: ${ gapValue }; }`;\n\t\t}\n\t}\n\n\t// Output base styles\n\tif ( selector === ROOT_BLOCK_SELECTOR && layoutDefinitions ) {\n\t\tconst validDisplayModes = [ 'block', 'flex', 'grid' ];\n\t\tObject.values( layoutDefinitions ).forEach(\n\t\t\t( { className, displayMode, baseStyles } ) => {\n\t\t\t\tif (\n\t\t\t\t\tdisplayMode &&\n\t\t\t\t\tvalidDisplayModes.includes( displayMode )\n\t\t\t\t) {\n\t\t\t\t\truleset += `${ selector } .${ className } { display:${ displayMode }; }`;\n\t\t\t\t}\n\n\t\t\t\tif ( baseStyles?.length ) {\n\t\t\t\t\tbaseStyles.forEach( ( baseStyle ) => {\n\t\t\t\t\t\tconst declarations = [];\n\n\t\t\t\t\t\tif ( baseStyle.rules ) {\n\t\t\t\t\t\t\tObject.entries( baseStyle.rules ).forEach(\n\t\t\t\t\t\t\t\t( [ cssProperty, cssValue ] ) => {\n\t\t\t\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\t\t\t\t`${ cssProperty }: ${ cssValue }`\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( declarations.length ) {\n\t\t\t\t\t\t\tconst combinedSelector = `${ selector } .${ className }${\n\t\t\t\t\t\t\t\tbaseStyle?.selector || ''\n\t\t\t\t\t\t\t}`;\n\t\t\t\t\t\t\truleset += `${ combinedSelector } { ${ declarations.join(\n\t\t\t\t\t\t\t\t'; '\n\t\t\t\t\t\t\t) }; }`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\treturn ruleset;\n}\n\nconst STYLE_KEYS = [\n\t'border',\n\t'color',\n\t'dimensions',\n\t'spacing',\n\t'typography',\n\t'filter',\n\t'outline',\n\t'shadow',\n];\n\nfunction pickStyleKeys( treeToPickFrom ) {\n\tif ( ! treeToPickFrom ) {\n\t\treturn {};\n\t}\n\tconst entries = Object.entries( treeToPickFrom );\n\tconst pickedEntries = entries.filter( ( [ key ] ) =>\n\t\tSTYLE_KEYS.includes( key )\n\t);\n\t// clone the style objects so that `getFeatureDeclarations` can remove consumed keys from it\n\tconst clonedEntries = pickedEntries.map( ( [ key, style ] ) => [\n\t\tkey,\n\t\tJSON.parse( JSON.stringify( style ) ),\n\t] );\n\treturn Object.fromEntries( clonedEntries );\n}\n\nexport const getNodesWithStyles = ( tree, blockSelectors ) => {\n\tconst nodes = [];\n\n\tif ( ! tree?.styles ) {\n\t\treturn nodes;\n\t}\n\n\t// Top-level.\n\tconst styles = pickStyleKeys( tree.styles );\n\tif ( styles ) {\n\t\tnodes.push( {\n\t\t\tstyles,\n\t\t\tselector: ROOT_BLOCK_SELECTOR,\n\t\t} );\n\t}\n\n\tObject.entries( ELEMENTS ).forEach( ( [ name, selector ] ) => {\n\t\tif ( tree.styles?.elements?.[ name ] ) {\n\t\t\tnodes.push( {\n\t\t\t\tstyles: tree.styles?.elements?.[ name ],\n\t\t\t\tselector,\n\t\t\t} );\n\t\t}\n\t} );\n\n\t// Iterate over blocks: they can have styles & elements.\n\tObject.entries( tree.styles?.blocks ?? {} ).forEach(\n\t\t( [ blockName, node ] ) => {\n\t\t\tconst blockStyles = pickStyleKeys( node );\n\n\t\t\tif ( node?.variations ) {\n\t\t\t\tconst variations = {};\n\t\t\t\tObject.keys( node.variations ).forEach( ( variation ) => {\n\t\t\t\t\tvariations[ variation ] = pickStyleKeys(\n\t\t\t\t\t\tnode.variations[ variation ]\n\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t\tblockStyles.variations = variations;\n\t\t\t}\n\t\t\tif ( blockStyles && blockSelectors?.[ blockName ]?.selector ) {\n\t\t\t\tnodes.push( {\n\t\t\t\t\tduotoneSelector:\n\t\t\t\t\t\tblockSelectors[ blockName ].duotoneSelector,\n\t\t\t\t\tfallbackGapValue:\n\t\t\t\t\t\tblockSelectors[ blockName ].fallbackGapValue,\n\t\t\t\t\thasLayoutSupport:\n\t\t\t\t\t\tblockSelectors[ blockName ].hasLayoutSupport,\n\t\t\t\t\tselector: blockSelectors[ blockName ].selector,\n\t\t\t\t\tstyles: blockStyles,\n\t\t\t\t\tfeatureSelectors:\n\t\t\t\t\t\tblockSelectors[ blockName ].featureSelectors,\n\t\t\t\t\tstyleVariationSelectors:\n\t\t\t\t\t\tblockSelectors[ blockName ].styleVariationSelectors,\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tObject.entries( node?.elements ?? {} ).forEach(\n\t\t\t\t( [ elementName, value ] ) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tvalue &&\n\t\t\t\t\t\tblockSelectors?.[ blockName ] &&\n\t\t\t\t\t\tELEMENTS[ elementName ]\n\t\t\t\t\t) {\n\t\t\t\t\t\tnodes.push( {\n\t\t\t\t\t\t\tstyles: value,\n\t\t\t\t\t\t\tselector: blockSelectors[ blockName ]?.selector\n\t\t\t\t\t\t\t\t.split( ',' )\n\t\t\t\t\t\t\t\t.map( ( sel ) => {\n\t\t\t\t\t\t\t\t\tconst elementSelectors =\n\t\t\t\t\t\t\t\t\t\tELEMENTS[ elementName ].split( ',' );\n\t\t\t\t\t\t\t\t\treturn elementSelectors.map(\n\t\t\t\t\t\t\t\t\t\t( elementSelector ) =>\n\t\t\t\t\t\t\t\t\t\t\tsel + ' ' + elementSelector\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.join( ',' ),\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t);\n\n\treturn nodes;\n};\n\nexport const getNodesWithSettings = ( tree, blockSelectors ) => {\n\tconst nodes = [];\n\n\tif ( ! tree?.settings ) {\n\t\treturn nodes;\n\t}\n\n\tconst pickPresets = ( treeToPickFrom ) => {\n\t\tlet presets = {};\n\t\tPRESET_METADATA.forEach( ( { path } ) => {\n\t\t\tconst value = getValueFromObjectPath( treeToPickFrom, path, false );\n\t\t\tif ( value !== false ) {\n\t\t\t\tpresets = setImmutably( presets, path, value );\n\t\t\t}\n\t\t} );\n\t\treturn presets;\n\t};\n\n\t// Top-level.\n\tconst presets = pickPresets( tree.settings );\n\tconst custom = tree.settings?.custom;\n\tif ( Object.keys( presets ).length > 0 || custom ) {\n\t\tnodes.push( {\n\t\t\tpresets,\n\t\t\tcustom,\n\t\t\tselector: ROOT_BLOCK_SELECTOR,\n\t\t} );\n\t}\n\n\t// Blocks.\n\tObject.entries( tree.settings?.blocks ?? {} ).forEach(\n\t\t( [ blockName, node ] ) => {\n\t\t\tconst blockPresets = pickPresets( node );\n\t\t\tconst blockCustom = node.custom;\n\t\t\tif ( Object.keys( blockPresets ).length > 0 || blockCustom ) {\n\t\t\t\tnodes.push( {\n\t\t\t\t\tpresets: blockPresets,\n\t\t\t\t\tcustom: blockCustom,\n\t\t\t\t\tselector: blockSelectors[ blockName ]?.selector,\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t);\n\n\treturn nodes;\n};\n\nexport const toCustomProperties = ( tree, blockSelectors ) => {\n\tconst settings = getNodesWithSettings( tree, blockSelectors );\n\tlet ruleset = '';\n\tsettings.forEach( ( { presets, custom, selector } ) => {\n\t\tconst declarations = getPresetsDeclarations( presets, tree?.settings );\n\t\tconst customProps = flattenTree( custom, '--wp--custom--', '--' );\n\t\tif ( customProps.length > 0 ) {\n\t\t\tdeclarations.push( ...customProps );\n\t\t}\n\n\t\tif ( declarations.length > 0 ) {\n\t\t\truleset += `${ selector }{${ declarations.join( ';' ) };}`;\n\t\t}\n\t} );\n\n\treturn ruleset;\n};\n\nexport const toStyles = (\n\ttree,\n\tblockSelectors,\n\thasBlockGapSupport,\n\thasFallbackGapSupport,\n\tdisableLayoutStyles = false\n) => {\n\tconst nodesWithStyles = getNodesWithStyles( tree, blockSelectors );\n\tconst nodesWithSettings = getNodesWithSettings( tree, blockSelectors );\n\tconst useRootPaddingAlign = tree?.settings?.useRootPaddingAwareAlignments;\n\tconst { contentSize, wideSize } = tree?.settings?.layout || {};\n\n\t/*\n\t * Reset default browser margin on the root body element.\n\t * This is set on the root selector **before** generating the ruleset\n\t * from the `theme.json`. This is to ensure that if the `theme.json` declares\n\t * `margin` in its `spacing` declaration for the `body` element then these\n\t * user-generated values take precedence in the CSS cascade.\n\t * @link https://github.com/WordPress/gutenberg/issues/36147.\n\t */\n\tlet ruleset = 'body {margin: 0;';\n\n\tif ( contentSize ) {\n\t\truleset += ` --wp--style--global--content-size: ${ contentSize };`;\n\t}\n\n\tif ( wideSize ) {\n\t\truleset += ` --wp--style--global--wide-size: ${ wideSize };`;\n\t}\n\n\tif ( useRootPaddingAlign ) {\n\t\t/*\n\t\t * These rules reproduce the ones from https://github.com/WordPress/gutenberg/blob/79103f124925d1f457f627e154f52a56228ed5ad/lib/class-wp-theme-json-gutenberg.php#L2508\n\t\t * almost exactly, but for the selectors that target block wrappers in the front end. This code only runs in the editor, so it doesn't need those selectors.\n\t\t */\n\t\truleset += `padding-right: 0; padding-left: 0; padding-top: var(--wp--style--root--padding-top); padding-bottom: var(--wp--style--root--padding-bottom) }\n\t\t\t.has-global-padding { padding-right: var(--wp--style--root--padding-right); padding-left: var(--wp--style--root--padding-left); }\n\t\t\t.has-global-padding :where(.has-global-padding) { padding-right: 0; padding-left: 0; }\n\t\t\t.has-global-padding > .alignfull { margin-right: calc(var(--wp--style--root--padding-right) * -1); margin-left: calc(var(--wp--style--root--padding-left) * -1); }\n\t\t\t.has-global-padding :where(.has-global-padding) > .alignfull { margin-right: 0; margin-left: 0; }\n\t\t\t.has-global-padding > .alignfull:where(:not(.has-global-padding)) > :where(.wp-block:not(.alignfull),p,h1,h2,h3,h4,h5,h6,ul,ol) { padding-right: var(--wp--style--root--padding-right); padding-left: var(--wp--style--root--padding-left); }\n\t\t\t.has-global-padding :where(.has-global-padding) > .alignfull:where(:not(.has-global-padding)) > :where(.wp-block:not(.alignfull),p,h1,h2,h3,h4,h5,h6,ul,ol) { padding-right: 0; padding-left: 0;`;\n\t}\n\n\truleset += '}';\n\n\tnodesWithStyles.forEach(\n\t\t( {\n\t\t\tselector,\n\t\t\tduotoneSelector,\n\t\t\tstyles,\n\t\t\tfallbackGapValue,\n\t\t\thasLayoutSupport,\n\t\t\tfeatureSelectors,\n\t\t\tstyleVariationSelectors,\n\t\t} ) => {\n\t\t\t// Process styles for block support features with custom feature level\n\t\t\t// CSS selectors set.\n\t\t\tif ( featureSelectors ) {\n\t\t\t\tconst featureDeclarations = getFeatureDeclarations(\n\t\t\t\t\tfeatureSelectors,\n\t\t\t\t\tstyles\n\t\t\t\t);\n\n\t\t\t\tObject.entries( featureDeclarations ).forEach(\n\t\t\t\t\t( [ cssSelector, declarations ] ) => {\n\t\t\t\t\t\tif ( declarations.length ) {\n\t\t\t\t\t\t\tconst rules = declarations.join( ';' );\n\t\t\t\t\t\t\truleset += `${ cssSelector }{${ rules };}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( styleVariationSelectors ) {\n\t\t\t\tObject.entries( styleVariationSelectors ).forEach(\n\t\t\t\t\t( [ styleVariationName, styleVariationSelector ] ) => {\n\t\t\t\t\t\tconst styleVariations =\n\t\t\t\t\t\t\tstyles?.variations?.[ styleVariationName ];\n\t\t\t\t\t\tif ( styleVariations ) {\n\t\t\t\t\t\t\t// If the block uses any custom selectors for block support, add those first.\n\t\t\t\t\t\t\tif ( featureSelectors ) {\n\t\t\t\t\t\t\t\tconst featureDeclarations =\n\t\t\t\t\t\t\t\t\tgetFeatureDeclarations(\n\t\t\t\t\t\t\t\t\t\tfeatureSelectors,\n\t\t\t\t\t\t\t\t\t\tstyleVariations\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tObject.entries( featureDeclarations ).forEach(\n\t\t\t\t\t\t\t\t\t( [ baseSelector, declarations ] ) => {\n\t\t\t\t\t\t\t\t\t\tif ( declarations.length ) {\n\t\t\t\t\t\t\t\t\t\t\tconst cssSelector =\n\t\t\t\t\t\t\t\t\t\t\t\tconcatFeatureVariationSelectorString(\n\t\t\t\t\t\t\t\t\t\t\t\t\tbaseSelector,\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyleVariationSelector\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tconst rules =\n\t\t\t\t\t\t\t\t\t\t\t\tdeclarations.join( ';' );\n\t\t\t\t\t\t\t\t\t\t\truleset += `${ cssSelector }{${ rules };}`;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Otherwise add regular selectors.\n\t\t\t\t\t\t\tconst styleVariationDeclarations =\n\t\t\t\t\t\t\t\tgetStylesDeclarations(\n\t\t\t\t\t\t\t\t\tstyleVariations,\n\t\t\t\t\t\t\t\t\tstyleVariationSelector,\n\t\t\t\t\t\t\t\t\tuseRootPaddingAlign,\n\t\t\t\t\t\t\t\t\ttree\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif ( styleVariationDeclarations.length ) {\n\t\t\t\t\t\t\t\truleset += `${ styleVariationSelector }{${ styleVariationDeclarations.join(\n\t\t\t\t\t\t\t\t\t';'\n\t\t\t\t\t\t\t\t) };}`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Process duotone styles.\n\t\t\tif ( duotoneSelector ) {\n\t\t\t\tconst duotoneStyles = {};\n\t\t\t\tif ( styles?.filter ) {\n\t\t\t\t\tduotoneStyles.filter = styles.filter;\n\t\t\t\t\tdelete styles.filter;\n\t\t\t\t}\n\t\t\t\tconst duotoneDeclarations =\n\t\t\t\t\tgetStylesDeclarations( duotoneStyles );\n\t\t\t\tif ( duotoneDeclarations.length ) {\n\t\t\t\t\truleset += `${ duotoneSelector }{${ duotoneDeclarations.join(\n\t\t\t\t\t\t';'\n\t\t\t\t\t) };}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Process blockGap and layout styles.\n\t\t\tif (\n\t\t\t\t! disableLayoutStyles &&\n\t\t\t\t( ROOT_BLOCK_SELECTOR === selector || hasLayoutSupport )\n\t\t\t) {\n\t\t\t\truleset += getLayoutStyles( {\n\t\t\t\t\tstyle: styles,\n\t\t\t\t\tselector,\n\t\t\t\t\thasBlockGapSupport,\n\t\t\t\t\thasFallbackGapSupport,\n\t\t\t\t\tfallbackGapValue,\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Process the remaining block styles (they use either normal block class or __experimentalSelector).\n\t\t\tconst declarations = getStylesDeclarations(\n\t\t\t\tstyles,\n\t\t\t\tselector,\n\t\t\t\tuseRootPaddingAlign,\n\t\t\t\ttree\n\t\t\t);\n\t\t\tif ( declarations?.length ) {\n\t\t\t\truleset += `${ selector }{${ declarations.join( ';' ) };}`;\n\t\t\t}\n\n\t\t\t// Check for pseudo selector in `styles` and handle separately.\n\t\t\tconst pseudoSelectorStyles = Object.entries( styles ).filter(\n\t\t\t\t( [ key ] ) => key.startsWith( ':' )\n\t\t\t);\n\n\t\t\tif ( pseudoSelectorStyles?.length ) {\n\t\t\t\tpseudoSelectorStyles.forEach(\n\t\t\t\t\t( [ pseudoKey, pseudoStyle ] ) => {\n\t\t\t\t\t\tconst pseudoDeclarations =\n\t\t\t\t\t\t\tgetStylesDeclarations( pseudoStyle );\n\n\t\t\t\t\t\tif ( ! pseudoDeclarations?.length ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// `selector` maybe provided in a form\n\t\t\t\t\t\t// where block level selectors have sub element\n\t\t\t\t\t\t// selectors appended to them as a comma separated\n\t\t\t\t\t\t// string.\n\t\t\t\t\t\t// e.g. `h1 a,h2 a,h3 a,h4 a,h5 a,h6 a`;\n\t\t\t\t\t\t// Split and append pseudo selector to create\n\t\t\t\t\t\t// the proper rules to target the elements.\n\t\t\t\t\t\tconst _selector = selector\n\t\t\t\t\t\t\t.split( ',' )\n\t\t\t\t\t\t\t.map( ( sel ) => sel + pseudoKey )\n\t\t\t\t\t\t\t.join( ',' );\n\n\t\t\t\t\t\tconst pseudoRule = `${ _selector }{${ pseudoDeclarations.join(\n\t\t\t\t\t\t\t';'\n\t\t\t\t\t\t) };}`;\n\n\t\t\t\t\t\truleset += pseudoRule;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t);\n\n\t/* Add alignment / layout styles */\n\truleset =\n\t\truleset +\n\t\t'.wp-site-blocks > .alignleft { float: left; margin-right: 2em; }';\n\truleset =\n\t\truleset +\n\t\t'.wp-site-blocks > .alignright { float: right; margin-left: 2em; }';\n\truleset =\n\t\truleset +\n\t\t'.wp-site-blocks > .aligncenter { justify-content: center; margin-left: auto; margin-right: auto; }';\n\n\tif ( hasBlockGapSupport ) {\n\t\t// Use fallback of `0.5em` just in case, however if there is blockGap support, there should nearly always be a real value.\n\t\tconst gapValue =\n\t\t\tgetGapCSSValue( tree?.styles?.spacing?.blockGap ) || '0.5em';\n\t\truleset =\n\t\t\truleset +\n\t\t\t`:where(.wp-site-blocks) > * { margin-block-start: ${ gapValue }; margin-block-end: 0; }`;\n\t\truleset =\n\t\t\truleset +\n\t\t\t':where(.wp-site-blocks) > :first-child:first-child { margin-block-start: 0; }';\n\t\truleset =\n\t\t\truleset +\n\t\t\t':where(.wp-site-blocks) > :last-child:last-child { margin-block-end: 0; }';\n\t}\n\n\tnodesWithSettings.forEach( ( { selector, presets } ) => {\n\t\tif ( ROOT_BLOCK_SELECTOR === selector ) {\n\t\t\t// Do not add extra specificity for top-level classes.\n\t\t\tselector = '';\n\t\t}\n\n\t\tconst classes = getPresetsClasses( selector, presets );\n\t\tif ( classes.length > 0 ) {\n\t\t\truleset += classes;\n\t\t}\n\t} );\n\n\treturn ruleset;\n};\n\nexport function toSvgFilters( tree, blockSelectors ) {\n\tconst nodesWithSettings = getNodesWithSettings( tree, blockSelectors );\n\treturn nodesWithSettings.flatMap( ( { presets } ) => {\n\t\treturn getPresetsSvgFilters( presets );\n\t} );\n}\n\nconst getSelectorsConfig = ( blockType, rootSelector ) => {\n\tif (\n\t\tblockType?.selectors &&\n\t\tObject.keys( blockType.selectors ).length > 0\n\t) {\n\t\treturn blockType.selectors;\n\t}\n\n\tconst config = { root: rootSelector };\n\tObject.entries( BLOCK_SUPPORT_FEATURE_LEVEL_SELECTORS ).forEach(\n\t\t( [ featureKey, featureName ] ) => {\n\t\t\tconst featureSelector = getBlockCSSSelector(\n\t\t\t\tblockType,\n\t\t\t\tfeatureKey\n\t\t\t);\n\n\t\t\tif ( featureSelector ) {\n\t\t\t\tconfig[ featureName ] = featureSelector;\n\t\t\t}\n\t\t}\n\t);\n\n\treturn config;\n};\n\nexport const getBlockSelectors = ( blockTypes, getBlockStyles ) => {\n\tconst result = {};\n\tblockTypes.forEach( ( blockType ) => {\n\t\tconst name = blockType.name;\n\t\tconst selector = getBlockCSSSelector( blockType );\n\t\tlet duotoneSelector = getBlockCSSSelector(\n\t\t\tblockType,\n\t\t\t'filter.duotone'\n\t\t);\n\n\t\t// Keep backwards compatibility for support.color.__experimentalDuotone.\n\t\tif ( ! duotoneSelector ) {\n\t\t\tconst rootSelector = getBlockCSSSelector( blockType );\n\t\t\tconst duotoneSupport = getBlockSupport(\n\t\t\t\tblockType,\n\t\t\t\t'color.__experimentalDuotone',\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tduotoneSelector =\n\t\t\t\tduotoneSupport && scopeSelector( rootSelector, duotoneSupport );\n\t\t}\n\n\t\tconst hasLayoutSupport =\n\t\t\t!! blockType?.supports?.layout ||\n\t\t\t!! blockType?.supports?.__experimentalLayout;\n\t\tconst fallbackGapValue =\n\t\t\tblockType?.supports?.spacing?.blockGap?.__experimentalDefault;\n\n\t\tconst blockStyleVariations = getBlockStyles( name );\n\t\tconst styleVariationSelectors = {};\n\t\tif ( blockStyleVariations?.length ) {\n\t\t\tblockStyleVariations.forEach( ( variation ) => {\n\t\t\t\tconst styleVariationSelector = `.is-style-${ variation.name }${ selector }`;\n\t\t\t\tstyleVariationSelectors[ variation.name ] =\n\t\t\t\t\tstyleVariationSelector;\n\t\t\t} );\n\t\t}\n\t\t// For each block support feature add any custom selectors.\n\t\tconst featureSelectors = getSelectorsConfig( blockType, selector );\n\n\t\tresult[ name ] = {\n\t\t\tduotoneSelector,\n\t\t\tfallbackGapValue,\n\t\t\tfeatureSelectors: Object.keys( featureSelectors ).length\n\t\t\t\t? featureSelectors\n\t\t\t\t: undefined,\n\t\t\thasLayoutSupport,\n\t\t\tname,\n\t\t\tselector,\n\t\t\tstyleVariationSelectors: Object.keys( styleVariationSelectors )\n\t\t\t\t.length\n\t\t\t\t? styleVariationSelectors\n\t\t\t\t: undefined,\n\t\t};\n\t} );\n\n\treturn result;\n};\n\n/**\n * If there is a separator block whose color is defined in theme.json via background,\n * update the separator color to the same value by using border color.\n *\n * @param {Object} config Theme.json configuration file object.\n * @return {Object} configTheme.json configuration file object updated.\n */\nfunction updateConfigWithSeparator( config ) {\n\tconst needsSeparatorStyleUpdate =\n\t\tconfig.styles?.blocks?.[ 'core/separator' ] &&\n\t\tconfig.styles?.blocks?.[ 'core/separator' ].color?.background &&\n\t\t! config.styles?.blocks?.[ 'core/separator' ].color?.text &&\n\t\t! config.styles?.blocks?.[ 'core/separator' ].border?.color;\n\tif ( needsSeparatorStyleUpdate ) {\n\t\treturn {\n\t\t\t...config,\n\t\t\tstyles: {\n\t\t\t\t...config.styles,\n\t\t\t\tblocks: {\n\t\t\t\t\t...config.styles.blocks,\n\t\t\t\t\t'core/separator': {\n\t\t\t\t\t\t...config.styles.blocks[ 'core/separator' ],\n\t\t\t\t\t\tcolor: {\n\t\t\t\t\t\t\t...config.styles.blocks[ 'core/separator' ].color,\n\t\t\t\t\t\t\ttext: config.styles?.blocks[ 'core/separator' ]\n\t\t\t\t\t\t\t\t.color.background,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n\treturn config;\n}\n\nconst processCSSNesting = ( css, blockSelector ) => {\n\tlet processedCSS = '';\n\n\t// Split CSS nested rules.\n\tconst parts = css.split( '&' );\n\tparts.forEach( ( part ) => {\n\t\tprocessedCSS += ! part.includes( '{' )\n\t\t\t? blockSelector + '{' + part + '}' // If the part doesn't contain braces, it applies to the root level.\n\t\t\t: blockSelector + part; // Prepend the selector, which effectively replaces the \"&\" character.\n\t} );\n\treturn processedCSS;\n};\n\n/**\n * Returns the global styles output using a global styles configuration.\n * If wishing to generate global styles and settings based on the\n * global styles config loaded in the editor context, use `useGlobalStylesOutput()`.\n * The use case for a custom config is to generate bespoke styles\n * and settings for previews, or other out-of-editor experiences.\n *\n * @param {Object} mergedConfig Global styles configuration.\n * @return {Array} Array of stylesheets and settings.\n */\nexport function useGlobalStylesOutputWithConfig( mergedConfig = {} ) {\n\tconst [ blockGap ] = useGlobalSetting( 'spacing.blockGap' );\n\tconst hasBlockGapSupport = blockGap !== null;\n\tconst hasFallbackGapSupport = ! hasBlockGapSupport; // This setting isn't useful yet: it exists as a placeholder for a future explicit fallback styles support.\n\tconst disableLayoutStyles = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\treturn !! getSettings().disableLayoutStyles;\n\t} );\n\n\tconst getBlockStyles = useSelect( ( select ) => {\n\t\treturn select( blocksStore ).getBlockStyles;\n\t}, [] );\n\n\treturn useMemo( () => {\n\t\tif ( ! mergedConfig?.styles || ! mergedConfig?.settings ) {\n\t\t\treturn [];\n\t\t}\n\t\tmergedConfig = updateConfigWithSeparator( mergedConfig );\n\n\t\tconst blockSelectors = getBlockSelectors(\n\t\t\tgetBlockTypes(),\n\t\t\tgetBlockStyles\n\t\t);\n\n\t\tconst customProperties = toCustomProperties(\n\t\t\tmergedConfig,\n\t\t\tblockSelectors\n\t\t);\n\t\tconst globalStyles = toStyles(\n\t\t\tmergedConfig,\n\t\t\tblockSelectors,\n\t\t\thasBlockGapSupport,\n\t\t\thasFallbackGapSupport,\n\t\t\tdisableLayoutStyles\n\t\t);\n\t\tconst svgs = toSvgFilters( mergedConfig, blockSelectors );\n\n\t\tconst styles = [\n\t\t\t{\n\t\t\t\tcss: customProperties,\n\t\t\t\tisGlobalStyles: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tcss: globalStyles,\n\t\t\t\tisGlobalStyles: true,\n\t\t\t},\n\t\t\t// Load custom CSS in own stylesheet so that any invalid CSS entered in the input won't break all the global styles in the editor.\n\t\t\t{\n\t\t\t\tcss: mergedConfig.styles.css ?? '',\n\t\t\t\tisGlobalStyles: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tassets: svgs,\n\t\t\t\t__unstableType: 'svg',\n\t\t\t\tisGlobalStyles: true,\n\t\t\t},\n\t\t];\n\n\t\t// Loop through the blocks to check if there are custom CSS values.\n\t\t// If there are, get the block selector and push the selector together with\n\t\t// the CSS value to the 'stylesheets' array.\n\t\tgetBlockTypes().forEach( ( blockType ) => {\n\t\t\tif ( mergedConfig.styles.blocks[ blockType.name ]?.css ) {\n\t\t\t\tconst selector = blockSelectors[ blockType.name ].selector;\n\t\t\t\tstyles.push( {\n\t\t\t\t\tcss: processCSSNesting(\n\t\t\t\t\t\tmergedConfig.styles.blocks[ blockType.name ]?.css,\n\t\t\t\t\t\tselector\n\t\t\t\t\t),\n\t\t\t\t\tisGlobalStyles: true,\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\treturn [ styles, mergedConfig.settings ];\n\t}, [\n\t\thasBlockGapSupport,\n\t\thasFallbackGapSupport,\n\t\tmergedConfig,\n\t\tdisableLayoutStyles,\n\t] );\n}\n\n/**\n * Returns the global styles output based on the current state of global styles config loaded in the editor context.\n *\n * @return {Array} Array of stylesheets and settings.\n */\nexport function useGlobalStylesOutput() {\n\tconst { merged: mergedConfig } = useContext( GlobalStylesContext );\n\treturn useGlobalStylesOutputWithConfig( mergedConfig );\n}\n"]}