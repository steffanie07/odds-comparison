{"version":3,"sources":["@wordpress/block-editor/src/components/link-control/use-internal-value.js"],"names":["useState","useEffect","useInternalValue","value","internalValue","setInternalValue","prevValue","setInternalURLInputValue","nextValue","url","setInternalTextInputValue","title","createSetInternalSettingValueHandler","settingsKeys","settingsUpdates","Object","keys","reduce","acc","key","includes"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,oBAApC;AAEA,eAAe,SAASC,gBAAT,CAA2BC,KAA3B,EAAmC;AACjD,QAAM,CAAEC,aAAF,EAAiBC,gBAAjB,IAAsCL,QAAQ,CAAEG,KAAK,IAAI,EAAX,CAApD,CADiD,CAGjD;;AACAF,EAAAA,SAAS,CAAE,MAAM;AAChBI,IAAAA,gBAAgB,CAAIC,SAAF,IAAiB;AAClC,UAAKH,KAAK,IAAIA,KAAK,KAAKG,SAAxB,EAAoC;AACnC,eAAOH,KAAP;AACA;;AAED,aAAOG,SAAP;AACA,KANe,CAAhB;AAOA,GARQ,EAQN,CAAEH,KAAF,CARM,CAAT;;AAUA,QAAMI,wBAAwB,GAAKC,SAAF,IAAiB;AACjDH,IAAAA,gBAAgB,CAAE,EACjB,GAAGD,aADc;AAEjBK,MAAAA,GAAG,EAAED;AAFY,KAAF,CAAhB;AAIA,GALD;;AAOA,QAAME,yBAAyB,GAAKF,SAAF,IAAiB;AAClDH,IAAAA,gBAAgB,CAAE,EACjB,GAAGD,aADc;AAEjBO,MAAAA,KAAK,EAAEH;AAFU,KAAF,CAAhB;AAIA,GALD;;AAOA,QAAMI,oCAAoC,GACvCC,YAAF,IAAsBL,SAAF,IAAiB;AACpC;AACA,UAAMM,eAAe,GAAGC,MAAM,CAACC,IAAP,CAAaR,SAAb,EAAyBS,MAAzB,CACvB,CAAEC,GAAF,EAAOC,GAAP,KAAgB;AACf,UAAKN,YAAY,CAACO,QAAb,CAAuBD,GAAvB,CAAL,EAAoC;AACnCD,QAAAA,GAAG,CAAEC,GAAF,CAAH,GAAaX,SAAS,CAAEW,GAAF,CAAtB;AACA;;AACD,aAAOD,GAAP;AACA,KANsB,EAOvB,EAPuB,CAAxB;AAUAb,IAAAA,gBAAgB,CAAE,EACjB,GAAGD,aADc;AAEjB,SAAGU;AAFc,KAAF,CAAhB;AAIA,GAjBF;;AAmBA,SAAO,CACNV,aADM,EAENC,gBAFM,EAGNE,wBAHM,EAING,yBAJM,EAKNE,oCALM,CAAP;AAOA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useState, useEffect } from '@wordpress/element';\n\nexport default function useInternalValue( value ) {\n\tconst [ internalValue, setInternalValue ] = useState( value || {} );\n\n\t// If the value prop changes, update the internal state.\n\tuseEffect( () => {\n\t\tsetInternalValue( ( prevValue ) => {\n\t\t\tif ( value && value !== prevValue ) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\treturn prevValue;\n\t\t} );\n\t}, [ value ] );\n\n\tconst setInternalURLInputValue = ( nextValue ) => {\n\t\tsetInternalValue( {\n\t\t\t...internalValue,\n\t\t\turl: nextValue,\n\t\t} );\n\t};\n\n\tconst setInternalTextInputValue = ( nextValue ) => {\n\t\tsetInternalValue( {\n\t\t\t...internalValue,\n\t\t\ttitle: nextValue,\n\t\t} );\n\t};\n\n\tconst createSetInternalSettingValueHandler =\n\t\t( settingsKeys ) => ( nextValue ) => {\n\t\t\t// Only apply settings values which are defined in the settings prop.\n\t\t\tconst settingsUpdates = Object.keys( nextValue ).reduce(\n\t\t\t\t( acc, key ) => {\n\t\t\t\t\tif ( settingsKeys.includes( key ) ) {\n\t\t\t\t\t\tacc[ key ] = nextValue[ key ];\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t{}\n\t\t\t);\n\n\t\t\tsetInternalValue( {\n\t\t\t\t...internalValue,\n\t\t\t\t...settingsUpdates,\n\t\t\t} );\n\t\t};\n\n\treturn [\n\t\tinternalValue,\n\t\tsetInternalValue,\n\t\tsetInternalURLInputValue,\n\t\tsetInternalTextInputValue,\n\t\tcreateSetInternalSettingValueHandler,\n\t];\n}\n"]}