{"version":3,"sources":["@wordpress/components/src/toolbar/toolbar/toolbar-container.tsx"],"names":["UnforwardedToolbarContainer","label","props","ref","toolbarStore","focusLoop","rtl","ToolbarContainer"],"mappings":";;;;;;;;;AASA;;AANA;;AAOA;;AAKA;;AAfA;AACA;AACA;;AAIA;AACA;AACA;;AAIA;AACA;AACA;AAKA,SAASA,2BAAT,CACC;AAAEC,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CADD,EAECC,GAFD,EAGE;AACD,QAAMC,YAAY,GAAG,8BAAiB;AACrCC,IAAAA,SAAS,EAAE,IAD0B;AAErCC,IAAAA,GAAG,EAAE;AAFgC,GAAjB,CAArB;AAKA,SACC;AACA,gCAAC,uBAAD,CAAgB,QAAhB;AAAyB,MAAA,KAAK,EAAGF;AAAjC,OACC,4BAAC,gBAAD;AACC,MAAA,GAAG,EAAGD,GADP;AAEC,oBAAaF,KAFd;AAGC,MAAA,KAAK,EAAGG,YAHT;AAAA,SAIMF;AAJN,MADD;AAFD;AAWA;;AAEM,MAAMK,gBAAgB,GAAG,yBAAYP,2BAAZ,CAAzB;;eACQO,gB","sourcesContent":["/**\n * External dependencies\n */\nimport { useToolbarStore, Toolbar } from '@ariakit/react/toolbar';\nimport type { ForwardedRef } from 'react';\n\n/**\n * WordPress dependencies\n */\nimport { forwardRef } from '@wordpress/element';\nimport { isRTL } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport ToolbarContext from '../toolbar-context';\nimport type { ToolbarProps } from './types';\nimport type { WordPressComponentProps } from '../../ui/context';\n\nfunction UnforwardedToolbarContainer(\n\t{ label, ...props }: WordPressComponentProps< ToolbarProps, 'div', false >,\n\tref: ForwardedRef< any >\n) {\n\tconst toolbarStore = useToolbarStore( {\n\t\tfocusLoop: true,\n\t\trtl: isRTL(),\n\t} );\n\n\treturn (\n\t\t// This will provide state for `ToolbarButton`'s\n\t\t<ToolbarContext.Provider value={ toolbarStore }>\n\t\t\t<Toolbar\n\t\t\t\tref={ ref }\n\t\t\t\taria-label={ label }\n\t\t\t\tstore={ toolbarStore }\n\t\t\t\t{ ...props }\n\t\t\t/>\n\t\t</ToolbarContext.Provider>\n\t);\n}\n\nexport const ToolbarContainer = forwardRef( UnforwardedToolbarContainer );\nexport default ToolbarContainer;\n"]}