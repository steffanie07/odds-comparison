{"version":3,"sources":["@wordpress/block-editor/src/hooks/use-editor-wrapper-styles.native.js"],"names":["useWindowDimensions","useMemo","ALIGNMENT_BREAKPOINTS","WIDE_ALIGNMENTS","alignmentHelpers","styles","ALIGNMENT_MAX_WIDTH","full","wide","wideMedium","wideLandscape","BLOCK_DEFAULT_MARGIN","getWideWidthStyles","align","isLandscape","width","alignments","large","maxWidth","small","medium","getFullWidthStyles","blockName","hasParents","parentBlockName","isContainerRelated","isFullWidth","fullWidthStyles","paddingHorizontal","getBlockMargin","blockWidth","marginHorizontal","parentBlockAlignment","parentWidth","isWider","isWideWidth","isScreenWidthEqual","useEditorWrapperStyles","contentResizeMode","reversed","height","blockMargin","wrapperStyles","canvasStyles","flex","alignmentStyles"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { useWindowDimensions } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { useMemo } from '@wordpress/element';\nimport {\n\tALIGNMENT_BREAKPOINTS,\n\tWIDE_ALIGNMENTS,\n\talignmentHelpers,\n} from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport styles from './use-editor-wrapper-styles.scss';\n\nconst ALIGNMENT_MAX_WIDTH = {\n\tfull: '100%',\n\twide: 1054,\n\twideMedium: 770,\n\twideLandscape: 662,\n};\n\nconst BLOCK_DEFAULT_MARGIN = 16;\n\n/**\n * Get the styles for the wide width alignment.\n *\n * @param {Object}  [options]           The options for the helper.\n * @param {string}  options.align       The alignment value.\n * @param {boolean} options.isLandscape Whether the screen is in landscape mode.\n * @param {number}  options.width       The width of the screen.\n * @return {Object} An object containing the styles for the wide width alignment.\n */\nfunction getWideWidthStyles( { align, isLandscape, width } = {} ) {\n\tif ( align !== WIDE_ALIGNMENTS.alignments.wide ) {\n\t\treturn {};\n\t}\n\n\tif ( isLandscape && width < ALIGNMENT_BREAKPOINTS.large ) {\n\t\treturn { maxWidth: ALIGNMENT_MAX_WIDTH.wideLandscape };\n\t}\n\n\tif ( width <= ALIGNMENT_BREAKPOINTS.small ) {\n\t\treturn { maxWidth: width };\n\t}\n\n\tif (\n\t\twidth >= ALIGNMENT_BREAKPOINTS.medium &&\n\t\twidth < ALIGNMENT_BREAKPOINTS.wide\n\t) {\n\t\treturn { maxWidth: ALIGNMENT_MAX_WIDTH.wideMedium };\n\t}\n\n\treturn { maxWidth: ALIGNMENT_MAX_WIDTH.wide };\n}\n\n/**\n * Get the styles for the full width alignment.\n *\n * @param {Object}  [options]               The options for the helper.\n * @param {string}  options.align           The alignment value.\n * @param {string}  options.blockName       The name of the block.\n * @param {boolean} options.hasParents      Whether the block has parents.\n * @param {string}  options.parentBlockName The name of the parent block.\n * @return {Object} An object containing the styles for the full width alignment.\n */\nfunction getFullWidthStyles( {\n\talign,\n\tblockName,\n\thasParents,\n\tparentBlockName,\n} = {} ) {\n\tconst { isContainerRelated, isFullWidth } = alignmentHelpers;\n\tconst fullWidthStyles = isFullWidth( align )\n\t\t? { maxWidth: ALIGNMENT_MAX_WIDTH.full }\n\t\t: {};\n\n\tif (\n\t\t! align &&\n\t\thasParents &&\n\t\t! isContainerRelated( parentBlockName ) &&\n\t\tisContainerRelated( blockName )\n\t) {\n\t\tfullWidthStyles.paddingHorizontal = BLOCK_DEFAULT_MARGIN;\n\t}\n\n\treturn fullWidthStyles;\n}\n\n/**\n * Get the block margin based on various conditions.\n *\n * @param {Object}  [options]                    The options for the helper.\n * @param {string}  options.align                The alignment value.\n * @param {string}  options.blockName            The name of the block.\n * @param {number}  options.blockWidth           The width of the block.\n * @param {boolean} options.hasParents           Whether the block has parents.\n * @param {number}  options.marginHorizontal     Default horizontal margin.\n * @param {string}  options.parentBlockAlignment The alignment of the parent block.\n * @param {string}  options.parentBlockName      The name of the parent block.\n * @param {number}  options.parentWidth          The width of the parent block.\n * @param {number}  options.width                The width of the screen.\n * @return {number} The calculated block margin.\n */\nfunction getBlockMargin( {\n\talign,\n\tblockName,\n\tblockWidth,\n\thasParents,\n\tmarginHorizontal,\n\tparentBlockAlignment,\n\tparentBlockName,\n\tparentWidth,\n\twidth,\n} = {} ) {\n\tconst { isContainerRelated, isWider, isWideWidth, isFullWidth } =\n\t\talignmentHelpers;\n\n\tif ( isFullWidth( align ) ) {\n\t\tif ( ! hasParents ) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn marginHorizontal;\n\t}\n\n\tif ( isWideWidth( align ) ) {\n\t\treturn marginHorizontal;\n\t}\n\n\tif (\n\t\tisFullWidth( parentBlockAlignment ) &&\n\t\t! isWider( blockWidth, 'medium' )\n\t) {\n\t\tif ( isContainerRelated( blockName ) || isWider( width, 'mobile' ) ) {\n\t\t\treturn marginHorizontal;\n\t\t}\n\t\treturn marginHorizontal * 2;\n\t}\n\n\tif (\n\t\tisContainerRelated( parentBlockName ) &&\n\t\t! isContainerRelated( blockName )\n\t) {\n\t\tconst isScreenWidthEqual = parentWidth === width;\n\t\tif ( isScreenWidthEqual || isWider( width, 'mobile' ) ) {\n\t\t\treturn marginHorizontal;\n\t\t}\n\t}\n\n\treturn marginHorizontal;\n}\n\n/**\n * Custom hook to get the styles and margin for the editor wrapper.\n *\n * @param {Object}  [props]                    The props for the hook.\n * @param {string}  props.align                The alignment value.\n * @param {string}  props.blockName            The name of the block.\n * @param {number}  props.blockWidth           The width of the block.\n * @param {string}  props.contentResizeMode    The content resize mode.\n * @param {boolean} props.hasParents           Whether the block has parents.\n * @param {number}  props.marginHorizontal     Default horizontal margin.\n * @param {string}  props.parentBlockAlignment The alignment of the parent block.\n * @param {string}  props.parentBlockName      The name of the parent block.\n * @param {number}  props.parentWidth          The width of the parent block.\n * @param {boolean} [props.reversed=false]     Whether the flex direction should be reversed.\n * @return {[Array, number]} An array containing the wrapper styles and block margin.\n */\nexport function useEditorWrapperStyles( {\n\talign,\n\tblockName,\n\tblockWidth,\n\tcontentResizeMode,\n\thasParents,\n\tmarginHorizontal,\n\tparentBlockAlignment,\n\tparentBlockName,\n\tparentWidth,\n\treversed = false,\n} = {} ) {\n\tconst { width, height } = useWindowDimensions();\n\tconst isLandscape = width >= height;\n\n\tconst blockMargin = useMemo(\n\t\t() =>\n\t\t\tgetBlockMargin( {\n\t\t\t\talign,\n\t\t\t\tblockName,\n\t\t\t\tblockWidth,\n\t\t\t\thasParents,\n\t\t\t\tmarginHorizontal,\n\t\t\t\tparentBlockAlignment,\n\t\t\t\tparentBlockName,\n\t\t\t\tparentWidth,\n\t\t\t\twidth,\n\t\t\t} ),\n\t\t[\n\t\t\talign,\n\t\t\tblockName,\n\t\t\tblockWidth,\n\t\t\thasParents,\n\t\t\tmarginHorizontal,\n\t\t\tparentBlockAlignment,\n\t\t\tparentBlockName,\n\t\t\tparentWidth,\n\t\t\twidth,\n\t\t]\n\t);\n\n\tconst wrapperStyles = useMemo( () => {\n\t\tlet canvasStyles;\n\n\t\tif ( contentResizeMode === 'stretch' ) {\n\t\t\t// For these cases, no width constraints should be added.\n\t\t\tcanvasStyles = { flex: 1 };\n\t\t} else if ( reversed ) {\n\t\t\tcanvasStyles = styles[ 'use-editor-wrapper-styles--reversed' ];\n\t\t} else {\n\t\t\tcanvasStyles = styles[ 'use-editor-wrapper-styles' ];\n\t\t}\n\n\t\tconst alignmentStyles = {\n\t\t\t...getWideWidthStyles( { align, isLandscape, width } ),\n\t\t\t...getFullWidthStyles( {\n\t\t\t\talign,\n\t\t\t\tblockName,\n\t\t\t\thasParents,\n\t\t\t\tparentBlockName,\n\t\t\t} ),\n\t\t};\n\n\t\treturn [ canvasStyles, alignmentStyles ];\n\t}, [\n\t\talign,\n\t\tblockName,\n\t\thasParents,\n\t\tparentBlockName,\n\t\tisLandscape,\n\t\twidth,\n\t\tcontentResizeMode,\n\t\treversed,\n\t] );\n\n\treturn [ wrapperStyles, blockMargin ];\n}\n"]}