"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _reactNative = require("react-native");

var _compose = require("@wordpress/compose");

var _block = _interopRequireDefault(require("./block.scss"));

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
const TEXT_BLOCKS_WITH_OUTLINE = ['core/missing'];

function BlockOutline({
  blockCategory,
  hasInnerBlocks,
  isRootList,
  isSelected,
  name
}) {
  const textBlockWithOutline = TEXT_BLOCKS_WITH_OUTLINE.includes(name);
  const hasBlockTextCategory = blockCategory === 'text' && !textBlockWithOutline;
  const hasBlockMediaCategory = blockCategory === 'media' || blockCategory === 'embed' || !blockCategory;
  const shouldShowCompactOutline = hasBlockMediaCategory && !hasInnerBlocks || textBlockWithOutline;
  const styleSolidBorder = [_block.default.solidBorder, (0, _compose.usePreferredColorSchemeStyle)(_block.default.solidBorderColor, _block.default.solidBorderColorDark), shouldShowCompactOutline && _block.default.solidBorderCompact, hasBlockTextCategory && _block.default.solidBorderTextContent];
  const shoudlShowOutline = isSelected && (hasBlockTextCategory && hasInnerBlocks || !hasBlockTextCategory && hasInnerBlocks || !hasBlockTextCategory && isRootList || textBlockWithOutline);
  return shoudlShowOutline && (0, _element.createElement)(_reactNative.View, {
    pointerEvents: "box-none",
    style: styleSolidBorder
  });
}

var _default = BlockOutline;
exports.default = _default;
//# sourceMappingURL=block-outline.native.js.map