{"version":3,"sources":["@wordpress/block-editor/src/hooks/behaviors.js"],"names":["BehaviorsControl","blockName","blockBehaviors","onChangeBehavior","onChangeAnimation","disabled","settings","themeBehaviors","select","getBehaviors","getSettings","blockEditorStore","__experimentalFeatures","blocks","behaviors","defaultBehaviors","default","value","label","noBehaviors","behaviorsOptions","Object","entries","filter","behaviorName","behaviorValue","map","charAt","toUpperCase","slice","toLowerCase","options","values","behaviorsValue","mergedBehaviors","undefined","lightbox","enabled","length","helpText","animation","withBehaviors","BlockEdit","props","blockEdit","name","blockHasLink","attributes","linkDestination","nextValue","setAttributes","window","__experimentalInteractivityAPI"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\nimport { SelectControl } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { hasBlockSupport } from '@wordpress/blocks';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { useSelect } from '@wordpress/data';\nimport { useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../store';\nimport { InspectorControls } from '../components';\n\nfunction BehaviorsControl( {\n\tblockName,\n\tblockBehaviors,\n\tonChangeBehavior,\n\tonChangeAnimation,\n\tdisabled = false,\n} ) {\n\tconst { settings, themeBehaviors } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBehaviors, getSettings } = select( blockEditorStore );\n\n\t\t\treturn {\n\t\t\t\tsettings:\n\t\t\t\t\tgetSettings()?.__experimentalFeatures?.blocks?.[ blockName ]\n\t\t\t\t\t\t?.behaviors,\n\t\t\t\tthemeBehaviors: getBehaviors()?.blocks?.[ blockName ],\n\t\t\t};\n\t\t},\n\t\t[ blockName ]\n\t);\n\n\tconst defaultBehaviors = {\n\t\tdefault: {\n\t\t\tvalue: 'default',\n\t\t\tlabel: __( 'Default' ),\n\t\t},\n\t\tnoBehaviors: {\n\t\t\tvalue: '',\n\t\t\tlabel: __( 'No behaviors' ),\n\t\t},\n\t};\n\n\tconst behaviorsOptions = Object.entries( settings )\n\t\t.filter(\n\t\t\t( [ behaviorName, behaviorValue ] ) =>\n\t\t\t\thasBlockSupport( blockName, `behaviors.${ behaviorName }` ) &&\n\t\t\t\tbehaviorValue\n\t\t) // Filter out behaviors that are disabled.\n\t\t.map( ( [ behaviorName ] ) => ( {\n\t\t\tvalue: behaviorName,\n\t\t\t// Capitalize the first letter of the behavior name.\n\t\t\tlabel: `${ behaviorName.charAt( 0 ).toUpperCase() }${ behaviorName\n\t\t\t\t.slice( 1 )\n\t\t\t\t.toLowerCase() }`,\n\t\t} ) );\n\n\tconst options = [\n\t\t...Object.values( defaultBehaviors ),\n\t\t...behaviorsOptions,\n\t];\n\n\tconst { behaviors, behaviorsValue } = useMemo( () => {\n\t\tconst mergedBehaviors = {\n\t\t\t...themeBehaviors,\n\t\t\t...( blockBehaviors || {} ),\n\t\t};\n\n\t\tlet value = '';\n\t\tif ( blockBehaviors === undefined ) {\n\t\t\tvalue = 'default';\n\t\t}\n\t\tif ( blockBehaviors?.lightbox.enabled ) {\n\t\t\tvalue = 'lightbox';\n\t\t}\n\t\treturn {\n\t\t\tbehaviors: mergedBehaviors,\n\t\t\tbehaviorsValue: value,\n\t\t};\n\t}, [ blockBehaviors, themeBehaviors ] );\n\t// If every behavior is disabled, do not show the behaviors inspector control.\n\tif ( behaviorsOptions.length === 0 ) {\n\t\treturn null;\n\t}\n\n\tconst helpText = disabled\n\t\t? __( 'The lightbox behavior is disabled for linked images.' )\n\t\t: '';\n\n\treturn (\n\t\t<InspectorControls group=\"advanced\">\n\t\t\t<div>\n\t\t\t\t<SelectControl\n\t\t\t\t\tlabel={ __( 'Behaviors' ) }\n\t\t\t\t\t// At the moment we are only supporting one behavior (Lightbox)\n\t\t\t\t\tvalue={ behaviorsValue }\n\t\t\t\t\toptions={ options }\n\t\t\t\t\tonChange={ onChangeBehavior }\n\t\t\t\t\thideCancelButton={ true }\n\t\t\t\t\thelp={ helpText }\n\t\t\t\t\tsize=\"__unstable-large\"\n\t\t\t\t\tdisabled={ disabled }\n\t\t\t\t/>\n\t\t\t\t{ behaviorsValue === 'lightbox' && (\n\t\t\t\t\t<SelectControl\n\t\t\t\t\t\tlabel={ __( 'Animation' ) }\n\t\t\t\t\t\t// At the moment we are only supporting one behavior (Lightbox)\n\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\tbehaviors?.lightbox.animation\n\t\t\t\t\t\t\t\t? behaviors?.lightbox.animation\n\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t}\n\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: 'zoom',\n\t\t\t\t\t\t\t\tlabel: __( 'Zoom' ),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: 'fade',\n\t\t\t\t\t\t\t\tlabel: __( 'Fade' ),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t] }\n\t\t\t\t\t\tonChange={ onChangeAnimation }\n\t\t\t\t\t\thideCancelButton={ false }\n\t\t\t\t\t\tsize=\"__unstable-large\"\n\t\t\t\t\t\tdisabled={ disabled }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</InspectorControls>\n\t);\n}\n\n/**\n * Override the default edit UI to include a new block inspector control for\n * assigning behaviors to blocks if behaviors are enabled in the theme.json.\n *\n * Currently, only the `core/image` block is supported.\n *\n * @param {WPComponent} BlockEdit Original component.\n *\n * @return {WPComponent} Wrapped component.\n */\nexport const withBehaviors = createHigherOrderComponent( ( BlockEdit ) => {\n\treturn ( props ) => {\n\t\tconst blockEdit = <BlockEdit key=\"edit\" { ...props } />;\n\t\t// Only add behaviors to blocks with support.\n\t\tif ( ! hasBlockSupport( props.name, 'behaviors' ) ) {\n\t\t\treturn blockEdit;\n\t\t}\n\t\tconst blockHasLink =\n\t\t\ttypeof props.attributes?.linkDestination !== 'undefined' &&\n\t\t\tprops.attributes?.linkDestination !== 'none';\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{ blockEdit }\n\t\t\t\t<BehaviorsControl\n\t\t\t\t\tblockName={ props.name }\n\t\t\t\t\tblockBehaviors={ props.attributes.behaviors }\n\t\t\t\t\tonChangeBehavior={ ( nextValue ) => {\n\t\t\t\t\t\tif ( nextValue === 'default' ) {\n\t\t\t\t\t\t\tprops.setAttributes( {\n\t\t\t\t\t\t\t\tbehaviors: undefined,\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// If the user selects something, it means that they want to\n\t\t\t\t\t\t\t// change the default value (true) so we save it in the attributes.\n\t\t\t\t\t\t\tprops.setAttributes( {\n\t\t\t\t\t\t\t\tbehaviors: {\n\t\t\t\t\t\t\t\t\tlightbox: {\n\t\t\t\t\t\t\t\t\t\tenabled: nextValue === 'lightbox',\n\t\t\t\t\t\t\t\t\t\tanimation:\n\t\t\t\t\t\t\t\t\t\t\tnextValue === 'lightbox'\n\t\t\t\t\t\t\t\t\t\t\t\t? 'zoom'\n\t\t\t\t\t\t\t\t\t\t\t\t: '',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t} }\n\t\t\t\t\tonChangeAnimation={ ( nextValue ) => {\n\t\t\t\t\t\tprops.setAttributes( {\n\t\t\t\t\t\t\tbehaviors: {\n\t\t\t\t\t\t\t\tlightbox: {\n\t\t\t\t\t\t\t\t\tenabled:\n\t\t\t\t\t\t\t\t\t\tprops.attributes.behaviors.lightbox\n\t\t\t\t\t\t\t\t\t\t\t.enabled,\n\t\t\t\t\t\t\t\t\tanimation: nextValue,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t} );\n\t\t\t\t\t} }\n\t\t\t\t\tdisabled={ blockHasLink }\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t};\n}, 'withBehaviors' );\n\nif ( window?.__experimentalInteractivityAPI ) {\n\taddFilter(\n\t\t'editor.BlockEdit',\n\t\t'core/behaviors/with-inspector-control',\n\t\twithBehaviors\n\t);\n}\n"]}