"use strict";Object.defineProperty(exports, "__esModule", {value: true});

var _ZXPKRPGYcjs = require('../__chunks/ZXPKRPGY.cjs');
require('../__chunks/K2LZWNNX.cjs');
require('../__chunks/RS4LBZRZ.cjs');


var _PR7FUI5Dcjs = require('../__chunks/PR7FUI5D.cjs');
require('../__chunks/SXMUYOXB.cjs');



var _5AWPMH4Scjs = require('../__chunks/5AWPMH4S.cjs');


var _RCYVACJOcjs = require('../__chunks/RCYVACJO.cjs');



var _EIRIJC7Tcjs = require('../__chunks/EIRIJC7T.cjs');
require('../__chunks/EXM2AW52.cjs');
require('../__chunks/GDZQUFNP.cjs');




var _72I2GWXFcjs = require('../__chunks/72I2GWXF.cjs');

// src/combobox/combobox-store.ts
var isSafariOnMobile = _EIRIJC7Tcjs.isSafari.call(void 0, ) && _EIRIJC7Tcjs.isTouchDevice.call(void 0, );
function createComboboxStore(_a = {}) {
  var _b = _a, {
    menu,
    select
  } = _b, props = _72I2GWXFcjs.__objRest.call(void 0, _b, [
    "menu",
    "select"
  ]);
  const store = _5AWPMH4Scjs.mergeStore.call(void 0, 
    props.store,
    menu == null ? void 0 : menu.omit(
      "baseElement",
      "arrowElement",
      "anchorElement",
      "contentElement",
      "popoverElement",
      "disclosureElement"
    ),
    select == null ? void 0 : select.omit(
      "value",
      "items",
      "renderedItems",
      "baseElement",
      "arrowElement",
      "anchorElement",
      "contentElement",
      "popoverElement",
      "disclosureElement"
    )
  );
  const syncState = store.getState();
  const activeId = _RCYVACJOcjs.defaultValue.call(void 0, 
    props.activeId,
    syncState.activeId,
    props.defaultActiveId,
    null
  );
  const composite = _PR7FUI5Dcjs.createCompositeStore.call(void 0, _72I2GWXFcjs.__spreadProps.call(void 0, _72I2GWXFcjs.__spreadValues.call(void 0, {}, props), {
    store,
    activeId,
    includesBaseElement: _RCYVACJOcjs.defaultValue.call(void 0, 
      props.includesBaseElement,
      syncState.includesBaseElement,
      true
    ),
    orientation: _RCYVACJOcjs.defaultValue.call(void 0, 
      props.orientation,
      syncState.orientation,
      "vertical"
    ),
    focusLoop: _RCYVACJOcjs.defaultValue.call(void 0, props.focusLoop, syncState.focusLoop, true),
    focusWrap: _RCYVACJOcjs.defaultValue.call(void 0, props.focusWrap, syncState.focusWrap, true),
    virtualFocus: _RCYVACJOcjs.defaultValue.call(void 0, 
      props.virtualFocus,
      syncState == null ? void 0 : syncState.virtualFocus,
      !isSafariOnMobile
    )
  }));
  const popover = _ZXPKRPGYcjs.createPopoverStore.call(void 0, _72I2GWXFcjs.__spreadProps.call(void 0, _72I2GWXFcjs.__spreadValues.call(void 0, {}, props), {
    store,
    placement: _RCYVACJOcjs.defaultValue.call(void 0, 
      props.placement,
      syncState.placement,
      "bottom-start"
    )
  }));
  const initialValue = _RCYVACJOcjs.defaultValue.call(void 0, 
    props.value,
    syncState.value,
    props.defaultValue,
    ""
  );
  const initialState = _72I2GWXFcjs.__spreadProps.call(void 0, _72I2GWXFcjs.__spreadValues.call(void 0, _72I2GWXFcjs.__spreadValues.call(void 0, {}, composite.getState()), popover.getState()), {
    value: initialValue,
    resetValueOnHide: _RCYVACJOcjs.defaultValue.call(void 0, 
      props.resetValueOnHide,
      syncState.resetValueOnHide,
      false
    ),
    activeValue: syncState.activeValue
  });
  const combobox = _5AWPMH4Scjs.createStore.call(void 0, initialState, composite, popover, store);
  combobox.setup(
    () => combobox.sync(
      (state) => {
        if (!state.resetValueOnHide)
          return;
        if (state.mounted)
          return;
        combobox.setState("value", initialValue);
      },
      ["resetValueOnHide", "mounted"]
    )
  );
  combobox.setup(
    () => combobox.syncBatch(
      (state) => {
        if (state.mounted)
          return;
        combobox.setState("activeId", activeId);
        combobox.setState("moves", 0);
      },
      ["mounted"]
    )
  );
  combobox.setup(
    () => combobox.sync(
      (state, prevState) => {
        if (state.moves === prevState.moves) {
          combobox.setState("activeValue", void 0);
        }
      },
      ["moves", "activeId"]
    )
  );
  combobox.setup(
    () => combobox.syncBatch(
      (state, prev) => {
        if (state.moves === prev.moves)
          return;
        const { activeId: activeId2 } = combobox.getState();
        const activeItem = composite.item(activeId2);
        combobox.setState("activeValue", activeItem == null ? void 0 : activeItem.value);
      },
      ["moves", "renderedItems"]
    )
  );
  return _72I2GWXFcjs.__spreadProps.call(void 0, _72I2GWXFcjs.__spreadValues.call(void 0, _72I2GWXFcjs.__spreadValues.call(void 0, _72I2GWXFcjs.__spreadValues.call(void 0, {}, popover), composite), combobox), {
    setValue: (value) => combobox.setState("value", value)
  });
}


exports.createComboboxStore = createComboboxStore;
