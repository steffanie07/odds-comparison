{"version":3,"sources":["@wordpress/block-editor/src/components/block-heading-level-dropdown/index.native.js"],"names":["HEADING_LEVELS","HeadingLevelDropdown","options","value","onChange","createLevelControl","targetLevel","currentLevel","onChangeCallback","isActive","icon","title","onClick","map","index"],"mappings":";;;;;;;;;;;AAGA;;AACA;;AAKA;;AATA;AACA;AACA;;AAIA;AACA;AACA;AAGA,MAAMA,cAAc,GAAG,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAAvB;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACe,SAASC,oBAAT,CAA+B;AAC7CC,EAAAA,OAAO,GAAGF,cADmC;AAE7CG,EAAAA,KAF6C;AAG7CC,EAAAA;AAH6C,CAA/B,EAIX;AACH,QAAMC,kBAAkB,GAAG,CAC1BC,WAD0B,EAE1BC,YAF0B,EAG1BC,gBAH0B,KAItB;AACJ,UAAMC,QAAQ,GAAGH,WAAW,KAAKC,YAAjC;AACA,WAAO;AACNG,MAAAA,IAAI,EACH,4BAAC,yBAAD;AACC,QAAA,KAAK,EAAGJ,WADT;AAEC,QAAA,SAAS,EAAGG;AAFb,QAFK;AAON;AACAE,MAAAA,KAAK,EAAE,mBAAS,cAAI,YAAJ,CAAT,EAA6BL,WAA7B,CARD;AASNG,MAAAA,QATM;AAUNG,MAAAA,OAAO,EAAE,MAAMJ,gBAAgB,CAAEF,WAAF;AAVzB,KAAP;AAYA,GAlBD;;AAoBA,SACC,4BAAC,wBAAD;AACC,IAAA,IAAI,EAAG,4BAAC,yBAAD;AAAkB,MAAA,KAAK,EAAGH;AAA1B,MADR;AAEC,IAAA,QAAQ,EAAGD,OAAO,CAACW,GAAR,CAAeC,KAAF,IACvBT,kBAAkB,CAAES,KAAF,EAASX,KAAT,EAAgBC,QAAhB,CADR,CAFZ;AAKC,IAAA,KAAK,EAAG,cAAI,cAAJ;AALT,IADD;AASA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { DropdownMenu } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport HeadingLevelIcon from './heading-level-icon';\n\nconst HEADING_LEVELS = [ 1, 2, 3, 4, 5, 6 ];\n\n/** @typedef {import('@wordpress/element').WPComponent} WPComponent */\n\n/**\n * HeadingLevelDropdown props.\n *\n * @typedef WPHeadingLevelDropdownProps\n *\n * @property {number}                 selectedLevel The chosen heading level.\n * @property {(newValue:number)=>any} onChange      Callback to run when\n *                                                  toolbar value is changed.\n */\n\n/**\n * Dropdown for selecting a heading level (1 through 6).\n *\n * @param {WPHeadingLevelDropdownProps} props Component props.\n *\n * @return {WPComponent} The toolbar.\n */\nexport default function HeadingLevelDropdown( {\n\toptions = HEADING_LEVELS,\n\tvalue,\n\tonChange,\n} ) {\n\tconst createLevelControl = (\n\t\ttargetLevel,\n\t\tcurrentLevel,\n\t\tonChangeCallback\n\t) => {\n\t\tconst isActive = targetLevel === currentLevel;\n\t\treturn {\n\t\t\ticon: (\n\t\t\t\t<HeadingLevelIcon\n\t\t\t\t\tlevel={ targetLevel }\n\t\t\t\t\tisPressed={ isActive }\n\t\t\t\t/>\n\t\t\t),\n\t\t\t// translators: %s: heading level e.g: \"1\", \"2\", \"3\"\n\t\t\ttitle: sprintf( __( 'Heading %d' ), targetLevel ),\n\t\t\tisActive,\n\t\t\tonClick: () => onChangeCallback( targetLevel ),\n\t\t};\n\t};\n\n\treturn (\n\t\t<DropdownMenu\n\t\t\ticon={ <HeadingLevelIcon level={ value } /> }\n\t\t\tcontrols={ options.map( ( index ) =>\n\t\t\t\tcreateLevelControl( index, value, onChange )\n\t\t\t) }\n\t\t\tlabel={ __( 'Change level' ) }\n\t\t/>\n\t);\n}\n"]}