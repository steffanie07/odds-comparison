{"version":3,"sources":["@wordpress/block-editor/src/components/block-caption/index.native.js"],"names":["View","Caption","RichText","compose","withDispatch","withSelect","hasBlockSupport","styles","store","blockEditorStore","BlockCaption","accessible","accessibilityLabelCreator","onBlur","onChange","onFocus","isSelected","shouldDisplay","text","insertBlocksAfter","container","padding","select","clientId","getBlockAttributes","getSelectedBlockClientId","getBlockName","getBlockRootClientId","caption","isBlockSelected","parentId","parentBlockName","hideCaption","isEmpty","dispatch","updateBlockAttributes"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,IAAT,QAAqB,cAArB;AAEA;AACA;AACA;;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,yBAAlC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,iBAAzC;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAEA;AACA;AACA;;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAASC,KAAK,IAAIC,gBAAlB,QAA0C,aAA1C;;AAEA,MAAMC,YAAY,GAAG,CAAE;AACtBC,EAAAA,UADsB;AAEtBC,EAAAA,yBAFsB;AAGtBC,EAAAA,MAHsB;AAItBC,EAAAA,QAJsB;AAKtBC,EAAAA,OALsB;AAMtBC,EAAAA,UANsB;AAOtBC,EAAAA,aAPsB;AAQtBC,EAAAA,IARsB;AAStBC,EAAAA;AATsB,CAAF,KAWpB,cAAC,IAAD;AAAM,EAAA,KAAK,EAAG,CAAEZ,MAAM,CAACa,SAAT,EAAoBH,aAAa,IAAIV,MAAM,CAACc,OAA5C;AAAd,GACC,cAAC,OAAD;AACC,EAAA,yBAAyB,EAAGT,yBAD7B;AAEC,EAAA,UAAU,EAAGD,UAFd;AAGC,EAAA,UAAU,EAAGK,UAHd;AAIC,EAAA,MAAM,EAAGH,MAJV;AAKC,EAAA,QAAQ,EAAGC,QALZ;AAMC,EAAA,OAAO,EAAGC,OANX;AAOC,EAAA,aAAa,EAAGE,aAPjB;AAQC,EAAA,KAAK,EAAGC,IART;AASC,EAAA,iBAAiB,EAAGC;AATrB,EADD,CAXD;;AA0BA,eAAehB,OAAO,CAAE,CACvBE,UAAU,CAAE,CAAEiB,MAAF,EAAU;AAAEC,EAAAA;AAAF,CAAV,KAA4B;AACvC,QAAM;AACLC,IAAAA,kBADK;AAELC,IAAAA,wBAFK;AAGLC,IAAAA,YAHK;AAILC,IAAAA;AAJK,MAKFL,MAAM,CAAEb,gBAAF,CALV;AAMA,QAAM;AAAEmB,IAAAA;AAAF,MAAcJ,kBAAkB,CAAED,QAAF,CAAlB,IAAkC,EAAtD;AACA,QAAMM,eAAe,GAAGJ,wBAAwB,OAAOF,QAAvD,CARuC,CAUvC;AACA;AACA;AACA;;AACA,QAAMO,QAAQ,GAAGH,oBAAoB,CAAEJ,QAAF,CAArC;AACA,QAAMQ,eAAe,GAAGL,YAAY,CAAEI,QAAF,CAApC;AAEA,QAAME,WAAW,GAAG1B,eAAe,CAClCyB,eADkC,EAElC,sCAFkC,EAGlC,KAHkC,CAAnC,CAjBuC,CAuBvC;AACA;;AACA,QAAMd,aAAa,GAClB,CAAEe,WAAF,KACE,CAAE9B,QAAQ,CAAC+B,OAAT,CAAkBL,OAAlB,CAAF,GAAgC,CAAhC,IAAqCC,eADvC,CADD;AAIA,SAAO;AACNZ,IAAAA,aADM;AAENC,IAAAA,IAAI,EAAEU;AAFA,GAAP;AAIA,CAjCS,CADa,EAmCvBxB,YAAY,CAAE,CAAE8B,QAAF,EAAY;AAAEX,EAAAA;AAAF,CAAZ,KAA8B;AAC3C,QAAM;AAAEY,IAAAA;AAAF,MAA4BD,QAAQ,CAAEzB,gBAAF,CAA1C;AACA,SAAO;AACNK,IAAAA,QAAQ,EAAIc,OAAF,IAAe;AACxBO,MAAAA,qBAAqB,CAAEZ,QAAF,EAAY;AAAEK,QAAAA;AAAF,OAAZ,CAArB;AACA;AAHK,GAAP;AAKA,CAPW,CAnCW,CAAF,CAAP,CA2CVlB,YA3CU,CAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { Caption, RichText } from '@wordpress/block-editor';\nimport { compose } from '@wordpress/compose';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { hasBlockSupport } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport styles from './styles.scss';\nimport { store as blockEditorStore } from '../../store';\n\nconst BlockCaption = ( {\n\taccessible,\n\taccessibilityLabelCreator,\n\tonBlur,\n\tonChange,\n\tonFocus,\n\tisSelected,\n\tshouldDisplay,\n\ttext,\n\tinsertBlocksAfter,\n} ) => (\n\t<View style={ [ styles.container, shouldDisplay && styles.padding ] }>\n\t\t<Caption\n\t\t\taccessibilityLabelCreator={ accessibilityLabelCreator }\n\t\t\taccessible={ accessible }\n\t\t\tisSelected={ isSelected }\n\t\t\tonBlur={ onBlur }\n\t\t\tonChange={ onChange }\n\t\t\tonFocus={ onFocus }\n\t\t\tshouldDisplay={ shouldDisplay }\n\t\t\tvalue={ text }\n\t\t\tinsertBlocksAfter={ insertBlocksAfter }\n\t\t/>\n\t</View>\n);\n\nexport default compose( [\n\twithSelect( ( select, { clientId } ) => {\n\t\tconst {\n\t\t\tgetBlockAttributes,\n\t\t\tgetSelectedBlockClientId,\n\t\t\tgetBlockName,\n\t\t\tgetBlockRootClientId,\n\t\t} = select( blockEditorStore );\n\t\tconst { caption } = getBlockAttributes( clientId ) || {};\n\t\tconst isBlockSelected = getSelectedBlockClientId() === clientId;\n\n\t\t// Detect whether the block is an inner block by checking if it has a parent block.\n\t\t// getBlockRootClientId() will return an empty string for all top-level blocks.\n\t\t// If the block is an inner block, its parent may explicitly hide child block controls.\n\t\t// See: https://github.com/wordpress-mobile/gutenberg-mobile/pull/4256\n\t\tconst parentId = getBlockRootClientId( clientId );\n\t\tconst parentBlockName = getBlockName( parentId );\n\n\t\tconst hideCaption = hasBlockSupport(\n\t\t\tparentBlockName,\n\t\t\t'__experimentalHideChildBlockControls',\n\t\t\tfalse\n\t\t);\n\n\t\t// We'll render the caption so that the soft keyboard is not forced to close on Android\n\t\t// but still hide it by setting its display style to none. See wordpress-mobile/gutenberg-mobile#1221\n\t\tconst shouldDisplay =\n\t\t\t! hideCaption &&\n\t\t\t( ! RichText.isEmpty( caption ) > 0 || isBlockSelected );\n\n\t\treturn {\n\t\t\tshouldDisplay,\n\t\t\ttext: caption,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, { clientId } ) => {\n\t\tconst { updateBlockAttributes } = dispatch( blockEditorStore );\n\t\treturn {\n\t\t\tonChange: ( caption ) => {\n\t\t\t\tupdateBlockAttributes( clientId, { caption } );\n\t\t\t},\n\t\t};\n\t} ),\n] )( BlockCaption );\n"]}