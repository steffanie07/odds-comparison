{"version":3,"sources":["@wordpress/block-editor/src/components/block-switcher/block-variation-transformations.js"],"names":["MenuItem","getBlockMenuDefaultClassName","cloneBlock","store","blocksStore","useSelect","useState","useMemo","blockEditorStore","BlockIcon","PreviewBlockPopover","EMPTY_OBJECT","useBlockVariationTransforms","clientIds","blocks","activeBlockVariation","blockVariationTransformations","select","getBlockRootClientId","getBlockAttributes","canRemoveBlocks","getActiveBlockVariation","getBlockVariations","rootClientId","Array","isArray","canRemove","length","firstBlock","name","clientId","transformations","filter","BlockVariationTransformations","onSelect","hoveredTransformItemName","setHoveredTransformItemName","find","attributes","map","item","BlockVariationTranformationItem","icon","title","event","preventDefault"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { MenuItem } from '@wordpress/components';\nimport {\n\tgetBlockMenuDefaultClassName,\n\tcloneBlock,\n\tstore as blocksStore,\n} from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\nimport { useState, useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\nimport BlockIcon from '../block-icon';\nimport PreviewBlockPopover from './preview-block-popover';\n\nconst EMPTY_OBJECT = {};\n\nexport function useBlockVariationTransforms( { clientIds, blocks } ) {\n\tconst { activeBlockVariation, blockVariationTransformations } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockRootClientId,\n\t\t\t\tgetBlockAttributes,\n\t\t\t\tcanRemoveBlocks,\n\t\t\t} = select( blockEditorStore );\n\t\t\tconst { getActiveBlockVariation, getBlockVariations } =\n\t\t\t\tselect( blocksStore );\n\t\t\tconst rootClientId = getBlockRootClientId(\n\t\t\t\tArray.isArray( clientIds ) ? clientIds[ 0 ] : clientIds\n\t\t\t);\n\t\t\tconst canRemove = canRemoveBlocks( clientIds, rootClientId );\n\t\t\t// Only handle single selected blocks for now.\n\t\t\tif ( blocks.length !== 1 || ! canRemove ) {\n\t\t\t\treturn EMPTY_OBJECT;\n\t\t\t}\n\t\t\tconst [ firstBlock ] = blocks;\n\t\t\treturn {\n\t\t\t\tblockVariationTransformations: getBlockVariations(\n\t\t\t\t\tfirstBlock.name,\n\t\t\t\t\t'transform'\n\t\t\t\t),\n\t\t\t\tactiveBlockVariation: getActiveBlockVariation(\n\t\t\t\t\tfirstBlock.name,\n\t\t\t\t\tgetBlockAttributes( firstBlock.clientId )\n\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t[ clientIds, blocks ]\n\t);\n\tconst transformations = useMemo( () => {\n\t\treturn blockVariationTransformations?.filter(\n\t\t\t( { name } ) => name !== activeBlockVariation?.name\n\t\t);\n\t}, [ blockVariationTransformations, activeBlockVariation ] );\n\treturn transformations;\n}\n\nconst BlockVariationTransformations = ( {\n\ttransformations,\n\tonSelect,\n\tblocks,\n} ) => {\n\tconst [ hoveredTransformItemName, setHoveredTransformItemName ] =\n\t\tuseState();\n\treturn (\n\t\t<>\n\t\t\t{ hoveredTransformItemName && (\n\t\t\t\t<PreviewBlockPopover\n\t\t\t\t\tblocks={ cloneBlock(\n\t\t\t\t\t\tblocks[ 0 ],\n\t\t\t\t\t\ttransformations.find(\n\t\t\t\t\t\t\t( { name } ) => name === hoveredTransformItemName\n\t\t\t\t\t\t).attributes\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t{ transformations?.map( ( item ) => (\n\t\t\t\t<BlockVariationTranformationItem\n\t\t\t\t\tkey={ item.name }\n\t\t\t\t\titem={ item }\n\t\t\t\t\tonSelect={ onSelect }\n\t\t\t\t\tsetHoveredTransformItemName={ setHoveredTransformItemName }\n\t\t\t\t/>\n\t\t\t) ) }\n\t\t</>\n\t);\n};\n\nfunction BlockVariationTranformationItem( {\n\titem,\n\tonSelect,\n\tsetHoveredTransformItemName,\n} ) {\n\tconst { name, icon, title } = item;\n\treturn (\n\t\t<MenuItem\n\t\t\tclassName={ getBlockMenuDefaultClassName( name ) }\n\t\t\tonClick={ ( event ) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tonSelect( name );\n\t\t\t} }\n\t\t\tonMouseLeave={ () => setHoveredTransformItemName( null ) }\n\t\t\tonMouseEnter={ () => setHoveredTransformItemName( name ) }\n\t\t>\n\t\t\t<BlockIcon icon={ icon } showColors />\n\t\t\t{ title }\n\t\t</MenuItem>\n\t);\n}\n\nexport default BlockVariationTransformations;\n"]}