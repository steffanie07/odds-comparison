import { createElement } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { __experimentalUseSlotFills as useSlotFills } from '@wordpress/components';
import warning from '@wordpress/warning';
import deprecated from '@wordpress/deprecated';
/**
 * Internal dependencies
 */

import BlockSupportToolsPanel from './block-support-tools-panel';
import BlockSupportSlotContainer from './block-support-slot-container';
import groups from './groups';
export default function InspectorControlsSlot({
  __experimentalGroup,
  group = 'default',
  label,
  ...props
}) {
  if (__experimentalGroup) {
    deprecated('`__experimentalGroup` property in `InspectorControlsSlot`', {
      since: '6.2',
      version: '6.4',
      alternative: '`group`'
    });
    group = __experimentalGroup;
  }

  const Slot = groups[group]?.Slot;
  const fills = useSlotFills(Slot?.__unstableName);

  if (!Slot) {
    typeof process !== "undefined" && process.env && process.env.NODE_ENV !== "production" ? warning(`Unknown InspectorControls group "${group}" provided.`) : void 0;
    return null;
  }

  if (!fills?.length) {
    return null;
  }

  if (label) {
    return createElement(BlockSupportToolsPanel, {
      group: group,
      label: label
    }, createElement(BlockSupportSlotContainer, { ...props,
      Slot: Slot
    }));
  }

  return createElement(Slot, { ...props,
    bubblesVirtually: true
  });
}
//# sourceMappingURL=slot.js.map