{"version":3,"sources":["@wordpress/block-editor/src/components/writing-mode-control/index.js"],"names":["classnames","BaseControl","Button","__","isRTL","textHorizontal","textVertical","WRITING_MODES","name","value","icon","WritingModeControl","className","onChange","map","writingMode","undefined"],"mappings":";;AAAA;AACA;AACA;AACA,OAAOA,UAAP,MAAuB,YAAvB;AAEA;AACA;AACA;;AACA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,uBAApC;AACA,SAASC,EAAT,EAAaC,KAAb,QAA0B,iBAA1B;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,kBAA7C;AAEA,MAAMC,aAAa,GAAG,CACrB;AACCC,EAAAA,IAAI,EAAEL,EAAE,CAAE,YAAF,CADT;AAECM,EAAAA,KAAK,EAAE,eAFR;AAGCC,EAAAA,IAAI,EAAEL;AAHP,CADqB,EAMrB;AACCG,EAAAA,IAAI,EAAEL,EAAE,CAAE,UAAF,CADT;AAECM,EAAAA,KAAK,EAAEL,KAAK,KAAK,aAAL,GAAqB,aAFlC;AAGCM,EAAAA,IAAI,EAAEJ;AAHP,CANqB,CAAtB;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASK,kBAAT,CAA6B;AAAEC,EAAAA,SAAF;AAAaH,EAAAA,KAAb;AAAoBI,EAAAA;AAApB,CAA7B,EAA8D;AAC5E,SACC;AACC,IAAA,SAAS,EAAGb,UAAU,CACrB,mCADqB,EAErBY,SAFqB;AADvB,KAMC,cAAC,WAAD,CAAa,WAAb;AAAyB,IAAA,EAAE,EAAC;AAA5B,KACGT,EAAE,CAAE,aAAF,CADL,CAND,EASC;AAAK,IAAA,SAAS,EAAC;AAAf,KACGI,aAAa,CAACO,GAAd,CAAqBC,WAAF,IAAmB;AACvC,WACC,cAAC,MAAD;AACC,MAAA,GAAG,EAAGA,WAAW,CAACN,KADnB;AAEC,MAAA,IAAI,EAAGM,WAAW,CAACL,IAFpB;AAGC,MAAA,KAAK,EAAGK,WAAW,CAACP,IAHrB;AAIC,MAAA,SAAS,EAAGO,WAAW,CAACN,KAAZ,KAAsBA,KAJnC;AAKC,MAAA,OAAO,EAAG,MAAM;AACfI,QAAAA,QAAQ,CACPE,WAAW,CAACN,KAAZ,KAAsBA,KAAtB,GACGO,SADH,GAEGD,WAAW,CAACN,KAHR,CAAR;AAKA;AAXF,MADD;AAeA,GAhBC,CADH,CATD,CADD;AA+BA","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { BaseControl, Button } from '@wordpress/components';\nimport { __, isRTL } from '@wordpress/i18n';\nimport { textHorizontal, textVertical } from '@wordpress/icons';\n\nconst WRITING_MODES = [\n\t{\n\t\tname: __( 'Horizontal' ),\n\t\tvalue: 'horizontal-tb',\n\t\ticon: textHorizontal,\n\t},\n\t{\n\t\tname: __( 'Vertical' ),\n\t\tvalue: isRTL() ? 'vertical-lr' : 'vertical-rl',\n\t\ticon: textVertical,\n\t},\n];\n\n/**\n * Control to facilitate writing mode selections.\n *\n * @param {Object}   props           Component props.\n * @param {string}   props.className Class name to add to the control.\n * @param {string}   props.value     Currently selected writing mode.\n * @param {Function} props.onChange  Handles change in the writing mode selection.\n *\n * @return {WPElement} Writing Mode control.\n */\nexport default function WritingModeControl( { className, value, onChange } ) {\n\treturn (\n\t\t<fieldset\n\t\t\tclassName={ classnames(\n\t\t\t\t'block-editor-writing-mode-control',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t>\n\t\t\t<BaseControl.VisualLabel as=\"legend\">\n\t\t\t\t{ __( 'Orientation' ) }\n\t\t\t</BaseControl.VisualLabel>\n\t\t\t<div className=\"block-editor-writing-mode-control__buttons\">\n\t\t\t\t{ WRITING_MODES.map( ( writingMode ) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkey={ writingMode.value }\n\t\t\t\t\t\t\ticon={ writingMode.icon }\n\t\t\t\t\t\t\tlabel={ writingMode.name }\n\t\t\t\t\t\t\tisPressed={ writingMode.value === value }\n\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\tonChange(\n\t\t\t\t\t\t\t\t\twritingMode.value === value\n\t\t\t\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t\t\t\t: writingMode.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</div>\n\t\t</fieldset>\n\t);\n}\n"]}