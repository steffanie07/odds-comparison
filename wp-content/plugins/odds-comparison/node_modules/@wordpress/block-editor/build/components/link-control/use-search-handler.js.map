{"version":3,"sources":["@wordpress/block-editor/src/components/link-control/use-search-handler.js"],"names":["handleNoop","Promise","resolve","handleDirectEntry","val","type","URL_TYPE","protocol","includes","MAILTO_TYPE","TEL_TYPE","startsWith","INTERNAL_TYPE","id","title","url","handleEntitySearch","suggestionsQuery","fetchSearchSuggestions","withCreateSuggestion","pageOnFront","isInitialSuggestions","results","map","result","Number","isFrontPage","concat","CREATE_TYPE","useSearchHandler","allowDirectEntry","withURLSuggestion","select","getSettings","blockEditorStore","__experimentalFetchLinkSuggestions","directEntryHandler"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { getProtocol, prependHTTP } from '@wordpress/url';\nimport { useCallback } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport isURLLike from './is-url-like';\nimport {\n\tCREATE_TYPE,\n\tTEL_TYPE,\n\tMAILTO_TYPE,\n\tINTERNAL_TYPE,\n\tURL_TYPE,\n} from './constants';\nimport { store as blockEditorStore } from '../../store';\n\nexport const handleNoop = () => Promise.resolve( [] );\n\nexport const handleDirectEntry = ( val ) => {\n\tlet type = URL_TYPE;\n\n\tconst protocol = getProtocol( val ) || '';\n\n\tif ( protocol.includes( 'mailto' ) ) {\n\t\ttype = MAILTO_TYPE;\n\t}\n\n\tif ( protocol.includes( 'tel' ) ) {\n\t\ttype = TEL_TYPE;\n\t}\n\n\tif ( val?.startsWith( '#' ) ) {\n\t\ttype = INTERNAL_TYPE;\n\t}\n\n\treturn Promise.resolve( [\n\t\t{\n\t\t\tid: val,\n\t\t\ttitle: val,\n\t\t\turl: type === 'URL' ? prependHTTP( val ) : val,\n\t\t\ttype,\n\t\t},\n\t] );\n};\n\nconst handleEntitySearch = async (\n\tval,\n\tsuggestionsQuery,\n\tfetchSearchSuggestions,\n\twithCreateSuggestion,\n\tpageOnFront\n) => {\n\tconst { isInitialSuggestions } = suggestionsQuery;\n\n\tconst results = await fetchSearchSuggestions( val, suggestionsQuery );\n\n\t// Identify front page and update type to match.\n\tresults.map( ( result ) => {\n\t\tif ( Number( result.id ) === pageOnFront ) {\n\t\t\tresult.isFrontPage = true;\n\t\t\treturn result;\n\t\t}\n\n\t\treturn result;\n\t} );\n\n\t// If displaying initial suggestions just return plain results.\n\tif ( isInitialSuggestions ) {\n\t\treturn results;\n\t}\n\n\t// Here we append a faux suggestion to represent a \"CREATE\" option. This\n\t// is detected in the rendering of the search results and handled as a\n\t// special case. This is currently necessary because the suggestions\n\t// dropdown will only appear if there are valid suggestions and\n\t// therefore unless the create option is a suggestion it will not\n\t// display in scenarios where there are no results returned from the\n\t// API. In addition promoting CREATE to a first class suggestion affords\n\t// the a11y benefits afforded by `URLInput` to all suggestions (eg:\n\t// keyboard handling, ARIA roles...etc).\n\t//\n\t// Note also that the value of the `title` and `url` properties must correspond\n\t// to the text value of the `<input>`. This is because `title` is used\n\t// when creating the suggestion. Similarly `url` is used when using keyboard to select\n\t// the suggestion (the <form> `onSubmit` handler falls-back to `url`).\n\treturn isURLLike( val ) || ! withCreateSuggestion\n\t\t? results\n\t\t: results.concat( {\n\t\t\t\t// the `id` prop is intentionally ommitted here because it\n\t\t\t\t// is never exposed as part of the component's public API.\n\t\t\t\t// see: https://github.com/WordPress/gutenberg/pull/19775#discussion_r378931316.\n\t\t\t\ttitle: val, // Must match the existing `<input>`s text value.\n\t\t\t\turl: val, // Must match the existing `<input>`s text value.\n\t\t\t\ttype: CREATE_TYPE,\n\t\t  } );\n};\n\nexport default function useSearchHandler(\n\tsuggestionsQuery,\n\tallowDirectEntry,\n\twithCreateSuggestion,\n\twithURLSuggestion\n) {\n\tconst { fetchSearchSuggestions, pageOnFront } = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\n\t\treturn {\n\t\t\tpageOnFront: getSettings().pageOnFront,\n\t\t\tfetchSearchSuggestions:\n\t\t\t\tgetSettings().__experimentalFetchLinkSuggestions,\n\t\t};\n\t}, [] );\n\n\tconst directEntryHandler = allowDirectEntry\n\t\t? handleDirectEntry\n\t\t: handleNoop;\n\n\treturn useCallback(\n\t\t( val, { isInitialSuggestions } ) => {\n\t\t\treturn isURLLike( val )\n\t\t\t\t? directEntryHandler( val, { isInitialSuggestions } )\n\t\t\t\t: handleEntitySearch(\n\t\t\t\t\t\tval,\n\t\t\t\t\t\t{ ...suggestionsQuery, isInitialSuggestions },\n\t\t\t\t\t\tfetchSearchSuggestions,\n\t\t\t\t\t\twithCreateSuggestion,\n\t\t\t\t\t\twithURLSuggestion,\n\t\t\t\t\t\tpageOnFront\n\t\t\t\t  );\n\t\t},\n\t\t[\n\t\t\tdirectEntryHandler,\n\t\t\tfetchSearchSuggestions,\n\t\t\tpageOnFront,\n\t\t\tsuggestionsQuery,\n\t\t\twithCreateSuggestion,\n\t\t\twithURLSuggestion,\n\t\t]\n\t);\n}\n"]}