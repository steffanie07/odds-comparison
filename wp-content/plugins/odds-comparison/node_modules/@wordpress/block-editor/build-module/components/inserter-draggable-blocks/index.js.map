{"version":3,"sources":["@wordpress/block-editor/src/components/inserter-draggable-blocks/index.js"],"names":["Draggable","serialize","store","blocksStore","useSelect","BlockDraggableChip","InserterDraggableBlocks","isEnabled","blocks","icon","children","isPattern","transferData","type","blockTypeIcon","select","getBlockType","length","name","event","dataTransfer","setData","onDraggableStart","onDraggableEnd","draggable","onDragStart","undefined","onDragEnd"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,uBAA1B;AACA,SAASC,SAAT,EAAoBC,KAAK,IAAIC,WAA7B,QAAgD,mBAAhD;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA;AACA;AACA;;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;;AAEA,MAAMC,uBAAuB,GAAG,CAAE;AACjCC,EAAAA,SADiC;AAEjCC,EAAAA,MAFiC;AAGjCC,EAAAA,IAHiC;AAIjCC,EAAAA,QAJiC;AAKjCC,EAAAA;AALiC,CAAF,KAMzB;AACN,QAAMC,YAAY,GAAG;AACpBC,IAAAA,IAAI,EAAE,UADc;AAEpBL,IAAAA;AAFoB,GAArB;AAKA,QAAMM,aAAa,GAAGV,SAAS,CAC5BW,MAAF,IAAc;AACb,UAAM;AAAEC,MAAAA;AAAF,QAAmBD,MAAM,CAAEZ,WAAF,CAA/B;AACA,WACCK,MAAM,CAACS,MAAP,KAAkB,CAAlB,IAAuBD,YAAY,CAAER,MAAM,CAAE,CAAF,CAAN,CAAYU,IAAd,CAAZ,EAAkCT,IAD1D;AAGA,GAN6B,EAO9B,CAAED,MAAF,CAP8B,CAA/B;AAUA,SACC,cAAC,SAAD;AACC,IAAA,8BAA8B,EAAC,WADhC;AAEC,IAAA,YAAY,EAAGI,YAFhB;AAGC,IAAA,WAAW,EAAKO,KAAF,IAAa;AAC1BA,MAAAA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA4B,WAA5B,EAAyCpB,SAAS,CAAEO,MAAF,CAAlD;AACA,KALF;AAMC,IAAA,2BAA2B,EAC1B,cAAC,kBAAD;AACC,MAAA,KAAK,EAAGA,MAAM,CAACS,MADhB;AAEC,MAAA,IAAI,EAAGR,IAAI,IAAM,CAAEE,SAAF,IAAeG,aAFjC;AAGC,MAAA,SAAS,EAAGH;AAHb;AAPF,KAcG,CAAE;AAAEW,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,GAAF,KAA4C;AAC7C,WAAOb,QAAQ,CAAE;AAChBc,MAAAA,SAAS,EAAEjB,SADK;AAEhBkB,MAAAA,WAAW,EAAElB,SAAS,GAAGe,gBAAH,GAAsBI,SAF5B;AAGhBC,MAAAA,SAAS,EAAEpB,SAAS,GAAGgB,cAAH,GAAoBG;AAHxB,KAAF,CAAf;AAKA,GApBF,CADD;AAwBA,CA9CD;;AAgDA,eAAepB,uBAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Draggable } from '@wordpress/components';\nimport { serialize, store as blocksStore } from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\n/**\n * Internal dependencies\n */\nimport BlockDraggableChip from '../block-draggable/draggable-chip';\n\nconst InserterDraggableBlocks = ( {\n\tisEnabled,\n\tblocks,\n\ticon,\n\tchildren,\n\tisPattern,\n} ) => {\n\tconst transferData = {\n\t\ttype: 'inserter',\n\t\tblocks,\n\t};\n\n\tconst blockTypeIcon = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlockType } = select( blocksStore );\n\t\t\treturn (\n\t\t\t\tblocks.length === 1 && getBlockType( blocks[ 0 ].name )?.icon\n\t\t\t);\n\t\t},\n\t\t[ blocks ]\n\t);\n\n\treturn (\n\t\t<Draggable\n\t\t\t__experimentalTransferDataType=\"wp-blocks\"\n\t\t\ttransferData={ transferData }\n\t\t\tonDragStart={ ( event ) => {\n\t\t\t\tevent.dataTransfer.setData( 'text/html', serialize( blocks ) );\n\t\t\t} }\n\t\t\t__experimentalDragComponent={\n\t\t\t\t<BlockDraggableChip\n\t\t\t\t\tcount={ blocks.length }\n\t\t\t\t\ticon={ icon || ( ! isPattern && blockTypeIcon ) }\n\t\t\t\t\tisPattern={ isPattern }\n\t\t\t\t/>\n\t\t\t}\n\t\t>\n\t\t\t{ ( { onDraggableStart, onDraggableEnd } ) => {\n\t\t\t\treturn children( {\n\t\t\t\t\tdraggable: isEnabled,\n\t\t\t\t\tonDragStart: isEnabled ? onDraggableStart : undefined,\n\t\t\t\t\tonDragEnd: isEnabled ? onDraggableEnd : undefined,\n\t\t\t\t} );\n\t\t\t} }\n\t\t</Draggable>\n\t);\n};\n\nexport default InserterDraggableBlocks;\n"]}