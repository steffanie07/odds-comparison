{"version":3,"sources":["@wordpress/block-editor/src/hooks/layout.js"],"names":["classnames","createHigherOrderComponent","useInstanceId","addFilter","getBlockSupport","hasBlockSupport","useSelect","Button","ButtonGroup","ToggleControl","PanelBody","__","useContext","createPortal","store","blockEditorStore","InspectorControls","useSetting","LayoutStyle","BlockList","getLayoutType","getLayoutTypes","useBlockEditingMode","LAYOUT_DEFINITIONS","kebabCase","layoutBlockSupportKey","hasLayoutBlockSupport","blockName","useLayoutClasses","blockAttributes","rootPaddingAlignment","select","getSettings","__experimentalFeatures","useRootPaddingAwareAlignments","layout","default","defaultBlockLayout","usedLayout","inherit","contentSize","wideSize","type","layoutClassnames","className","baseClassName","compoundClassName","split","pop","push","orientation","justifyContent","flexWrap","useLayoutStyles","selector","style","fullLayoutType","blockGapSupport","hasBlockGapSupport","css","getLayoutStyle","LayoutPanel","setAttributes","attributes","name","defaultThemeLayout","themeSupportsLayout","supportsLayout","blockEditingMode","layoutBlockSupport","allowSwitching","allowEditing","allowInheriting","showInheritToggle","layoutType","constrainedType","displayControlsForLegacyLayouts","hasContentSizeOrLegacySettings","onChangeType","newType","onChangeLayout","newLayout","LayoutTypeSwitcher","onChange","map","label","addAttribute","settings","withInspectorControls","BlockEdit","props","supportLayout","withLayoutStyles","BlockListBlock","blockSupportsLayout","disableLayoutStyles","shouldRenderLayoutStyles","id","element","__unstableElementContext","layoutClasses","layoutClassNames","withChildLayoutStyles","selfStretch","flexSize","hasChildLayout","shouldRenderChildLayoutStyles"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { createHigherOrderComponent, useInstanceId } from '@wordpress/compose';\nimport { addFilter } from '@wordpress/hooks';\nimport { getBlockSupport, hasBlockSupport } from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\nimport {\n\tButton,\n\tButtonGroup,\n\tToggleControl,\n\tPanelBody,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useContext, createPortal } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../store';\nimport { InspectorControls } from '../components';\nimport useSetting from '../components/use-setting';\nimport { LayoutStyle } from '../components/block-list/layout';\nimport BlockList from '../components/block-list';\nimport { getLayoutType, getLayoutTypes } from '../layouts';\nimport { useBlockEditingMode } from '../components/block-editing-mode';\nimport { LAYOUT_DEFINITIONS } from '../layouts/definitions';\nimport { kebabCase } from '../utils/object';\n\nconst layoutBlockSupportKey = 'layout';\n\nfunction hasLayoutBlockSupport( blockName ) {\n\treturn (\n\t\thasBlockSupport( blockName, 'layout' ) ||\n\t\thasBlockSupport( blockName, '__experimentalLayout' )\n\t);\n}\n\n/**\n * Generates the utility classnames for the given block's layout attributes.\n *\n * @param { Object } blockAttributes Block attributes.\n * @param { string } blockName       Block name.\n *\n * @return { Array } Array of CSS classname strings.\n */\nexport function useLayoutClasses( blockAttributes = {}, blockName = '' ) {\n\tconst rootPaddingAlignment = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\treturn getSettings().__experimentalFeatures\n\t\t\t?.useRootPaddingAwareAlignments;\n\t}, [] );\n\tconst { layout } = blockAttributes;\n\n\tconst { default: defaultBlockLayout } =\n\t\tgetBlockSupport( blockName, layoutBlockSupportKey ) || {};\n\tconst usedLayout =\n\t\tlayout?.inherit || layout?.contentSize || layout?.wideSize\n\t\t\t? { ...layout, type: 'constrained' }\n\t\t\t: layout || defaultBlockLayout || {};\n\n\tconst layoutClassnames = [];\n\n\tif ( LAYOUT_DEFINITIONS[ usedLayout?.type || 'default' ]?.className ) {\n\t\tconst baseClassName =\n\t\t\tLAYOUT_DEFINITIONS[ usedLayout?.type || 'default' ]?.className;\n\t\tconst compoundClassName = `wp-block-${ blockName\n\t\t\t.split( '/' )\n\t\t\t.pop() }-${ baseClassName }`;\n\t\tlayoutClassnames.push( baseClassName, compoundClassName );\n\t}\n\n\tif (\n\t\t( usedLayout?.inherit ||\n\t\t\tusedLayout?.contentSize ||\n\t\t\tusedLayout?.type === 'constrained' ) &&\n\t\trootPaddingAlignment\n\t) {\n\t\tlayoutClassnames.push( 'has-global-padding' );\n\t}\n\n\tif ( usedLayout?.orientation ) {\n\t\tlayoutClassnames.push( `is-${ kebabCase( usedLayout.orientation ) }` );\n\t}\n\n\tif ( usedLayout?.justifyContent ) {\n\t\tlayoutClassnames.push(\n\t\t\t`is-content-justification-${ kebabCase(\n\t\t\t\tusedLayout.justifyContent\n\t\t\t) }`\n\t\t);\n\t}\n\n\tif ( usedLayout?.flexWrap && usedLayout.flexWrap === 'nowrap' ) {\n\t\tlayoutClassnames.push( 'is-nowrap' );\n\t}\n\n\treturn layoutClassnames;\n}\n\n/**\n * Generates a CSS rule with the given block's layout styles.\n *\n * @param { Object } blockAttributes Block attributes.\n * @param { string } blockName       Block name.\n * @param { string } selector        A selector to use in generating the CSS rule.\n *\n * @return { string } CSS rule.\n */\nexport function useLayoutStyles( blockAttributes = {}, blockName, selector ) {\n\tconst { layout = {}, style = {} } = blockAttributes;\n\t// Update type for blocks using legacy layouts.\n\tconst usedLayout =\n\t\tlayout?.inherit || layout?.contentSize || layout?.wideSize\n\t\t\t? { ...layout, type: 'constrained' }\n\t\t\t: layout || {};\n\tconst fullLayoutType = getLayoutType( usedLayout?.type || 'default' );\n\tconst blockGapSupport = useSetting( 'spacing.blockGap' );\n\tconst hasBlockGapSupport = blockGapSupport !== null;\n\tconst css = fullLayoutType?.getLayoutStyle?.( {\n\t\tblockName,\n\t\tselector,\n\t\tlayout,\n\t\tstyle,\n\t\thasBlockGapSupport,\n\t} );\n\treturn css;\n}\n\nfunction LayoutPanel( { setAttributes, attributes, name: blockName } ) {\n\tconst { layout } = attributes;\n\tconst defaultThemeLayout = useSetting( 'layout' );\n\tconst { themeSupportsLayout } = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\treturn {\n\t\t\tthemeSupportsLayout: getSettings().supportsLayout,\n\t\t};\n\t}, [] );\n\tconst blockEditingMode = useBlockEditingMode();\n\n\tconst layoutBlockSupport = getBlockSupport(\n\t\tblockName,\n\t\tlayoutBlockSupportKey,\n\t\t{}\n\t);\n\tconst {\n\t\tallowSwitching,\n\t\tallowEditing = true,\n\t\tallowInheriting = true,\n\t\tdefault: defaultBlockLayout,\n\t} = layoutBlockSupport;\n\n\tif ( ! allowEditing ) {\n\t\treturn null;\n\t}\n\n\t// Only show the inherit toggle if it's supported,\n\t// a default theme layout is set (e.g. one that provides `contentSize` and/or `wideSize` values),\n\t// and either the default / flow or the constrained layout type is in use, as the toggle switches from one to the other.\n\tconst showInheritToggle = !! (\n\t\tallowInheriting &&\n\t\t!! defaultThemeLayout &&\n\t\t( ! layout?.type ||\n\t\t\tlayout?.type === 'default' ||\n\t\t\tlayout?.type === 'constrained' ||\n\t\t\tlayout?.inherit )\n\t);\n\n\tconst usedLayout = layout || defaultBlockLayout || {};\n\tconst {\n\t\tinherit = false,\n\t\ttype = 'default',\n\t\tcontentSize = null,\n\t} = usedLayout;\n\t/**\n\t * `themeSupportsLayout` is only relevant to the `default/flow` or\n\t * `constrained` layouts and it should not be taken into account when other\n\t * `layout` types are used.\n\t */\n\tif (\n\t\t( type === 'default' || type === 'constrained' ) &&\n\t\t! themeSupportsLayout\n\t) {\n\t\treturn null;\n\t}\n\tconst layoutType = getLayoutType( type );\n\tconst constrainedType = getLayoutType( 'constrained' );\n\tconst displayControlsForLegacyLayouts =\n\t\t! usedLayout.type && ( contentSize || inherit );\n\tconst hasContentSizeOrLegacySettings = !! inherit || !! contentSize;\n\n\tconst onChangeType = ( newType ) =>\n\t\tsetAttributes( { layout: { type: newType } } );\n\tconst onChangeLayout = ( newLayout ) =>\n\t\tsetAttributes( { layout: newLayout } );\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Layout' ) }>\n\t\t\t\t\t{ showInheritToggle && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\tclassName=\"block-editor-hooks__toggle-control\"\n\t\t\t\t\t\t\t\tlabel={ __( 'Inner blocks use content width' ) }\n\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\tlayoutType?.name === 'constrained' ||\n\t\t\t\t\t\t\t\t\thasContentSizeOrLegacySettings\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonChange={ () =>\n\t\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\t\tlayout: {\n\t\t\t\t\t\t\t\t\t\t\ttype:\n\t\t\t\t\t\t\t\t\t\t\t\tlayoutType?.name ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t'constrained' ||\n\t\t\t\t\t\t\t\t\t\t\t\thasContentSizeOrLegacySettings\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 'default'\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 'constrained',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\thelp={\n\t\t\t\t\t\t\t\t\tlayoutType?.name === 'constrained' ||\n\t\t\t\t\t\t\t\t\thasContentSizeOrLegacySettings\n\t\t\t\t\t\t\t\t\t\t? __(\n\t\t\t\t\t\t\t\t\t\t\t\t'Nested blocks use content width with options for full and wide widths.'\n\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t: __(\n\t\t\t\t\t\t\t\t\t\t\t\t'Nested blocks will fill the width of this container. Toggle to constrain.'\n\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ ! inherit && allowSwitching && (\n\t\t\t\t\t\t<LayoutTypeSwitcher\n\t\t\t\t\t\t\ttype={ type }\n\t\t\t\t\t\t\tonChange={ onChangeType }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ layoutType && layoutType.name !== 'default' && (\n\t\t\t\t\t\t<layoutType.inspectorControls\n\t\t\t\t\t\t\tlayout={ usedLayout }\n\t\t\t\t\t\t\tonChange={ onChangeLayout }\n\t\t\t\t\t\t\tlayoutBlockSupport={ layoutBlockSupport }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ constrainedType && displayControlsForLegacyLayouts && (\n\t\t\t\t\t\t<constrainedType.inspectorControls\n\t\t\t\t\t\t\tlayout={ usedLayout }\n\t\t\t\t\t\t\tonChange={ onChangeLayout }\n\t\t\t\t\t\t\tlayoutBlockSupport={ layoutBlockSupport }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t{ ! inherit && blockEditingMode === 'default' && layoutType && (\n\t\t\t\t<layoutType.toolBarControls\n\t\t\t\t\tlayout={ usedLayout }\n\t\t\t\t\tonChange={ onChangeLayout }\n\t\t\t\t\tlayoutBlockSupport={ layoutBlockSupport }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nfunction LayoutTypeSwitcher( { type, onChange } ) {\n\treturn (\n\t\t<ButtonGroup>\n\t\t\t{ getLayoutTypes().map( ( { name, label } ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tkey={ name }\n\t\t\t\t\t\tisPressed={ type === name }\n\t\t\t\t\t\tonClick={ () => onChange( name ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ label }\n\t\t\t\t\t</Button>\n\t\t\t\t);\n\t\t\t} ) }\n\t\t</ButtonGroup>\n\t);\n}\n\n/**\n * Filters registered block settings, extending attributes to include `layout`.\n *\n * @param {Object} settings Original block settings.\n *\n * @return {Object} Filtered block settings.\n */\nexport function addAttribute( settings ) {\n\tif ( 'type' in ( settings.attributes?.layout ?? {} ) ) {\n\t\treturn settings;\n\t}\n\tif ( hasLayoutBlockSupport( settings ) ) {\n\t\tsettings.attributes = {\n\t\t\t...settings.attributes,\n\t\t\tlayout: {\n\t\t\t\ttype: 'object',\n\t\t\t},\n\t\t};\n\t}\n\n\treturn settings;\n}\n\n/**\n * Override the default edit UI to include layout controls\n *\n * @param {Function} BlockEdit Original component.\n *\n * @return {Function} Wrapped component.\n */\nexport const withInspectorControls = createHigherOrderComponent(\n\t( BlockEdit ) => ( props ) => {\n\t\tconst { name: blockName } = props;\n\t\tconst supportLayout = hasLayoutBlockSupport( blockName );\n\n\t\tconst blockEditingMode = useBlockEditingMode();\n\t\treturn [\n\t\t\tsupportLayout && blockEditingMode === 'default' && (\n\t\t\t\t<LayoutPanel key=\"layout\" { ...props } />\n\t\t\t),\n\t\t\t<BlockEdit key=\"edit\" { ...props } />,\n\t\t];\n\t},\n\t'withInspectorControls'\n);\n\n/**\n * Override the default block element to add the layout styles.\n *\n * @param {Function} BlockListBlock Original component.\n *\n * @return {Function} Wrapped component.\n */\nexport const withLayoutStyles = createHigherOrderComponent(\n\t( BlockListBlock ) => ( props ) => {\n\t\tconst { name, attributes } = props;\n\t\tconst blockSupportsLayout = hasLayoutBlockSupport( name );\n\t\tconst disableLayoutStyles = useSelect( ( select ) => {\n\t\t\tconst { getSettings } = select( blockEditorStore );\n\t\t\treturn !! getSettings().disableLayoutStyles;\n\t\t} );\n\t\tconst shouldRenderLayoutStyles =\n\t\t\tblockSupportsLayout && ! disableLayoutStyles;\n\t\tconst id = useInstanceId( BlockListBlock );\n\t\tconst element = useContext( BlockList.__unstableElementContext );\n\t\tconst { layout } = attributes;\n\t\tconst { default: defaultBlockLayout } =\n\t\t\tgetBlockSupport( name, layoutBlockSupportKey ) || {};\n\t\tconst usedLayout =\n\t\t\tlayout?.inherit || layout?.contentSize || layout?.wideSize\n\t\t\t\t? { ...layout, type: 'constrained' }\n\t\t\t\t: layout || defaultBlockLayout || {};\n\t\tconst layoutClasses = blockSupportsLayout\n\t\t\t? useLayoutClasses( attributes, name )\n\t\t\t: null;\n\t\t// Higher specificity to override defaults from theme.json.\n\t\tconst selector = `.wp-container-${ id }.wp-container-${ id }`;\n\t\tconst blockGapSupport = useSetting( 'spacing.blockGap' );\n\t\tconst hasBlockGapSupport = blockGapSupport !== null;\n\n\t\t// Get CSS string for the current layout type.\n\t\t// The CSS and `style` element is only output if it is not empty.\n\t\tlet css;\n\t\tif ( shouldRenderLayoutStyles ) {\n\t\t\tconst fullLayoutType = getLayoutType(\n\t\t\t\tusedLayout?.type || 'default'\n\t\t\t);\n\t\t\tcss = fullLayoutType?.getLayoutStyle?.( {\n\t\t\t\tblockName: name,\n\t\t\t\tselector,\n\t\t\t\tlayout: usedLayout,\n\t\t\t\tstyle: attributes?.style,\n\t\t\t\thasBlockGapSupport,\n\t\t\t} );\n\t\t}\n\n\t\t// Attach a `wp-container-` id-based class name as well as a layout class name such as `is-layout-flex`.\n\t\tconst layoutClassNames = classnames(\n\t\t\t{\n\t\t\t\t[ `wp-container-${ id }` ]: shouldRenderLayoutStyles && !! css, // Only attach a container class if there is generated CSS to be attached.\n\t\t\t},\n\t\t\tlayoutClasses\n\t\t);\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{ shouldRenderLayoutStyles &&\n\t\t\t\t\telement &&\n\t\t\t\t\t!! css &&\n\t\t\t\t\tcreatePortal(\n\t\t\t\t\t\t<LayoutStyle\n\t\t\t\t\t\t\tblockName={ name }\n\t\t\t\t\t\t\tselector={ selector }\n\t\t\t\t\t\t\tcss={ css }\n\t\t\t\t\t\t\tlayout={ usedLayout }\n\t\t\t\t\t\t\tstyle={ attributes?.style }\n\t\t\t\t\t\t/>,\n\t\t\t\t\t\telement\n\t\t\t\t\t) }\n\t\t\t\t<BlockListBlock\n\t\t\t\t\t{ ...props }\n\t\t\t\t\t__unstableLayoutClassNames={ layoutClassNames }\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t},\n\t'withLayoutStyles'\n);\n\n/**\n * Override the default block element to add the child layout styles.\n *\n * @param {Function} BlockListBlock Original component.\n *\n * @return {Function} Wrapped component.\n */\nexport const withChildLayoutStyles = createHigherOrderComponent(\n\t( BlockListBlock ) => ( props ) => {\n\t\tconst { attributes } = props;\n\t\tconst { style: { layout = {} } = {} } = attributes;\n\t\tconst { selfStretch, flexSize } = layout;\n\t\tconst hasChildLayout = selfStretch || flexSize;\n\t\tconst disableLayoutStyles = useSelect( ( select ) => {\n\t\t\tconst { getSettings } = select( blockEditorStore );\n\t\t\treturn !! getSettings().disableLayoutStyles;\n\t\t} );\n\t\tconst shouldRenderChildLayoutStyles =\n\t\t\thasChildLayout && ! disableLayoutStyles;\n\n\t\tconst element = useContext( BlockList.__unstableElementContext );\n\t\tconst id = useInstanceId( BlockListBlock );\n\t\tconst selector = `.wp-container-content-${ id }`;\n\n\t\tlet css = '';\n\n\t\tif ( selfStretch === 'fixed' && flexSize ) {\n\t\t\tcss += `${ selector } {\n\t\t\t\tflex-basis: ${ flexSize };\n\t\t\t\tbox-sizing: border-box;\n\t\t\t}`;\n\t\t} else if ( selfStretch === 'fill' ) {\n\t\t\tcss += `${ selector } {\n\t\t\t\tflex-grow: 1;\n\t\t\t}`;\n\t\t}\n\n\t\t// Attach a `wp-container-content` id-based classname.\n\t\tconst className = classnames( props?.className, {\n\t\t\t[ `wp-container-content-${ id }` ]:\n\t\t\t\tshouldRenderChildLayoutStyles && !! css, // Only attach a container class if there is generated CSS to be attached.\n\t\t} );\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{ shouldRenderChildLayoutStyles &&\n\t\t\t\t\telement &&\n\t\t\t\t\t!! css &&\n\t\t\t\t\tcreatePortal( <style>{ css }</style>, element ) }\n\t\t\t\t<BlockListBlock { ...props } className={ className } />\n\t\t\t</>\n\t\t);\n\t},\n\t'withChildLayoutStyles'\n);\n\naddFilter(\n\t'blocks.registerBlockType',\n\t'core/layout/addAttribute',\n\taddAttribute\n);\naddFilter(\n\t'editor.BlockListBlock',\n\t'core/editor/layout/with-layout-styles',\n\twithLayoutStyles\n);\naddFilter(\n\t'editor.BlockListBlock',\n\t'core/editor/layout/with-child-layout-styles',\n\twithChildLayoutStyles\n);\naddFilter(\n\t'editor.BlockEdit',\n\t'core/editor/layout/with-inspector-controls',\n\twithInspectorControls\n);\n"]}