{"version":3,"sources":["@wordpress/block-editor/src/components/use-block-drop-zone/index.native.js"],"names":["UPDATE_TARGET_BLOCK_INDEX_THRESHOLD","getNearestBlockIndex","blocksLayouts","position","orientation","isRTL","allowedEdges","isRightToLeft","candidateIndex","candidateDistance","forEach","element","index","x","y","width","height","rect","top","right","bottom","left","distance","edge","undefined","isTrailingEdge","offset","useBlockDropZone","rootClientId","targetRootClientId","targetBlockIndex","dragPosition","prevDragPosition","getBlockListSettings","getSettings","blockEditorStore","getBlockLayoutsOrderedByYCoord","getSortedBlocksLayouts","current","onBlockDrop","updateTargetBlockIndex","event","sortedBlockLayouts","targetIndex","value","prevX","prevY","Math","abs","onBlockDragOver","onBlockDragOverWorklet","onBlockDragEnd"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport {\n\trunOnJS,\n\tuseDerivedValue,\n\tuseSharedValue,\n} from 'react-native-reanimated';\n\n/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { useCallback } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\nimport { useBlockListContext } from '../block-list/block-list-context';\nimport { getDistanceToNearestEdge } from '../../utils/math';\nimport useOnBlockDrop from '../use-on-block-drop';\n\nconst UPDATE_TARGET_BLOCK_INDEX_THRESHOLD = 20; // In pixels\n\n/** @typedef {import('../../utils/math').WPPoint} WPPoint */\n\n/**\n * The orientation of a block list.\n *\n * @typedef {'horizontal'|'vertical'|undefined} WPBlockListOrientation\n */\n\n/**\n * Given a list of blocks layouts finds the index that a block should be dropped at.\n *\n * @param {Object}                 blocksLayouts Blocks layouts object.\n * @param {WPPoint}                position      The position of the item being dragged.\n * @param {WPBlockListOrientation} orientation   The orientation of a block list.\n * @param {boolean}                isRTL         Check if current locale is RTL.\n *\n * @return {number|undefined} The block index that's closest to the drag position.\n */\nexport function getNearestBlockIndex(\n\tblocksLayouts,\n\tposition,\n\torientation,\n\tisRTL\n) {\n\tconst allowedEdges =\n\t\torientation === 'horizontal'\n\t\t\t? [ 'left', 'right' ]\n\t\t\t: [ 'top', 'bottom' ];\n\n\tconst isRightToLeft = isRTL;\n\n\tlet candidateIndex;\n\tlet candidateDistance;\n\n\t// Only enabled for root level blocks.\n\tblocksLayouts.forEach( ( element, index ) => {\n\t\tconst { x, y, width, height } = element;\n\t\tconst rect = {\n\t\t\tx: element.x,\n\t\t\ty: element.y,\n\t\t\ttop: y,\n\t\t\tright: x + width,\n\t\t\tbottom: y + height,\n\t\t\tleft: x,\n\t\t\twidth,\n\t\t\theight,\n\t\t};\n\t\tconst [ distance, edge ] = getDistanceToNearestEdge(\n\t\t\tposition,\n\t\t\trect,\n\t\t\tallowedEdges\n\t\t);\n\n\t\tif ( candidateDistance === undefined || distance < candidateDistance ) {\n\t\t\t// If the user is dropping to the trailing edge of the block\n\t\t\t// add 1 to the index to represent dragging after.\n\t\t\t// Take RTL languages into account where the left edge is\n\t\t\t// the trailing edge.\n\t\t\tconst isTrailingEdge =\n\t\t\t\tedge === 'bottom' ||\n\t\t\t\t( ! isRightToLeft && edge === 'right' ) ||\n\t\t\t\t( isRightToLeft && edge === 'left' );\n\t\t\tconst offset = isTrailingEdge ? 1 : 0;\n\n\t\t\t// Update the currently known best candidate.\n\t\t\tcandidateDistance = distance;\n\t\t\tcandidateIndex = index + offset;\n\t\t}\n\t} );\n\treturn candidateIndex;\n}\n\n/**\n * @typedef  {Object} WPBlockDropZoneConfig\n * @property {string} rootClientId The root client id for the block list.\n */\n\n/**\n * A React hook that can be used to make a block list handle drag and drop.\n *\n * @param {WPBlockDropZoneConfig} dropZoneConfig configuration data for the drop zone.\n *\n * @return {Object} An object that contains `targetBlockIndex` and the event\n * handlers `onBlockDragOver`, `onBlockDragEnd` and `onBlockDrop`.\n */\nexport default function useBlockDropZone( {\n\t// An undefined value represents a top-level block. Default to an empty\n\t// string for this so that `targetRootClientId` can be easily compared to\n\t// values returned by the `getRootBlockClientId` selector, which also uses\n\t// an empty string to represent top-level blocks.\n\trootClientId: targetRootClientId = '',\n} = {} ) {\n\tconst targetBlockIndex = useSharedValue( null );\n\tconst dragPosition = {\n\t\tx: useSharedValue( 0 ),\n\t\ty: useSharedValue( 0 ),\n\t};\n\tconst prevDragPosition = {\n\t\tx: useSharedValue( 0 ),\n\t\ty: useSharedValue( 0 ),\n\t};\n\n\tconst { getBlockListSettings, getSettings } = useSelect( blockEditorStore );\n\tconst { blocksLayouts, getBlockLayoutsOrderedByYCoord } =\n\t\tuseBlockListContext();\n\n\tconst getSortedBlocksLayouts = useCallback( () => {\n\t\treturn getBlockLayoutsOrderedByYCoord( blocksLayouts.current );\n\t\t// We use the value of `blocksLayouts` as the dependency.\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [ blocksLayouts.current ] );\n\n\tconst isRTL = getSettings().isRTL;\n\n\tconst onBlockDrop = useOnBlockDrop();\n\n\tconst updateTargetBlockIndex = useCallback(\n\t\t( event ) => {\n\t\t\tconst sortedBlockLayouts = getSortedBlocksLayouts();\n\n\t\t\tconst targetIndex = getNearestBlockIndex(\n\t\t\t\tsortedBlockLayouts,\n\t\t\t\t{ x: event.x, y: event.y },\n\t\t\t\tgetBlockListSettings( targetRootClientId )?.orientation,\n\t\t\t\tisRTL\n\t\t\t);\n\t\t\tif ( targetIndex !== null ) {\n\t\t\t\ttargetBlockIndex.value = targetIndex ?? 0;\n\t\t\t}\n\t\t},\n\t\t[\n\t\t\tgetSortedBlocksLayouts,\n\t\t\tgetBlockListSettings,\n\t\t\ttargetRootClientId,\n\t\t\tisRTL,\n\t\t\ttargetBlockIndex,\n\t\t]\n\t);\n\n\tuseDerivedValue( () => {\n\t\tconst x = dragPosition.x.value;\n\t\tconst y = dragPosition.y.value;\n\t\tconst prevX = prevDragPosition.x.value;\n\t\tconst prevY = prevDragPosition.y.value;\n\t\t// `updateTargetBlockIndex` performs expensive calculations, so we throttle\n\t\t// the call using a offset threshold based on the dragging position.\n\t\tif (\n\t\t\tMath.abs( x - prevX ) >= UPDATE_TARGET_BLOCK_INDEX_THRESHOLD ||\n\t\t\tMath.abs( y - prevY ) >= UPDATE_TARGET_BLOCK_INDEX_THRESHOLD\n\t\t) {\n\t\t\trunOnJS( updateTargetBlockIndex )( { x, y } );\n\t\t\tprevDragPosition.x.value = x;\n\t\t\tprevDragPosition.y.value = y;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t} );\n\n\treturn {\n\t\tonBlockDragOver( { x, y } ) {\n\t\t\tdragPosition.x.value = x;\n\t\t\tdragPosition.y.value = y;\n\t\t},\n\t\tonBlockDragOverWorklet( { x, y } ) {\n\t\t\t'worklet';\n\t\t\tdragPosition.x.value = x;\n\t\t\tdragPosition.y.value = y;\n\t\t},\n\t\tonBlockDragEnd() {\n\t\t\ttargetBlockIndex.value = null;\n\t\t},\n\t\tonBlockDrop: ( event ) => {\n\t\t\tif ( targetBlockIndex.value !== null ) {\n\t\t\t\tonBlockDrop( {\n\t\t\t\t\t...event,\n\t\t\t\t\ttargetRootClientId,\n\t\t\t\t\ttargetBlockIndex: targetBlockIndex.value,\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\t\ttargetBlockIndex,\n\t};\n}\n"]}