{"version":3,"sources":["@wordpress/block-editor/src/components/list-view/block.js"],"names":["classnames","hasBlockSupport","__experimentalTreeGridCell","TreeGridCell","__experimentalTreeGridItem","TreeGridItem","useInstanceId","moreVertical","useState","useRef","useEffect","useCallback","memo","useDispatch","useSelect","sprintf","__","focus","ListViewLeaf","useListViewScrollIntoView","BlockMoverUpButton","BlockMoverDownButton","ListViewBlockContents","useListViewContext","getBlockPositionDescription","store","blockEditorStore","useBlockDisplayInformation","useBlockLock","unlock","AriaReferencedText","ListViewBlock","block","clientId","isDragged","isSelected","isBranchSelected","selectBlock","position","level","rowCount","siblingBlockCount","showBlockMovers","path","isExpanded","selectedClientIds","isSyncedBranch","cellRef","rowRef","isHovered","setIsHovered","isLocked","canEdit","isFirstSelectedBlock","isLastSelectedBlock","length","toggleBlockHighlight","blockInformation","blockTitle","title","select","getBlock","blockName","getBlockName","blockEditingMode","getBlockEditingMode","showBlockActions","instanceId","descriptionId","blockPositionDescription","blockAriaLabel","settingsAriaLabel","isTreeGridMounted","expand","collapse","BlockSettingsMenu","listViewInstanceId","expandedState","setInsertedBlock","treeGridElementRef","hasSiblings","hasRenderedMovers","moverCellClassName","listViewBlockSettingsClassName","current","onMouseEnter","onMouseLeave","selectEditorBlock","event","preventDefault","updateFocusAndSelection","focusClientId","shouldSelectBlock","undefined","getFocusElement","row","querySelector","focusable","find","focusElement","window","requestAnimationFrame","toggleExpanded","stopPropagation","colSpan","classes","isSynced","dropdownClientIds","includes","rowItemRef","currentlyEditingBlockInCanvas","ref","tabIndex","onFocus","className"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { hasBlockSupport } from '@wordpress/blocks';\nimport {\n\t__experimentalTreeGridCell as TreeGridCell,\n\t__experimentalTreeGridItem as TreeGridItem,\n} from '@wordpress/components';\nimport { useInstanceId } from '@wordpress/compose';\nimport { moreVertical } from '@wordpress/icons';\nimport {\n\tuseState,\n\tuseRef,\n\tuseEffect,\n\tuseCallback,\n\tmemo,\n} from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { sprintf, __ } from '@wordpress/i18n';\nimport { focus } from '@wordpress/dom';\n\n/**\n * Internal dependencies\n */\nimport ListViewLeaf from './leaf';\nimport useListViewScrollIntoView from './use-list-view-scroll-into-view';\nimport {\n\tBlockMoverUpButton,\n\tBlockMoverDownButton,\n} from '../block-mover/button';\nimport ListViewBlockContents from './block-contents';\nimport { useListViewContext } from './context';\nimport { getBlockPositionDescription } from './utils';\nimport { store as blockEditorStore } from '../../store';\nimport useBlockDisplayInformation from '../use-block-display-information';\nimport { useBlockLock } from '../block-lock';\nimport { unlock } from '../../lock-unlock';\nimport AriaReferencedText from './aria-referenced-text';\n\nfunction ListViewBlock( {\n\tblock: { clientId },\n\tisDragged,\n\tisSelected,\n\tisBranchSelected,\n\tselectBlock,\n\tposition,\n\tlevel,\n\trowCount,\n\tsiblingBlockCount,\n\tshowBlockMovers,\n\tpath,\n\tisExpanded,\n\tselectedClientIds,\n\tisSyncedBranch,\n} ) {\n\tconst cellRef = useRef( null );\n\tconst rowRef = useRef( null );\n\tconst [ isHovered, setIsHovered ] = useState( false );\n\n\tconst { isLocked, canEdit } = useBlockLock( clientId );\n\n\tconst isFirstSelectedBlock =\n\t\tisSelected && selectedClientIds[ 0 ] === clientId;\n\tconst isLastSelectedBlock =\n\t\tisSelected &&\n\t\tselectedClientIds[ selectedClientIds.length - 1 ] === clientId;\n\n\tconst { toggleBlockHighlight } = useDispatch( blockEditorStore );\n\n\tconst blockInformation = useBlockDisplayInformation( clientId );\n\tconst blockTitle = blockInformation?.title || __( 'Untitled' );\n\tconst block = useSelect(\n\t\t( select ) => select( blockEditorStore ).getBlock( clientId ),\n\t\t[ clientId ]\n\t);\n\tconst blockName = useSelect(\n\t\t( select ) => select( blockEditorStore ).getBlockName( clientId ),\n\t\t[ clientId ]\n\t);\n\tconst blockEditingMode = useSelect(\n\t\t( select ) =>\n\t\t\tunlock( select( blockEditorStore ) ).getBlockEditingMode(\n\t\t\t\tclientId\n\t\t\t),\n\t\t[ clientId ]\n\t);\n\n\tconst showBlockActions =\n\t\t// When a block hides its toolbar it also hides the block settings menu,\n\t\t// since that menu is part of the toolbar in the editor canvas.\n\t\t// List View respects this by also hiding the block settings menu.\n\t\thasBlockSupport( blockName, '__experimentalToolbar', true ) &&\n\t\t// Don't show the settings menu if block is disabled or content only.\n\t\tblockEditingMode === 'default';\n\tconst instanceId = useInstanceId( ListViewBlock );\n\tconst descriptionId = `list-view-block-select-button__${ instanceId }`;\n\tconst blockPositionDescription = getBlockPositionDescription(\n\t\tposition,\n\t\tsiblingBlockCount,\n\t\tlevel\n\t);\n\n\tconst blockAriaLabel = isLocked\n\t\t? sprintf(\n\t\t\t\t// translators: %s: The title of the block. This string indicates a link to select the locked block.\n\t\t\t\t__( '%s (locked)' ),\n\t\t\t\tblockTitle\n\t\t  )\n\t\t: blockTitle;\n\n\tconst settingsAriaLabel = sprintf(\n\t\t// translators: %s: The title of the block.\n\t\t__( 'Options for %s' ),\n\t\tblockTitle\n\t);\n\n\tconst {\n\t\tisTreeGridMounted,\n\t\texpand,\n\t\tcollapse,\n\t\tBlockSettingsMenu,\n\t\tlistViewInstanceId,\n\t\texpandedState,\n\t\tsetInsertedBlock,\n\t\ttreeGridElementRef,\n\t} = useListViewContext();\n\n\tconst hasSiblings = siblingBlockCount > 0;\n\tconst hasRenderedMovers = showBlockMovers && hasSiblings;\n\tconst moverCellClassName = classnames(\n\t\t'block-editor-list-view-block__mover-cell',\n\t\t{ 'is-visible': isHovered || isSelected }\n\t);\n\n\tconst listViewBlockSettingsClassName = classnames(\n\t\t'block-editor-list-view-block__menu-cell',\n\t\t{ 'is-visible': isHovered || isFirstSelectedBlock }\n\t);\n\n\t// If ListView has experimental features related to the Persistent List View,\n\t// only focus the selected list item on mount; otherwise the list would always\n\t// try to steal the focus from the editor canvas.\n\tuseEffect( () => {\n\t\tif ( ! isTreeGridMounted && isSelected ) {\n\t\t\tcellRef.current.focus();\n\t\t}\n\t}, [] );\n\n\tconst onMouseEnter = useCallback( () => {\n\t\tsetIsHovered( true );\n\t\ttoggleBlockHighlight( clientId, true );\n\t}, [ clientId, setIsHovered, toggleBlockHighlight ] );\n\tconst onMouseLeave = useCallback( () => {\n\t\tsetIsHovered( false );\n\t\ttoggleBlockHighlight( clientId, false );\n\t}, [ clientId, setIsHovered, toggleBlockHighlight ] );\n\n\tconst selectEditorBlock = useCallback(\n\t\t( event ) => {\n\t\t\tselectBlock( event, clientId );\n\t\t\tevent.preventDefault();\n\t\t},\n\t\t[ clientId, selectBlock ]\n\t);\n\n\tconst updateFocusAndSelection = useCallback(\n\t\t( focusClientId, shouldSelectBlock ) => {\n\t\t\tif ( shouldSelectBlock ) {\n\t\t\t\tselectBlock( undefined, focusClientId, null, null );\n\t\t\t}\n\n\t\t\tconst getFocusElement = () => {\n\t\t\t\tconst row = treeGridElementRef.current?.querySelector(\n\t\t\t\t\t`[role=row][data-block=\"${ focusClientId }\"]`\n\t\t\t\t);\n\t\t\t\tif ( ! row ) return null;\n\t\t\t\t// Focus the first focusable in the row, which is the ListViewBlockSelectButton.\n\t\t\t\treturn focus.focusable.find( row )[ 0 ];\n\t\t\t};\n\n\t\t\tlet focusElement = getFocusElement();\n\t\t\tif ( focusElement ) {\n\t\t\t\tfocusElement.focus();\n\t\t\t} else {\n\t\t\t\t// The element hasn't been painted yet. Defer focusing on the next frame.\n\t\t\t\t// This could happen when all blocks have been deleted and the default block\n\t\t\t\t// hasn't been added to the editor yet.\n\t\t\t\twindow.requestAnimationFrame( () => {\n\t\t\t\t\tfocusElement = getFocusElement();\n\t\t\t\t\t// Ignore if the element still doesn't exist.\n\t\t\t\t\tif ( focusElement ) {\n\t\t\t\t\t\tfocusElement.focus();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\t\t[ selectBlock, treeGridElementRef ]\n\t);\n\n\tconst toggleExpanded = useCallback(\n\t\t( event ) => {\n\t\t\t// Prevent shift+click from opening link in a new window when toggling.\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tif ( isExpanded === true ) {\n\t\t\t\tcollapse( clientId );\n\t\t\t} else if ( isExpanded === false ) {\n\t\t\t\texpand( clientId );\n\t\t\t}\n\t\t},\n\t\t[ clientId, expand, collapse, isExpanded ]\n\t);\n\n\tlet colSpan;\n\tif ( hasRenderedMovers ) {\n\t\tcolSpan = 2;\n\t} else if ( ! showBlockActions ) {\n\t\tcolSpan = 3;\n\t}\n\n\tconst classes = classnames( {\n\t\t'is-selected': isSelected,\n\t\t'is-first-selected': isFirstSelectedBlock,\n\t\t'is-last-selected': isLastSelectedBlock,\n\t\t'is-branch-selected': isBranchSelected,\n\t\t'is-synced-branch': isSyncedBranch,\n\t\t'is-dragging': isDragged,\n\t\t'has-single-cell': ! showBlockActions,\n\t\t'is-synced': blockInformation?.isSynced,\n\t} );\n\n\t// Only include all selected blocks if the currently clicked on block\n\t// is one of the selected blocks. This ensures that if a user attempts\n\t// to alter a block that isn't part of the selection, they're still able\n\t// to do so.\n\tconst dropdownClientIds = selectedClientIds.includes( clientId )\n\t\t? selectedClientIds\n\t\t: [ clientId ];\n\n\t// Pass in a ref to the row, so that it can be scrolled\n\t// into view when selected. For long lists, the placeholder for the\n\t// selected block is also observed, within ListViewLeafPlaceholder.\n\tuseListViewScrollIntoView( {\n\t\tisSelected,\n\t\trowItemRef: rowRef,\n\t\tselectedClientIds,\n\t} );\n\n\t// Detect if there is a block in the canvas currently being edited and multi-selection is not happening.\n\tconst currentlyEditingBlockInCanvas =\n\t\tisSelected && selectedClientIds.length === 1;\n\n\treturn (\n\t\t<ListViewLeaf\n\t\t\tclassName={ classes }\n\t\t\tonMouseEnter={ onMouseEnter }\n\t\t\tonMouseLeave={ onMouseLeave }\n\t\t\tonFocus={ onMouseEnter }\n\t\t\tonBlur={ onMouseLeave }\n\t\t\tlevel={ level }\n\t\t\tposition={ position }\n\t\t\trowCount={ rowCount }\n\t\t\tpath={ path }\n\t\t\tid={ `list-view-${ listViewInstanceId }-block-${ clientId }` }\n\t\t\tdata-block={ clientId }\n\t\t\tdata-expanded={ canEdit ? isExpanded : undefined }\n\t\t\tref={ rowRef }\n\t\t>\n\t\t\t<TreeGridCell\n\t\t\t\tclassName=\"block-editor-list-view-block__contents-cell\"\n\t\t\t\tcolSpan={ colSpan }\n\t\t\t\tref={ cellRef }\n\t\t\t\taria-selected={ !! isSelected }\n\t\t\t>\n\t\t\t\t{ ( { ref, tabIndex, onFocus } ) => (\n\t\t\t\t\t<div className=\"block-editor-list-view-block__contents-container\">\n\t\t\t\t\t\t<ListViewBlockContents\n\t\t\t\t\t\t\tblock={ block }\n\t\t\t\t\t\t\tonClick={ selectEditorBlock }\n\t\t\t\t\t\t\tonToggleExpanded={ toggleExpanded }\n\t\t\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\t\t\tposition={ position }\n\t\t\t\t\t\t\tsiblingBlockCount={ siblingBlockCount }\n\t\t\t\t\t\t\tlevel={ level }\n\t\t\t\t\t\t\tref={ ref }\n\t\t\t\t\t\t\ttabIndex={\n\t\t\t\t\t\t\t\tcurrentlyEditingBlockInCanvas ? 0 : tabIndex\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\t\t\tisExpanded={ canEdit ? isExpanded : undefined }\n\t\t\t\t\t\t\tselectedClientIds={ selectedClientIds }\n\t\t\t\t\t\t\tariaLabel={ blockAriaLabel }\n\t\t\t\t\t\t\tariaDescribedBy={ descriptionId }\n\t\t\t\t\t\t\tupdateFocusAndSelection={ updateFocusAndSelection }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<AriaReferencedText id={ descriptionId }>\n\t\t\t\t\t\t\t{ blockPositionDescription }\n\t\t\t\t\t\t</AriaReferencedText>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t</TreeGridCell>\n\t\t\t{ hasRenderedMovers && (\n\t\t\t\t<>\n\t\t\t\t\t<TreeGridCell\n\t\t\t\t\t\tclassName={ moverCellClassName }\n\t\t\t\t\t\twithoutGridItem\n\t\t\t\t\t>\n\t\t\t\t\t\t<TreeGridItem>\n\t\t\t\t\t\t\t{ ( { ref, tabIndex, onFocus } ) => (\n\t\t\t\t\t\t\t\t<BlockMoverUpButton\n\t\t\t\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\t\t\t\tclientIds={ [ clientId ] }\n\t\t\t\t\t\t\t\t\tref={ ref }\n\t\t\t\t\t\t\t\t\ttabIndex={ tabIndex }\n\t\t\t\t\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</TreeGridItem>\n\t\t\t\t\t\t<TreeGridItem>\n\t\t\t\t\t\t\t{ ( { ref, tabIndex, onFocus } ) => (\n\t\t\t\t\t\t\t\t<BlockMoverDownButton\n\t\t\t\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\t\t\t\tclientIds={ [ clientId ] }\n\t\t\t\t\t\t\t\t\tref={ ref }\n\t\t\t\t\t\t\t\t\ttabIndex={ tabIndex }\n\t\t\t\t\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</TreeGridItem>\n\t\t\t\t\t</TreeGridCell>\n\t\t\t\t</>\n\t\t\t) }\n\n\t\t\t{ showBlockActions && BlockSettingsMenu && (\n\t\t\t\t<TreeGridCell\n\t\t\t\t\tclassName={ listViewBlockSettingsClassName }\n\t\t\t\t\taria-selected={ !! isSelected }\n\t\t\t\t>\n\t\t\t\t\t{ ( { ref, tabIndex, onFocus } ) => (\n\t\t\t\t\t\t<BlockSettingsMenu\n\t\t\t\t\t\t\tclientIds={ dropdownClientIds }\n\t\t\t\t\t\t\tblock={ block }\n\t\t\t\t\t\t\ticon={ moreVertical }\n\t\t\t\t\t\t\tlabel={ settingsAriaLabel }\n\t\t\t\t\t\t\ttoggleProps={ {\n\t\t\t\t\t\t\t\tref,\n\t\t\t\t\t\t\t\tclassName: 'block-editor-list-view-block__menu',\n\t\t\t\t\t\t\t\ttabIndex,\n\t\t\t\t\t\t\t\tonFocus,\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tdisableOpenOnArrowDown\n\t\t\t\t\t\t\texpand={ expand }\n\t\t\t\t\t\t\texpandedState={ expandedState }\n\t\t\t\t\t\t\tsetInsertedBlock={ setInsertedBlock }\n\t\t\t\t\t\t\t__experimentalSelectBlock={\n\t\t\t\t\t\t\t\tupdateFocusAndSelection\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</TreeGridCell>\n\t\t\t) }\n\t\t</ListViewLeaf>\n\t);\n}\n\nexport default memo( ListViewBlock );\n"]}