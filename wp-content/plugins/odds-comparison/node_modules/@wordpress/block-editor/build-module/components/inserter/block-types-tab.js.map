{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/block-types-tab.js"],"names":["__","_x","useMemo","useEffect","pipe","useAsyncList","BlockTypesList","InserterPanel","useBlockTypesState","InserterListbox","orderBy","getBlockNamespace","item","name","split","MAX_SUGGESTED_ITEMS","EMPTY_ARRAY","BlockTypesTab","rootClientId","onInsert","onHover","showMostUsedBlocks","items","categories","collections","onSelectItem","suggestedItems","slice","uncategorizedItems","filter","category","itemsPerCategory","itemList","reduce","acc","push","itemsPerCollection","result","Object","keys","forEach","namespace","length","currentlyRenderedCategories","didRenderAllCategories","collectionEntries","entries","currentlyRenderedCollections","map","categoryItems","slug","title","icon","collection","collectionItems"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __, _x } from '@wordpress/i18n';\nimport { useMemo, useEffect } from '@wordpress/element';\nimport { pipe, useAsyncList } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport BlockTypesList from '../block-types-list';\nimport InserterPanel from './panel';\nimport useBlockTypesState from './hooks/use-block-types-state';\nimport InserterListbox from '../inserter-listbox';\nimport { orderBy } from '../../utils/sorting';\n\nconst getBlockNamespace = ( item ) => item.name.split( '/' )[ 0 ];\n\nconst MAX_SUGGESTED_ITEMS = 6;\n\n/**\n * Shared reference to an empty array for cases where it is important to avoid\n * returning a new array reference on every invocation and rerendering the component.\n *\n * @type {Array}\n */\nconst EMPTY_ARRAY = [];\n\nexport function BlockTypesTab( {\n\trootClientId,\n\tonInsert,\n\tonHover,\n\tshowMostUsedBlocks,\n} ) {\n\tconst [ items, categories, collections, onSelectItem ] = useBlockTypesState(\n\t\trootClientId,\n\t\tonInsert\n\t);\n\n\tconst suggestedItems = useMemo( () => {\n\t\treturn orderBy( items, 'frecency', 'desc' ).slice(\n\t\t\t0,\n\t\t\tMAX_SUGGESTED_ITEMS\n\t\t);\n\t}, [ items ] );\n\n\tconst uncategorizedItems = useMemo( () => {\n\t\treturn items.filter( ( item ) => ! item.category );\n\t}, [ items ] );\n\n\tconst itemsPerCategory = useMemo( () => {\n\t\treturn pipe(\n\t\t\t( itemList ) =>\n\t\t\t\titemList.filter(\n\t\t\t\t\t( item ) => item.category && item.category !== 'reusable'\n\t\t\t\t),\n\t\t\t( itemList ) =>\n\t\t\t\titemList.reduce( ( acc, item ) => {\n\t\t\t\t\tconst { category } = item;\n\t\t\t\t\tif ( ! acc[ category ] ) {\n\t\t\t\t\t\tacc[ category ] = [];\n\t\t\t\t\t}\n\t\t\t\t\tacc[ category ].push( item );\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {} )\n\t\t)( items );\n\t}, [ items ] );\n\n\tconst itemsPerCollection = useMemo( () => {\n\t\t// Create a new Object to avoid mutating collection.\n\t\tconst result = { ...collections };\n\t\tObject.keys( collections ).forEach( ( namespace ) => {\n\t\t\tresult[ namespace ] = items.filter(\n\t\t\t\t( item ) => getBlockNamespace( item ) === namespace\n\t\t\t);\n\t\t\tif ( result[ namespace ].length === 0 ) {\n\t\t\t\tdelete result[ namespace ];\n\t\t\t}\n\t\t} );\n\n\t\treturn result;\n\t}, [ items, collections ] );\n\n\t// Hide block preview on unmount.\n\tuseEffect( () => () => onHover( null ), [] );\n\n\t/**\n\t * The inserter contains a big number of blocks and opening it is a costful operation.\n\t * The rendering is the most costful part of it, in order to improve the responsiveness\n\t * of the \"opening\" action, these lazy lists allow us to render the inserter category per category,\n\t * once all the categories are rendered, we start rendering the collections and the uncategorized block types.\n\t */\n\tconst currentlyRenderedCategories = useAsyncList( categories );\n\tconst didRenderAllCategories =\n\t\tcategories.length === currentlyRenderedCategories.length;\n\n\t// Async List requires an array.\n\tconst collectionEntries = useMemo( () => {\n\t\treturn Object.entries( collections );\n\t}, [ collections ] );\n\tconst currentlyRenderedCollections = useAsyncList(\n\t\tdidRenderAllCategories ? collectionEntries : EMPTY_ARRAY\n\t);\n\n\treturn (\n\t\t<InserterListbox>\n\t\t\t<div>\n\t\t\t\t{ showMostUsedBlocks && !! suggestedItems.length && (\n\t\t\t\t\t<InserterPanel title={ _x( 'Most used', 'blocks' ) }>\n\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\titems={ suggestedItems }\n\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\tlabel={ _x( 'Most used', 'blocks' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InserterPanel>\n\t\t\t\t) }\n\n\t\t\t\t{ currentlyRenderedCategories.map( ( category ) => {\n\t\t\t\t\tconst categoryItems = itemsPerCategory[ category.slug ];\n\t\t\t\t\tif ( ! categoryItems || ! categoryItems.length ) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<InserterPanel\n\t\t\t\t\t\t\tkey={ category.slug }\n\t\t\t\t\t\t\ttitle={ category.title }\n\t\t\t\t\t\t\ticon={ category.icon }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\t\titems={ categoryItems }\n\t\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\t\tlabel={ category.title }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</InserterPanel>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\n\t\t\t\t{ didRenderAllCategories && uncategorizedItems.length > 0 && (\n\t\t\t\t\t<InserterPanel\n\t\t\t\t\t\tclassName=\"block-editor-inserter__uncategorized-blocks-panel\"\n\t\t\t\t\t\ttitle={ __( 'Uncategorized' ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\titems={ uncategorizedItems }\n\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\tlabel={ __( 'Uncategorized' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InserterPanel>\n\t\t\t\t) }\n\n\t\t\t\t{ currentlyRenderedCollections.map(\n\t\t\t\t\t( [ namespace, collection ] ) => {\n\t\t\t\t\t\tconst collectionItems = itemsPerCollection[ namespace ];\n\t\t\t\t\t\tif ( ! collectionItems || ! collectionItems.length ) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<InserterPanel\n\t\t\t\t\t\t\t\tkey={ namespace }\n\t\t\t\t\t\t\t\ttitle={ collection.title }\n\t\t\t\t\t\t\t\ticon={ collection.icon }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\t\t\titems={ collectionItems }\n\t\t\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\t\t\tlabel={ collection.title }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</InserterPanel>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</InserterListbox>\n\t);\n}\n\nexport default BlockTypesTab;\n"]}