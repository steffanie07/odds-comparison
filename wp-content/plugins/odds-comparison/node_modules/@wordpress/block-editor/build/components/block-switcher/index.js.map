{"version":3,"sources":["@wordpress/block-editor/src/components/block-switcher/index.js"],"names":["BlockSwitcherDropdownMenu","clientIds","blocks","replaceBlocks","multiSelect","updateBlockAttributes","blockEditorStore","blockInformation","clientId","possibleBlockTransformations","canRemove","hasBlockStyles","icon","patterns","select","getBlockRootClientId","getBlockTransformItems","__experimentalGetPatternTransformItems","canRemoveBlocks","getBlockStyles","getBlockType","blocksStore","rootClientId","Array","isArray","name","firstBlockName","_isSingleBlockSelected","length","styles","_icon","isSelectionOfSameType","Set","map","size","copy","blockVariationTransformations","blockTitle","maximumLength","isReusable","isTemplate","selectForMultipleBlocks","insertedBlocks","onBlockTransform","newBlocks","onBlockVariationTransform","find","variationName","attributes","onPatternTransform","transformedBlocks","hasPossibleBlockTransformations","hasPossibleBlockVariationTransformations","hasPatternTransformation","blockSwitcherLabel","blockSwitcherDescription","hasBlockOrBlockVariationTransforms","showDropDown","toggleProps","placement","className","describedBy","orientation","onClose","BlockSwitcher","getBlocksByClientId","some","block"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __, _n, sprintf } from '@wordpress/i18n';\nimport {\n\tDropdownMenu,\n\tToolbarButton,\n\tToolbarGroup,\n\tToolbarItem,\n} from '@wordpress/components';\nimport {\n\tswitchToBlockType,\n\tstore as blocksStore,\n\tisReusableBlock,\n\tisTemplatePart,\n} from '@wordpress/blocks';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { copy } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\nimport useBlockDisplayInformation from '../use-block-display-information';\nimport BlockIcon from '../block-icon';\nimport BlockTransformationsMenu from './block-transformations-menu';\nimport { useBlockVariationTransforms } from './block-variation-transformations';\nimport BlockStylesMenu from './block-styles-menu';\nimport PatternTransformationsMenu from './pattern-transformations-menu';\nimport useBlockDisplayTitle from '../block-title/use-block-display-title';\n\nexport const BlockSwitcherDropdownMenu = ( { clientIds, blocks } ) => {\n\tconst { replaceBlocks, multiSelect, updateBlockAttributes } =\n\t\tuseDispatch( blockEditorStore );\n\tconst blockInformation = useBlockDisplayInformation( blocks[ 0 ].clientId );\n\tconst {\n\t\tpossibleBlockTransformations,\n\t\tcanRemove,\n\t\thasBlockStyles,\n\t\ticon,\n\t\tpatterns,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockRootClientId,\n\t\t\t\tgetBlockTransformItems,\n\t\t\t\t__experimentalGetPatternTransformItems,\n\t\t\t\tcanRemoveBlocks,\n\t\t\t} = select( blockEditorStore );\n\t\t\tconst { getBlockStyles, getBlockType } = select( blocksStore );\n\t\t\tconst rootClientId = getBlockRootClientId(\n\t\t\t\tArray.isArray( clientIds ) ? clientIds[ 0 ] : clientIds\n\t\t\t);\n\t\t\tconst [ { name: firstBlockName } ] = blocks;\n\t\t\tconst _isSingleBlockSelected = blocks.length === 1;\n\t\t\tconst styles =\n\t\t\t\t_isSingleBlockSelected && getBlockStyles( firstBlockName );\n\t\t\tlet _icon;\n\t\t\tif ( _isSingleBlockSelected ) {\n\t\t\t\t_icon = blockInformation?.icon; // Take into account active block variations.\n\t\t\t} else {\n\t\t\t\tconst isSelectionOfSameType =\n\t\t\t\t\tnew Set( blocks.map( ( { name } ) => name ) ).size === 1;\n\t\t\t\t// When selection consists of blocks of multiple types, display an\n\t\t\t\t// appropriate icon to communicate the non-uniformity.\n\t\t\t\t_icon = isSelectionOfSameType\n\t\t\t\t\t? getBlockType( firstBlockName )?.icon\n\t\t\t\t\t: copy;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tpossibleBlockTransformations: getBlockTransformItems(\n\t\t\t\t\tblocks,\n\t\t\t\t\trootClientId\n\t\t\t\t),\n\t\t\t\tcanRemove: canRemoveBlocks( clientIds, rootClientId ),\n\t\t\t\thasBlockStyles: !! styles?.length,\n\t\t\t\ticon: _icon,\n\t\t\t\tpatterns: __experimentalGetPatternTransformItems(\n\t\t\t\t\tblocks,\n\t\t\t\t\trootClientId\n\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t[ clientIds, blocks, blockInformation?.icon ]\n\t);\n\n\tconst blockVariationTransformations = useBlockVariationTransforms( {\n\t\tclientIds,\n\t\tblocks,\n\t} );\n\n\tconst blockTitle = useBlockDisplayTitle( {\n\t\tclientId: Array.isArray( clientIds ) ? clientIds[ 0 ] : clientIds,\n\t\tmaximumLength: 35,\n\t} );\n\tconst isReusable = blocks.length === 1 && isReusableBlock( blocks[ 0 ] );\n\tconst isTemplate = blocks.length === 1 && isTemplatePart( blocks[ 0 ] );\n\n\tfunction selectForMultipleBlocks( insertedBlocks ) {\n\t\tif ( insertedBlocks.length > 1 ) {\n\t\t\tmultiSelect(\n\t\t\t\tinsertedBlocks[ 0 ].clientId,\n\t\t\t\tinsertedBlocks[ insertedBlocks.length - 1 ].clientId\n\t\t\t);\n\t\t}\n\t}\n\n\t// Simple block tranformation based on the `Block Transforms` API.\n\tfunction onBlockTransform( name ) {\n\t\tconst newBlocks = switchToBlockType( blocks, name );\n\t\treplaceBlocks( clientIds, newBlocks );\n\t\tselectForMultipleBlocks( newBlocks );\n\t}\n\n\tfunction onBlockVariationTransform( name ) {\n\t\tupdateBlockAttributes( blocks[ 0 ].clientId, {\n\t\t\t...blockVariationTransformations.find(\n\t\t\t\t( { name: variationName } ) => variationName === name\n\t\t\t).attributes,\n\t\t} );\n\t}\n\n\t// Pattern transformation through the `Patterns` API.\n\tfunction onPatternTransform( transformedBlocks ) {\n\t\treplaceBlocks( clientIds, transformedBlocks );\n\t\tselectForMultipleBlocks( transformedBlocks );\n\t}\n\n\t/**\n\t * The `isTemplate` check is a stopgap solution here.\n\t * Ideally, the Transforms API should handle this\n\t * by allowing to exclude blocks from wildcard transformations.\n\t */\n\tconst hasPossibleBlockTransformations =\n\t\t!! possibleBlockTransformations.length && canRemove && ! isTemplate;\n\tconst hasPossibleBlockVariationTransformations =\n\t\t!! blockVariationTransformations?.length;\n\tconst hasPatternTransformation = !! patterns?.length && canRemove;\n\tif (\n\t\t! hasBlockStyles &&\n\t\t! hasPossibleBlockTransformations &&\n\t\t! hasPossibleBlockVariationTransformations\n\t) {\n\t\treturn (\n\t\t\t<ToolbarGroup>\n\t\t\t\t<ToolbarButton\n\t\t\t\t\tdisabled\n\t\t\t\t\tclassName=\"block-editor-block-switcher__no-switcher-icon\"\n\t\t\t\t\ttitle={ blockTitle }\n\t\t\t\t\ticon={\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<BlockIcon icon={ icon } showColors />\n\t\t\t\t\t\t\t{ ( isReusable || isTemplate ) && (\n\t\t\t\t\t\t\t\t<span className=\"block-editor-block-switcher__toggle-text\">\n\t\t\t\t\t\t\t\t\t{ blockTitle }\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</ToolbarGroup>\n\t\t);\n\t}\n\n\tconst blockSwitcherLabel = blockTitle;\n\n\tconst blockSwitcherDescription =\n\t\t1 === blocks.length\n\t\t\t? sprintf(\n\t\t\t\t\t/* translators: %s: block title. */\n\t\t\t\t\t__( '%s: Change block type or style' ),\n\t\t\t\t\tblockTitle\n\t\t\t  )\n\t\t\t: sprintf(\n\t\t\t\t\t/* translators: %d: number of blocks. */\n\t\t\t\t\t_n(\n\t\t\t\t\t\t'Change type of %d block',\n\t\t\t\t\t\t'Change type of %d blocks',\n\t\t\t\t\t\tblocks.length\n\t\t\t\t\t),\n\t\t\t\t\tblocks.length\n\t\t\t  );\n\n\tconst hasBlockOrBlockVariationTransforms =\n\t\thasPossibleBlockTransformations ||\n\t\thasPossibleBlockVariationTransformations;\n\tconst showDropDown =\n\t\thasBlockStyles ||\n\t\thasBlockOrBlockVariationTransforms ||\n\t\thasPatternTransformation;\n\treturn (\n\t\t<ToolbarGroup>\n\t\t\t<ToolbarItem>\n\t\t\t\t{ ( toggleProps ) => (\n\t\t\t\t\t<DropdownMenu\n\t\t\t\t\t\tclassName=\"block-editor-block-switcher\"\n\t\t\t\t\t\tlabel={ blockSwitcherLabel }\n\t\t\t\t\t\tpopoverProps={ {\n\t\t\t\t\t\t\tplacement: 'bottom-start',\n\t\t\t\t\t\t\tclassName: 'block-editor-block-switcher__popover',\n\t\t\t\t\t\t} }\n\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<BlockIcon\n\t\t\t\t\t\t\t\t\ticon={ icon }\n\t\t\t\t\t\t\t\t\tclassName=\"block-editor-block-switcher__toggle\"\n\t\t\t\t\t\t\t\t\tshowColors\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{ ( isReusable || isTemplate ) && (\n\t\t\t\t\t\t\t\t\t<span className=\"block-editor-block-switcher__toggle-text\">\n\t\t\t\t\t\t\t\t\t\t{ blockTitle }\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttoggleProps={ {\n\t\t\t\t\t\t\tdescribedBy: blockSwitcherDescription,\n\t\t\t\t\t\t\t...toggleProps,\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tmenuProps={ { orientation: 'both' } }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ ( { onClose } ) =>\n\t\t\t\t\t\t\tshowDropDown && (\n\t\t\t\t\t\t\t\t<div className=\"block-editor-block-switcher__container\">\n\t\t\t\t\t\t\t\t\t{ hasPatternTransformation && (\n\t\t\t\t\t\t\t\t\t\t<PatternTransformationsMenu\n\t\t\t\t\t\t\t\t\t\t\tblocks={ blocks }\n\t\t\t\t\t\t\t\t\t\t\tpatterns={ patterns }\n\t\t\t\t\t\t\t\t\t\t\tonSelect={ (\n\t\t\t\t\t\t\t\t\t\t\t\ttransformedBlocks\n\t\t\t\t\t\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\t\t\t\t\t\tonPatternTransform(\n\t\t\t\t\t\t\t\t\t\t\t\t\ttransformedBlocks\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t{ hasBlockOrBlockVariationTransforms && (\n\t\t\t\t\t\t\t\t\t\t<BlockTransformationsMenu\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"block-editor-block-switcher__transforms__menugroup\"\n\t\t\t\t\t\t\t\t\t\t\tpossibleBlockTransformations={\n\t\t\t\t\t\t\t\t\t\t\t\tpossibleBlockTransformations\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tpossibleBlockVariationTransformations={\n\t\t\t\t\t\t\t\t\t\t\t\tblockVariationTransformations\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tblocks={ blocks }\n\t\t\t\t\t\t\t\t\t\t\tonSelect={ ( name ) => {\n\t\t\t\t\t\t\t\t\t\t\t\tonBlockTransform( name );\n\t\t\t\t\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t\tonSelectVariation={ ( name ) => {\n\t\t\t\t\t\t\t\t\t\t\t\tonBlockVariationTransform(\n\t\t\t\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t{ hasBlockStyles && (\n\t\t\t\t\t\t\t\t\t\t<BlockStylesMenu\n\t\t\t\t\t\t\t\t\t\t\thoveredBlock={ blocks[ 0 ] }\n\t\t\t\t\t\t\t\t\t\t\tonSwitch={ onClose }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</DropdownMenu>\n\t\t\t\t) }\n\t\t\t</ToolbarItem>\n\t\t</ToolbarGroup>\n\t);\n};\n\nexport const BlockSwitcher = ( { clientIds } ) => {\n\tconst blocks = useSelect(\n\t\t( select ) =>\n\t\t\tselect( blockEditorStore ).getBlocksByClientId( clientIds ),\n\t\t[ clientIds ]\n\t);\n\n\tif ( ! blocks.length || blocks.some( ( block ) => ! block ) ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<BlockSwitcherDropdownMenu clientIds={ clientIds } blocks={ blocks } />\n\t);\n};\n\nexport default BlockSwitcher;\n"]}