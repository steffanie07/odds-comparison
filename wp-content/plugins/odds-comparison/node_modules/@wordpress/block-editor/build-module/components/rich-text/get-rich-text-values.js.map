{"version":3,"sources":["@wordpress/block-editor/src/components/rich-text/get-rich-text-values.js"],"names":["RawHTML","StrictMode","Fragment","getSaveElement","__unstableGetBlockProps","getBlockProps","InnerBlocks","Content","addValuesForElement","element","args","undefined","Array","isArray","addValuesForElements","type","props","children","addValuesForBlocks","values","push","value","prototype","render","i","length","_getSaveElement","name","attributes","innerBlocks","map","block","blocks","saveElement","getRichTextValues","skipFilters"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { RawHTML, StrictMode, Fragment } from '@wordpress/element';\nimport {\n\tgetSaveElement,\n\t__unstableGetBlockProps as getBlockProps,\n} from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport InnerBlocks from '../inner-blocks';\nimport { Content } from './content';\n\n/*\n * This function is similar to `@wordpress/element`'s `renderToString` function,\n * except that it does not render the elements to a string, but instead collects\n * the values of all rich text `Content` elements.\n */\nfunction addValuesForElement( element, ...args ) {\n\tif ( null === element || undefined === element || false === element ) {\n\t\treturn;\n\t}\n\n\tif ( Array.isArray( element ) ) {\n\t\treturn addValuesForElements( element, ...args );\n\t}\n\n\tswitch ( typeof element ) {\n\t\tcase 'string':\n\t\tcase 'number':\n\t\t\treturn;\n\t}\n\n\tconst { type, props } = element;\n\n\tswitch ( type ) {\n\t\tcase StrictMode:\n\t\tcase Fragment:\n\t\t\treturn addValuesForElements( props.children, ...args );\n\t\tcase RawHTML:\n\t\t\treturn;\n\t\tcase InnerBlocks.Content:\n\t\t\treturn addValuesForBlocks( ...args );\n\t\tcase Content:\n\t\t\tconst [ values ] = args;\n\t\t\tvalues.push( props.value );\n\t\t\treturn;\n\t}\n\n\tswitch ( typeof type ) {\n\t\tcase 'string':\n\t\t\tif ( typeof props.children !== 'undefined' ) {\n\t\t\t\treturn addValuesForElements( props.children, ...args );\n\t\t\t}\n\t\t\treturn;\n\t\tcase 'function':\n\t\t\tif (\n\t\t\t\ttype.prototype &&\n\t\t\t\ttypeof type.prototype.render === 'function'\n\t\t\t) {\n\t\t\t\treturn addValuesForElement(\n\t\t\t\t\tnew type( props ).render(),\n\t\t\t\t\t...args\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn addValuesForElement( type( props ), ...args );\n\t}\n}\n\nfunction addValuesForElements( children, ...args ) {\n\tchildren = Array.isArray( children ) ? children : [ children ];\n\n\tfor ( let i = 0; i < children.length; i++ ) {\n\t\taddValuesForElement( children[ i ], ...args );\n\t}\n}\n\nfunction _getSaveElement( name, attributes, innerBlocks ) {\n\treturn getSaveElement(\n\t\tname,\n\t\tattributes,\n\t\tinnerBlocks.map( ( block ) =>\n\t\t\t_getSaveElement( block.name, block.attributes, block.innerBlocks )\n\t\t)\n\t);\n}\n\nfunction addValuesForBlocks( values, blocks ) {\n\tfor ( let i = 0; i < blocks.length; i++ ) {\n\t\tconst { name, attributes, innerBlocks } = blocks[ i ];\n\t\tconst saveElement = _getSaveElement( name, attributes, innerBlocks );\n\t\taddValuesForElement( saveElement, values, innerBlocks );\n\t}\n}\n\nexport function getRichTextValues( blocks = [] ) {\n\tgetBlockProps.skipFilters = true;\n\tconst values = [];\n\taddValuesForBlocks( values, blocks );\n\tgetBlockProps.skipFilters = false;\n\treturn values;\n}\n"]}