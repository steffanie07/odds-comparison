{"version":3,"sources":["@wordpress/block-editor/src/components/convert-to-group-buttons/index.js"],"names":["MenuItem","_x","switchToBlockType","useDispatch","store","blockEditorStore","useConvertToGroupButtonProps","BlockGroupToolbar","ConvertToGroupButton","clientIds","isGroupable","isUngroupable","onUngroup","blocksSelection","groupingBlockName","onClose","replaceBlocks","onConvertToGroup","newBlocks","onConvertFromGroup","innerBlocks","length","attributes"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,QAAT,QAAyB,uBAAzB;AACA,SAASC,EAAT,QAAmB,iBAAnB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,WAAT,QAA4B,iBAA5B;AAEA;AACA;AACA;;AACA,SAASC,KAAK,IAAIC,gBAAlB,QAA0C,aAA1C;AACA,OAAOC,4BAAP,MAAyC,qCAAzC;AACA,OAAOC,iBAAP,MAA8B,WAA9B;;AAEA,SAASC,oBAAT,CAA+B;AAC9BC,EAAAA,SAD8B;AAE9BC,EAAAA,WAF8B;AAG9BC,EAAAA,aAH8B;AAI9BC,EAAAA,SAJ8B;AAK9BC,EAAAA,eAL8B;AAM9BC,EAAAA,iBAN8B;AAO9BC,EAAAA,OAAO,GAAG,MAAM,CAAE;AAPY,CAA/B,EAQI;AACH,QAAM;AAAEC,IAAAA;AAAF,MAAoBb,WAAW,CAAEE,gBAAF,CAArC;;AACA,QAAMY,gBAAgB,GAAG,MAAM;AAC9B;AACA,UAAMC,SAAS,GAAGhB,iBAAiB,CAClCW,eADkC,EAElCC,iBAFkC,CAAnC;;AAIA,QAAKI,SAAL,EAAiB;AAChBF,MAAAA,aAAa,CAAEP,SAAF,EAAaS,SAAb,CAAb;AACA;AACD,GATD;;AAWA,QAAMC,kBAAkB,GAAG,MAAM;AAChC,QAAIC,WAAW,GAAGP,eAAe,CAAE,CAAF,CAAf,CAAqBO,WAAvC;;AACA,QAAK,CAAEA,WAAW,CAACC,MAAnB,EAA4B;AAC3B;AACA;;AACD,QAAKT,SAAL,EAAiB;AAChBQ,MAAAA,WAAW,GAAGR,SAAS,CACtBC,eAAe,CAAE,CAAF,CAAf,CAAqBS,UADC,EAEtBT,eAAe,CAAE,CAAF,CAAf,CAAqBO,WAFC,CAAvB;AAIA;;AACDJ,IAAAA,aAAa,CAAEP,SAAF,EAAaW,WAAb,CAAb;AACA,GAZD;;AAcA,MAAK,CAAEV,WAAF,IAAiB,CAAEC,aAAxB,EAAwC;AACvC,WAAO,IAAP;AACA;;AAED,SACC,8BACGD,WAAW,IACZ,cAAC,QAAD;AACC,IAAA,OAAO,EAAG,MAAM;AACfO,MAAAA,gBAAgB;AAChBF,MAAAA,OAAO;AACP;AAJF,KAMGd,EAAE,CAAE,OAAF,EAAW,MAAX,CANL,CAFF,EAWGU,aAAa,IACd,cAAC,QAAD;AACC,IAAA,OAAO,EAAG,MAAM;AACfQ,MAAAA,kBAAkB;AAClBJ,MAAAA,OAAO;AACP;AAJF,KAMGd,EAAE,CACH,SADG,EAEH,+FAFG,CANL,CAZF,CADD;AA2BA;;AAED,SACCM,iBADD,EAECC,oBAFD,EAGCF,4BAHD","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { MenuItem } from '@wordpress/components';\nimport { _x } from '@wordpress/i18n';\nimport { switchToBlockType } from '@wordpress/blocks';\nimport { useDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\nimport useConvertToGroupButtonProps from './use-convert-to-group-button-props';\nimport BlockGroupToolbar from './toolbar';\n\nfunction ConvertToGroupButton( {\n\tclientIds,\n\tisGroupable,\n\tisUngroupable,\n\tonUngroup,\n\tblocksSelection,\n\tgroupingBlockName,\n\tonClose = () => {},\n} ) {\n\tconst { replaceBlocks } = useDispatch( blockEditorStore );\n\tconst onConvertToGroup = () => {\n\t\t// Activate the `transform` on the Grouping Block which does the conversion.\n\t\tconst newBlocks = switchToBlockType(\n\t\t\tblocksSelection,\n\t\t\tgroupingBlockName\n\t\t);\n\t\tif ( newBlocks ) {\n\t\t\treplaceBlocks( clientIds, newBlocks );\n\t\t}\n\t};\n\n\tconst onConvertFromGroup = () => {\n\t\tlet innerBlocks = blocksSelection[ 0 ].innerBlocks;\n\t\tif ( ! innerBlocks.length ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( onUngroup ) {\n\t\t\tinnerBlocks = onUngroup(\n\t\t\t\tblocksSelection[ 0 ].attributes,\n\t\t\t\tblocksSelection[ 0 ].innerBlocks\n\t\t\t);\n\t\t}\n\t\treplaceBlocks( clientIds, innerBlocks );\n\t};\n\n\tif ( ! isGroupable && ! isUngroupable ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{ isGroupable && (\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\tonConvertToGroup();\n\t\t\t\t\t\tonClose();\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t{ _x( 'Group', 'verb' ) }\n\t\t\t\t</MenuItem>\n\t\t\t) }\n\t\t\t{ isUngroupable && (\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\tonConvertFromGroup();\n\t\t\t\t\t\tonClose();\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t{ _x(\n\t\t\t\t\t\t'Ungroup',\n\t\t\t\t\t\t'Ungrouping blocks from within a grouping block back into individual blocks within the Editor '\n\t\t\t\t\t) }\n\t\t\t\t</MenuItem>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nexport {\n\tBlockGroupToolbar,\n\tConvertToGroupButton,\n\tuseConvertToGroupButtonProps,\n};\n"]}