{"version":3,"sources":["@wordpress/block-editor/src/components/writing-mode-control/index.js"],"names":["WRITING_MODES","name","value","icon","textHorizontal","textVertical","WritingModeControl","className","onChange","map","writingMode","undefined"],"mappings":";;;;;;;;;;;AAGA;;AAKA;;AACA;;AACA;;AAVA;AACA;AACA;;AAGA;AACA;AACA;AAKA,MAAMA,aAAa,GAAG,CACrB;AACCC,EAAAA,IAAI,EAAE,cAAI,YAAJ,CADP;AAECC,EAAAA,KAAK,EAAE,eAFR;AAGCC,EAAAA,IAAI,EAAEC;AAHP,CADqB,EAMrB;AACCH,EAAAA,IAAI,EAAE,cAAI,UAAJ,CADP;AAECC,EAAAA,KAAK,EAAE,qBAAU,aAAV,GAA0B,aAFlC;AAGCC,EAAAA,IAAI,EAAEE;AAHP,CANqB,CAAtB;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACe,SAASC,kBAAT,CAA6B;AAAEC,EAAAA,SAAF;AAAaL,EAAAA,KAAb;AAAoBM,EAAAA;AAApB,CAA7B,EAA8D;AAC5E,SACC;AACC,IAAA,SAAS,EAAG,yBACX,mCADW,EAEXD,SAFW;AADb,KAMC,4BAAC,uBAAD,CAAa,WAAb;AAAyB,IAAA,EAAE,EAAC;AAA5B,KACG,cAAI,aAAJ,CADH,CAND,EASC;AAAK,IAAA,SAAS,EAAC;AAAf,KACGP,aAAa,CAACS,GAAd,CAAqBC,WAAF,IAAmB;AACvC,WACC,4BAAC,kBAAD;AACC,MAAA,GAAG,EAAGA,WAAW,CAACR,KADnB;AAEC,MAAA,IAAI,EAAGQ,WAAW,CAACP,IAFpB;AAGC,MAAA,KAAK,EAAGO,WAAW,CAACT,IAHrB;AAIC,MAAA,SAAS,EAAGS,WAAW,CAACR,KAAZ,KAAsBA,KAJnC;AAKC,MAAA,OAAO,EAAG,MAAM;AACfM,QAAAA,QAAQ,CACPE,WAAW,CAACR,KAAZ,KAAsBA,KAAtB,GACGS,SADH,GAEGD,WAAW,CAACR,KAHR,CAAR;AAKA;AAXF,MADD;AAeA,GAhBC,CADH,CATD,CADD;AA+BA","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { BaseControl, Button } from '@wordpress/components';\nimport { __, isRTL } from '@wordpress/i18n';\nimport { textHorizontal, textVertical } from '@wordpress/icons';\n\nconst WRITING_MODES = [\n\t{\n\t\tname: __( 'Horizontal' ),\n\t\tvalue: 'horizontal-tb',\n\t\ticon: textHorizontal,\n\t},\n\t{\n\t\tname: __( 'Vertical' ),\n\t\tvalue: isRTL() ? 'vertical-lr' : 'vertical-rl',\n\t\ticon: textVertical,\n\t},\n];\n\n/**\n * Control to facilitate writing mode selections.\n *\n * @param {Object}   props           Component props.\n * @param {string}   props.className Class name to add to the control.\n * @param {string}   props.value     Currently selected writing mode.\n * @param {Function} props.onChange  Handles change in the writing mode selection.\n *\n * @return {WPElement} Writing Mode control.\n */\nexport default function WritingModeControl( { className, value, onChange } ) {\n\treturn (\n\t\t<fieldset\n\t\t\tclassName={ classnames(\n\t\t\t\t'block-editor-writing-mode-control',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t>\n\t\t\t<BaseControl.VisualLabel as=\"legend\">\n\t\t\t\t{ __( 'Orientation' ) }\n\t\t\t</BaseControl.VisualLabel>\n\t\t\t<div className=\"block-editor-writing-mode-control__buttons\">\n\t\t\t\t{ WRITING_MODES.map( ( writingMode ) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkey={ writingMode.value }\n\t\t\t\t\t\t\ticon={ writingMode.icon }\n\t\t\t\t\t\t\tlabel={ writingMode.name }\n\t\t\t\t\t\t\tisPressed={ writingMode.value === value }\n\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\tonChange(\n\t\t\t\t\t\t\t\t\twritingMode.value === value\n\t\t\t\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t\t\t\t: writingMode.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</div>\n\t\t</fieldset>\n\t);\n}\n"]}